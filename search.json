[{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"caravagnalab.github.io/INCOMMON/articles/INCOMMON.html","id":"the-incommon-mutation-copy-number-caller","dir":"Articles","previous_headings":"","what":"The INCOMMON mutation copy-number caller","title":"INCOMMON","text":"INCOMMON Bayesian model can infer, tumour mutation, ()() total copy number mutant locus, (ii)(ii) mutation multiplicity (.e., number DNA copies harbour mutation). information provides allele-specific configuration mutant locus. INCOMMON takes input read counts data nn mutations X={x1,…,xn}X=\\{x_1, \\ldots, x_n\\} develop joint likelihood} p(X∣Θ)=∏xi∈Xp(xi∣Θ)=∏xi∈Xp(di∣Θ)p(ri∣di,Θ).\\begin{equation} {p(X\\mid \\Theta) =  \\prod_{x_i \\X} p(x_i \\mid \\Theta) = \\prod_{x_i\\X} p(d_i \\mid \\Theta)\\, p(r_i \\mid d_i, \\Theta) \\,.} \\end{equation} every mutation xi=⟨ri,di⟩x_i=\\langle r_i, d_i\\rangle, INCOMMON uses number reads rir_i alternative allele total reads did_i (depth sequencing). model infers two sample-specific parameters, (ii) sample purity (0<π≤10 < \\pi \\leq 1), (iiii) rate reads per chromosome copy (η∈ℝ+\\eta \\\\mathbb{R}^+), two mutation-specific parameters, (iiiiii) tumour total copy number locus (ki∈ℤ+k_i\\\\mathbb{Z}^+) (iviv) mutation multiplicty (mi∈ℤ+m_i\\\\mathbb{Z}^+, mi≤kim_i\\leq k_i). model adopted INCOMMON relates copy number coverage linearly, expected number reads kk chromosome copies kηk\\eta. INCOMMON links number reads multiplicity total copy number considering tumour/ normal admixing p(di∣π,η,ki)=Poisson(di∣λ)λ=(1−π)2η+πηkip(ri∣π,ki,mi)=Binomial(ri∣di,φ)φ=miπ2(1−π)+kiπ\\begin{align} p(d_i\\mid \\pi, \\eta, k_i) & = \\text{Poisson}(d_i \\mid \\lambda) &&  \\lambda  = (1-\\pi)2\\eta + \\pi \\eta k_i  \\label{eq:likelihood_pois}\\\\ p(r_i\\mid  \\pi, k_i, m_i) & = \\text{Binomial}(r_i \\mid d_i, \\varphi) && \\varphi = \\frac{m_i\\pi}{2\\left(1-\\pi\\right)+k_i\\pi}\\label{eq:likelihood_binom} \\end{align} sequencing depth follows Poisson distribution expected number reads λ\\lambda defined combining tumour normal readouts. Given depth, number mutant reads follows Binomial distribution success probability φ\\varphi determined mixing tumour normal success rates. INCOMMON uses Markov Chain Monte Carlo (implemented stan) sampling estimate posterior distribution mm, kk, η\\eta π\\pi. leverage massive amount public WGS data human tumours gain precision targeted assays, default INCOMMON uses biologically informed prior distribution copy number multiplicity configurations PCAWG HMF cohorts. support orthogonal estimation tumour purity (e.g. histopathological evaluation) resist potential error input estimate, INCOMMON centres prior around purity measurements provided sample. posterior inference, INCOMMON uses posterior predictive checks monitor discrepancy observed values inferred posterior distributions kk, mm, η\\eta π\\pi.","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/INCOMMON.html","id":"input-format","dir":"Articles","previous_headings":"","what":"Input format","title":"INCOMMON","text":"input required INCOMMMON classification consists two data tables: genomic_data: data table annotated mutations columns indicating, mutation, sample name sample, mutant chromosome chr, start position , end position , reference allele ref, alternative allele alt, sequencing depth DP, number reads variant NV, variant allele frequency VAF, mutant gene name gene Hugo Symbol, possibly protein sequence variant HGVS recommended format (preferably 1-letter amino-acid code HGVSp_Short). clinical_data: data table clinical data matched sample names sample purity purity (required), clinical features like tumor type (ONCOTREE code) tumor_type (required tumor specific priors), survival data OS_STATUS time OS_MONTHS (required survival analysis), metastasis data SAMPLE_TYPE (Primary Metastasis), number metastases MET_COUNT (required metastatic propensity analysis) metastatic site METASTATIC_SITE (required metastatic tropism analysis), plus useful covariate. gene_roles: data table reporting gene names gene associated roles gene_role (“oncogene” “TSG”). INCOMMON provides set gene roles extracted COSMIC Cancer Gene Census (v98) default. input downstream analysis checked cast expected format function init. INCOMMON provides data publicly available MSK-MetTropism cohort correct format. following example shows input pre-processed INCOMMON:","code":"data(MSK_genomic_data) data(MSK_clinical_data) data(cancer_gene_census)  x = init(   genomic_data = MSK_genomic_data,   clinical_data = MSK_clinical_data,   gene_roles = cancer_gene_census ) #> ── INCOMMON - Inference of copy number and mutation multiplicity in oncology ─── #>  #> ── Genomic data ── #>  #> ✔ Found 25659 samples, with 224939 mutations in 491 genes #> ! No read counts found for 1393 mutations in 1393 samples #> ! Gene name not provided for 1393 mutations #> ! 201 genes could not be assigned a role (TSG or oncogene) #>  #> ── Clinical data ── #>  #> ℹ Provided clinical features: #> ✔ sample (required for classification) #> ✔ purity (required for classification) #> ✔ tumor_type #> ✔ OS_MONTHS #> ✔ OS_STATUS #> ✔ SAMPLE_TYPE #> ✔ MET_COUNT #> ✔ METASTATIC_SITE #> ✔ MET_SITE_COUNT #> ✔ PRIMARY_SITE #> ✔ SUBTYPE_ABBREVIATION #> ✔ GENE_PANEL #> ✔ SEX #> ✔ TMB_NONSYNONYMOUS #> ✔ FGA #> ✔ AGE_AT_SEQUENCING #> ✔ RACE #> ✔ Found 25257 matching samples #> ✖ Found 513 unmatched samples  print(x) #> ── [ INCOMMON ]  175054 PASS mutations across 24018 samples, with 290 mutant gen #> ℹ Average sample purity: 0.4 #> ℹ Average sequencing depth: 649 #> # A tibble: 175,054 × 27 #>    sample    tumor_type purity chr     from     to ref   alt      DP    NV   VAF #>    <chr>     <chr>       <dbl> <chr>  <dbl>  <dbl> <chr> <chr> <int> <int> <dbl> #>  1 P-0028912 CHOL          0.3 chr17 7.58e6 7.58e6 G     A       837   133 0.159 #>  2 P-0028912 CHOL          0.3 chrX  5.32e7 5.32e7 G     A       832    85 0.102 #>  3 P-0003698 BLCA          0.2 chr17 7.58e6 7.58e6 C     A       437   109 0.249 #>  4 P-0003698 BLCA          0.2 chr5  1.49e8 1.49e8 C     T       360    36 0.1   #>  5 P-0003698 BLCA          0.2 chr13 3.29e7 3.29e7 G     C      1027   162 0.158 #>  6 P-0003698 BLCA          0.2 chr13 3.29e7 3.29e7 G     C      1021   182 0.178 #>  7 P-0003698 BLCA          0.2 chr19 1.11e7 1.11e7 G     T       573    98 0.171 #>  8 P-0003698 BLCA          0.2 chr22 4.15e7 4.15e7 G     A       416    45 0.108 #>  9 P-0003698 BLCA          0.2 chrX  4.49e7 4.49e7 C     T       730   194 0.266 #> 10 P-0003823 BLCA          0.6 chr5  1.30e6 1.30e6 G     A       218   138 0.633 #> # ℹ 175,044 more rows #> # ℹ 16 more variables: gene <chr>, gene_role <chr>, OS_MONTHS <dbl>, #> #   OS_STATUS <dbl>, SAMPLE_TYPE <chr>, MET_COUNT <dbl>, METASTATIC_SITE <chr>, #> #   MET_SITE_COUNT <dbl>, PRIMARY_SITE <chr>, SUBTYPE_ABBREVIATION <chr>, #> #   GENE_PANEL <chr>, SEX <chr>, TMB_NONSYNONYMOUS <dbl>, FGA <dbl>, #> #   AGE_AT_SEQUENCING <dbl>, RACE <chr>"},{"path":"caravagnalab.github.io/INCOMMON/articles/INCOMMON.html","id":"gene-mutant-dosage","dir":"Articles","previous_headings":"","what":"Gene mutant dosage","title":"INCOMMON","text":"Downstream INCOMMON classification, tumour genome can interpreted terms gene mutant dosage tumor suppressor genes (typically mutations LOH) enhanced activation oncogenes (typically mutations mutant copy gain). Mutant dosage classes (low, balanced high) derived fraction alleles carrying mutation (FAM) FAMg,t=∑k=1kmax∑m=1kmkp(m,k|Xg,t),\\begin{equation}\\label{e:expected_fma}     \\text{FAM}_{g,t}=\\sum\\limits_{k=1}^{k_{max}}\\sum_{m=1}^k\\frac{m}{k}p(m,k\\:|\\: X_{g,t})\\, , \\end{equation} derived full posterior distribution p(m,k|Xg,t)p(m,k\\:|\\: X_{g,t}), computed INCOMMON.","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/INCOMMON.html","id":"survival-analysis","dir":"Articles","previous_headings":"","what":"Survival analysis","title":"INCOMMON","text":"patients’ survival status time provided features clinical data table clinical_table, survival analysis can performed. Downstream classification, INCOMMON can stratify patients based mutant dosage TSG oncogene interest. INCOMMON provides following functions, dedicated fitting survival data: kaplan_meier_fit uses Kaplan-Meier estimator fit survival data patients stratified respect status specific tumor_type gene (low, balanced high mutant dosage) cox_fit uses Cox proportional hazard ratio model fit survival data. addition arguments tumor_type gene, accepts covariates, given provided clinical_table.","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/INCOMMON.html","id":"metastatic-patterns","dir":"Articles","previous_headings":"","what":"Metastatic patterns","title":"INCOMMON","text":"information metastatisation provided, type sample (primary tumor metastasis), whether patients metastatic , sites metastatisation primary tumors, clinical data table clinical_table, analysis metastatic propensity tropism based INCOMMON classification genome interpretation can performed. INCOMMON provides following functions analysis metastases: met_propensity: uses logistic regression test compute odds ratio () metastatisation patients identified mutant dosage gene (low, balanced high) specific types primary tumors tumor_type. met_tropism: uses logistic regression test compute odds ratio () metastatise specific site METASTATIC_SITE patients identified two mutational statuses gene (Mutant TSG versus without LOH Mutant oncogene versus without amplification) specific types primary tumors tumor_type.","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/a1_priors_k_m.html","id":"empirical-priors-from-pcawg","dir":"Articles","previous_headings":"","what":"1.1 Empirical priors from PCAWG","title":"1. Prior distribution of mutation copy number and multiplicity from PCAWG","text":"inference mutation copy number multiplicity specific gene samples specific tumour type, Dirichlet prior distribution p(k,m)=pk,mp\\left(k,m\\right)=p_{k,m}, kk total copy number mm mutation multiplicity, can used obtain confident predictions, given pk,mp_{k,m} obtained reliable copy number calls. default, INCOMMON relies prior probability obtained PCAWG HMF whole genomes. set high-confidence copy number calls validated quality control, obtained pk,mp_{k,m} gene frequency corresponding INCOMMON class. empirical priors PCAWG HMF provided internal data table priors_pcawg_hmf following format , gene tumour_type, N represents total counts used dataset, n count specific combination k m.","code":"data(\"priors_pcawg_hmf\") #> Warning in instance$preRenderHook(instance): It seems your data is too big for #> client-side DataTables. You may consider server-side processing: #> https://rstudio.github.io/DT/server.html"},{"path":"caravagnalab.github.io/INCOMMON/articles/a1_priors_k_m.html","id":"tumour-specific-priors","dir":"Articles","previous_headings":"1.1 Empirical priors from PCAWG","what":"1.1.1 Tumour-specific priors","title":"1. Prior distribution of mutation copy number and multiplicity from PCAWG","text":"gene mutated least 5% samples tumour type, least 10 samples, built tumour-specific prior. case, instance, KRAS pancreatic adenocarcinoma (PAAD):","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/a1_priors_k_m.html","id":"pan-cancer-priors","dir":"Articles","previous_headings":"1.1 Empirical priors from PCAWG","what":"1.1.2 Pan-cancer priors","title":"1. Prior distribution of mutation copy number and multiplicity from PCAWG","text":"cases requirements tumour-specific prior satisified, pooled tumour types pan-cancer prior. priors_pcawg_hmf table, priors identified tumor_type equal ‘PANCA’, meaning pan-cancer.","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/a1_priors_k_m.html","id":"user-defined-priors","dir":"Articles","previous_headings":"","what":"1.2 User-defined priors","title":"1. Prior distribution of mutation copy number and multiplicity from PCAWG","text":"user may want leverage priors obtained different way (e.g. datasets specific gene tumour type included priors_pcawg_hmf), can easily creating similar data table. example: requirement n positive number N sum values n gene tumour type pair.","code":"my_priors = expand.grid(k=1:8, m = 1:8) %>%    dplyr::mutate(     gene = 'my_gene',     tumor_type = 'my_tumor_type') %>%    dplyr::filter(m<=k)  my_priors$n = rnorm(n = nrow(my_priors), mean = 50, sd = 10) my_priors$N = sum(my_priors$n)"},{"path":"caravagnalab.github.io/INCOMMON/articles/a1_priors_k_m.html","id":"visualising-priors","dir":"Articles","previous_headings":"","what":"1.3 Visualising priors","title":"1. Prior distribution of mutation copy number and multiplicity from PCAWG","text":"prior distribution used fit can visualised posteriori using internal plotting function plot_prior. can plot prior distribution specific gene tumour type used example classified MSK-MET data. example:  example shows , analysis PCAWG HMF datasets, KRAS mutations pancreatic adenocarcinoma (PAAD) frequently found (k=2,m=1)(k=2,m=1) configurations (N=689N=689 samples), .e. heterozygous diploid configurations. relatively high frequency also found configurations gain mutant copy: (k=2,m=2)(k=2,m=2) (CNLOH, N=81N=81 samples), (k=3,m=2)(k=3,m=2) (mutant gain trisomy, N=106N=106 samples) (k=3,m=2)(k=3,m=2) (mutant gain tetrasomy, N=116N=116 samples).","code":"plot_prior(x = priors_pcawg_hmf,             gene = 'KRAS',            tumor_type = 'PAAD')"},{"path":"caravagnalab.github.io/INCOMMON/articles/a2_classify_mutations.html","id":"input-preparation","dir":"Articles","previous_headings":"","what":"2.1 Input preparation","title":"2. Inference of mutation copy number and multiplicity","text":"minimal input INCOMMON analyses consists two pieces.","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/a2_classify_mutations.html","id":"genomic-data","dir":"Articles","previous_headings":"2.1 Input preparation","what":"2.1.1 Genomic data","title":"2. Inference of mutation copy number and multiplicity","text":"First need table genomic_data (mutations) required columns chr, , , ref, alt, DP, NV, VAF, gene. following example taken internal dataset obtained MSK-MetTropism cohort:","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/a2_classify_mutations.html","id":"clinical-data","dir":"Articles","previous_headings":"2.1 Input preparation","what":"2.1.2 Clinical data","title":"2. Inference of mutation copy number and multiplicity","text":"Second, need table clinical data least columns sample (sample names matching ones genomic_data), purity (purity sample) tumor_type (annotated tumour type sample), required using tumour-specific priors. following example taken internal dataset obtained MSK-MetTropism cohort:","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/a2_classify_mutations.html","id":"initialisation-of-the-input","dir":"Articles","previous_headings":"2.1 Input preparation","what":"2.1.3 Initialisation of the input","title":"2. Inference of mutation copy number and multiplicity","text":"first thing initialise input INCOMMON format, function init. function takes input tables genomic_data clinical_data, plus optionally, list gene roles. INCOMMON provides default list cancer_gene_census obtained COSMIC Cancer Gene Census v.98. required format following: now can create input INCOMMON object function init: MSK-MET dataset comprises 25257 samples matched clinical data. average sequencing depth 649 average sample purity 0.4. 175054 mutations flagged PASS ones satisfy requirements INCOMMON classification: available non-negative sample purity; integer sequencing depth number reads variant, character gene names etc.","code":"x = init(genomic_data = MSK_genomic_data,           clinical_data = MSK_clinical_data,           gene_roles = cancer_gene_census) #> ── INCOMMON - Inference of copy number and mutation multiplicity in oncology ─── #>  #> ── Genomic data ── #>  #> ✔ Found 25659 samples, with 224939 mutations in 491 genes #> ! No read counts found for 1393 mutations in 1393 samples #> ! Gene name not provided for 1393 mutations #> ! 201 genes could not be assigned a role (TSG or oncogene) #>  #> ── Clinical data ── #>  #> ℹ Provided clinical features: #> ✔ sample (required for classification) #> ✔ purity (required for classification) #> ✔ tumor_type #> ✔ OS_MONTHS #> ✔ OS_STATUS #> ✔ SAMPLE_TYPE #> ✔ MET_COUNT #> ✔ METASTATIC_SITE #> ✔ MET_SITE_COUNT #> ✔ PRIMARY_SITE #> ✔ SUBTYPE_ABBREVIATION #> ✔ GENE_PANEL #> ✔ SEX #> ✔ TMB_NONSYNONYMOUS #> ✔ FGA #> ✔ AGE_AT_SEQUENCING #> ✔ RACE #> ✔ Found 25257 matching samples #> ✖ Found 513 unmatched samples  print(x) #> ── [ INCOMMON ]  175054 PASS mutations across 24018 samples, with 290 mutant gen #> ℹ Average sample purity: 0.4 #> ℹ Average sequencing depth: 649 #> # A tibble: 175,054 × 27 #>    sample    tumor_type purity chr     from     to ref   alt      DP    NV   VAF #>    <chr>     <chr>       <dbl> <chr>  <dbl>  <dbl> <chr> <chr> <int> <int> <dbl> #>  1 P-0028912 CHOL          0.3 chr17 7.58e6 7.58e6 G     A       837   133 0.159 #>  2 P-0028912 CHOL          0.3 chrX  5.32e7 5.32e7 G     A       832    85 0.102 #>  3 P-0003698 BLCA          0.2 chr17 7.58e6 7.58e6 C     A       437   109 0.249 #>  4 P-0003698 BLCA          0.2 chr5  1.49e8 1.49e8 C     T       360    36 0.1   #>  5 P-0003698 BLCA          0.2 chr13 3.29e7 3.29e7 G     C      1027   162 0.158 #>  6 P-0003698 BLCA          0.2 chr13 3.29e7 3.29e7 G     C      1021   182 0.178 #>  7 P-0003698 BLCA          0.2 chr19 1.11e7 1.11e7 G     T       573    98 0.171 #>  8 P-0003698 BLCA          0.2 chr22 4.15e7 4.15e7 G     A       416    45 0.108 #>  9 P-0003698 BLCA          0.2 chrX  4.49e7 4.49e7 C     T       730   194 0.266 #> 10 P-0003823 BLCA          0.6 chr5  1.30e6 1.30e6 G     A       218   138 0.633 #> # ℹ 175,044 more rows #> # ℹ 16 more variables: gene <chr>, gene_role <chr>, OS_MONTHS <dbl>, #> #   OS_STATUS <dbl>, SAMPLE_TYPE <chr>, MET_COUNT <dbl>, METASTATIC_SITE <chr>, #> #   MET_SITE_COUNT <dbl>, PRIMARY_SITE <chr>, SUBTYPE_ABBREVIATION <chr>, #> #   GENE_PANEL <chr>, SEX <chr>, TMB_NONSYNONYMOUS <dbl>, FGA <dbl>, #> #   AGE_AT_SEQUENCING <dbl>, RACE <chr>"},{"path":"caravagnalab.github.io/INCOMMON/articles/a2_classify_mutations.html","id":"inference-of-copy-number-and-mutation-multiplicity","dir":"Articles","previous_headings":"","what":"2.2 Inference of copy number and mutation multiplicity","title":"2. Inference of mutation copy number and multiplicity","text":"principle, INCOMMON can infer configuration total copy number k mutation multiplicity m, given k m integer numbers m≤km\\leq k. Since infinite number possible configurations, maximum value k_max k, expected found dataset, must set prior classification task. default, INCOMMON uses kmax=8k_{max}=8.","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/a2_classify_mutations.html","id":"rate-of-read-counts-per-chromosome-copy","dir":"Articles","previous_headings":"2.2 Inference of copy number and mutation multiplicity","what":"2.2.1 Rate of read counts per chromosome copy","title":"2. Inference of mutation copy number and multiplicity","text":"INCOMMON Bayesian model infers mutation copy number multiplicity read counts. essential parameter model rate read counts per chromosome copy η\\eta. guide inference parameter, use Gamma prior distribution. priori information access (k,m)(k,m) configurations mutant genes. use compute prior distribution η\\eta dataset , using functioncompute_eta_prior tumour type dataset, estimated empirical mean variance η\\eta, can straightforwardly transformed shape parameters αη\\alpha_\\eta βeta\\beta_eta Gamma distribution. can visualise prior distribution tumour type using function plot_eta_prior: plot shows, tumour type pan-cancer level (PANCA), distribution total read counts, potentially confused diverse copy-number configurations sample purities, underlying prior distribution rate read counts per chromosome copy.","code":"data('priors_pcawg_hmf')  priors_eta = compute_eta_prior(x = x, priors_k_m = priors_pcawg_hmf) print(priors_eta) #> # A tibble: 12 × 6 #>    tumor_type mean_eta var_eta     N alpha_eta beta_eta #>    <chr>         <dbl>   <dbl> <int>     <dbl>    <dbl> #>  1 BRCA           320.  31113.  2271      3.28  0.0103  #>  2 ESCA           357.  28769.   285      4.44  0.0124  #>  3 GIST           340.  61998.   299      1.87  0.00549 #>  4 HCC            304.  16885.   171      5.48  0.0180  #>  5 LUAD           353.  34458.  3406      3.61  0.0102  #>  6 MEL            304.  28999.  1042      3.19  0.0105  #>  7 OV             316.  19945.   936      5.01  0.0159  #>  8 PAAD           334.  15101.  1698      7.38  0.0221  #>  9 PRAD           283.  21340.   223      3.75  0.0133  #> 10 SCLC           372.  45882.   255      3.01  0.00811 #> 11 STAD           298.  17672.    85      5.04  0.0169  #> 12 PANCA          332.  29352. 10732      3.75  0.0113 plot_eta_prior(x = x, priors_eta = priors_eta)"},{"path":"caravagnalab.github.io/INCOMMON/articles/a2_classify_mutations.html","id":"inference-in-sample-p-0002081","dir":"Articles","previous_headings":"2.2 Inference of copy number and mutation multiplicity","what":"2.2.2 Inference in sample ‘P-0002081’","title":"2. Inference of mutation copy number and multiplicity","text":"now focus specific sample: input data table contains 4 mutations affecting KRAS, TP53, STK11 SMARCA4 genes. sample, 4 mutations required information. can see sample metastatic lung adenocarcinoma (LUAD), sequenced MSK-IMPACT targeted panel version 341, estimated purity 0.6. INCOMMON models sample purity probabilistically, centering Beta prior around estimate provided sample (usually histopathological assay). variance σπ2\\sigma_{\\pi}^2 distribution must fixed prior classification task argument purity_error. default, INCOMMON uses σπ2=0.05\\sigma_{\\pi}^2=0.05, accounting uncertainty values around ≃10%\\simeq 10\\%, depending mean. prior purity distribution sample can visualised using function plot_purity_prior.  shape parameters Beta distribution ensure mean variance correspond values provided. dashed line indicate input purity estimate, used mean distribution. now ready run classification step function classify, using priors obtained (k,m)(k,m) configurations, read count rate per chromosome copy η\\eta sample purity π\\pi. must provide number CPU cores num_cores want use parallel MCMC sampling chains, well number iterations warm-(iter_warmup) proper sampling (iter_sampling) steps. also must specify paths directories want store results (results_dir), stan fit objects (stan_fit_dir) case want store (stan_fit_dump = TRUE) , case want generate reporting summary plot (generate_report_plot = TRUE), directory store images (reports_dir). output contains maximum--posteriori (MAP) values sample purity (purity_map), close input value (0.578 vs 0.6), read count rate per chromosome copy (eta_map) around 163, total copy number (map_k) multiplicity (map_m). mutant oncogene sample KRAS, found 8 copies, 5 mutated, whereas TSGs (TP53, SMARCA4, STK11) LOH, 1 mutant copy total loss WT allele. inferred values consistent read counts without variant estimated proportions normal tumour cells sample.","code":"sample = 'P-0002081'  x = subset_sample(x = x, sample_list = c(sample))  print(x) #> ── [ INCOMMON ]  175054 PASS mutations across 24018 samples, with 290 mutant gen #> ℹ Average sample purity: 0.4 #> ℹ Average sequencing depth: 649 #> # A tibble: 4 × 27 #>   sample    tumor_type purity chr      from     to ref   alt      DP    NV   VAF #>   <chr>     <chr>       <dbl> <chr>   <dbl>  <dbl> <chr> <chr> <int> <int> <dbl> #> 1 P-0002081 LUAD          0.6 chr12  2.54e7 2.54e7 C     A       743   378 0.509 #> 2 P-0002081 LUAD          0.6 chr17  7.58e6 7.58e6 G     A       246   116 0.472 #> 3 P-0002081 LUAD          0.6 chr19  1.22e6 1.22e6 C     A       260   122 0.469 #> 4 P-0002081 LUAD          0.6 chr19  1.11e7 1.11e7 -     C       271   133 0.491 #> # ℹ 16 more variables: gene <chr>, gene_role <chr>, OS_MONTHS <dbl>, #> #   OS_STATUS <dbl>, SAMPLE_TYPE <chr>, MET_COUNT <dbl>, METASTATIC_SITE <chr>, #> #   MET_SITE_COUNT <dbl>, PRIMARY_SITE <chr>, SUBTYPE_ABBREVIATION <chr>, #> #   GENE_PANEL <chr>, SEX <chr>, TMB_NONSYNONYMOUS <dbl>, FGA <dbl>, #> #   AGE_AT_SEQUENCING <dbl>, RACE <chr> plot_purity_prior(x = x, sample = sample, purity_error = 0.05) out = classify(   x = x,   k_max = 8,   priors_k_m = priors_pcawg_hmf,   priors_eta = priors_eta,   purity_error = 0.05,   num_cores = 4,   iter_warmup = 1000,   iter_sampling = 2000,   num_chains = 4,   results_dir = '~/INCOMMON_inference/results',   generate_report_plot = FALSE,   reports_dir = '~/INCOMMON_inference/reports',   stan_fit_dump = FALSE,   stan_fit_dir = '~/INCOMMON_results/stan_fits/' ) print(out) #> ── [ INCOMMON ]  175054 PASS mutations across 24018 samples, with 290 mutant gen #> ℹ Average sample purity: 0.4 #> ℹ Average sequencing depth: 649 #> # A tibble: 4 × 36 #>   sample    tumor_type purity purity_map eta_map chr     from     to gene  ref   #>   <chr>     <chr>       <dbl>      <dbl>   <dbl> <chr>  <dbl>  <dbl> <chr> <chr> #> 1 P-0002081 LUAD          0.6      0.645    190. chr12 2.54e7 2.54e7 KRAS  C     #> 2 P-0002081 LUAD          0.6      0.645    190. chr17 7.58e6 7.58e6 TP53  G     #> 3 P-0002081 LUAD          0.6      0.645    190. chr19 1.22e6 1.22e6 STK11 C     #> 4 P-0002081 LUAD          0.6      0.645    190. chr19 1.11e7 1.11e7 SMAR… -     #> # ℹ 26 more variables: alt <chr>, NV <int>, DP <int>, VAF <dbl>, map_k <int>, #> #   map_m <int>, gene_role <chr>, OS_MONTHS <dbl>, OS_STATUS <dbl>, #> #   SAMPLE_TYPE <chr>, MET_COUNT <dbl>, METASTATIC_SITE <chr>, #> #   MET_SITE_COUNT <dbl>, PRIMARY_SITE <chr>, SUBTYPE_ABBREVIATION <chr>, #> #   GENE_PANEL <chr>, SEX <chr>, TMB_NONSYNONYMOUS <dbl>, FGA <dbl>, #> #   AGE_AT_SEQUENCING <dbl>, RACE <chr>, bayes_p_purity <dbl>, #> #   bayes_p_eta <dbl>, post_pred_p.value_DP <dbl>, …"},{"path":"caravagnalab.github.io/INCOMMON/articles/a2_classify_mutations.html","id":"visualising-incommon-inference","dir":"Articles","previous_headings":"","what":"2.3 Visualising INCOMMON inference","title":"2. Inference of mutation copy number and multiplicity","text":"Since INCOMMON Bayesian method, provides point estimates quantities infers. Instead, full posterior distribution evaluated. example, visualise posterior distribution copy number multiplicity 4 mutant genes found analysed sample, using function plot_posterior_k_m.  KRAS, probability mass located configurations high total copy number gain mutant allele. Conversely TSGs SMARCA4, STK11 TP53, posterior probability tends accumulate configurations low total copy number loss WT allele. red markers indicate MAP values reported section.","code":"plot_posterior_k_m(x = out, k_max = out$parameters$k_max, z_km = out$input$z_km)"},{"path":[]},{"path":"caravagnalab.github.io/INCOMMON/articles/a3_mutant_dosage.html","id":"incommon-classification","dir":"Articles","previous_headings":"3.1 Genome interpretation of 1779 pancreatic adenocarcinoma samples","what":"3.1.1 INCOMMON classification","title":"3. Gene mutant dosage","text":"used INCOMMON make inference prostate cancer (PRAD) samples MSK-MET cohort. results sored MSK_PRAD_output. package provides example data made inference 7839 mutations across 1779 samples, k_max=8, purity_error=0.05, running num_chains=4 MC sampling chains num_cores=4 CPU cores, using iter_warmup=1000 warmup iterations iter_sampling=2000 sampling iterations.","code":"data(\"MSK_PAAD_output\") print(MSK_PAAD_output$input) #> # A tibble: 7,839 × 186 #>    sample    tumor_type purity chr     from     to ref   alt      NV    DP gene  #>    <chr>     <chr>       <dbl> <chr>  <dbl>  <dbl> <chr> <chr> <int> <int> <chr> #>  1 P-0000142 PAAD          0.4 chr12 2.54e7 2.54e7 C     C       273  1404 KRAS  #>  2 P-0000142 PAAD          0.4 chr17 7.58e6 7.58e6 G     G        53   671 TP53  #>  3 P-0000142 PAAD          0.4 chr2  4.77e7 4.77e7 T     T        31   481 MSH2  #>  4 P-0000142 PAAD          0.4 chr5  1.28e6 1.28e6 G     G        34   227 TERT  #>  5 P-0000783 PAAD          0.8 chr12 2.54e7 2.54e7 C     C       474   941 KRAS  #>  6 P-0000783 PAAD          0.8 chr5  1.12e8 1.12e8 G     G       164   424 APC   #>  7 P-0000783 PAAD          0.8 chr11 8.60e7 8.60e7 T     T       210   601 EED   #>  8 P-0000783 PAAD          0.8 chr13 3.29e7 3.29e7 TC    TC      160   493 BRCA2 #>  9 P-0000879 PAAD          0.6 chr7  1.40e8 1.40e8 A     A       308   736 BRAF  #> 10 P-0000879 PAAD          0.6 chr1  1.15e8 1.15e8 T     T       188   506 NRAS  #> # ℹ 7,829 more rows #> # ℹ 175 more variables: HGVSp_Short <chr>, Entrez_Gene_Id <dbl>, Center <chr>, #> #   NCBI_Build <chr>, Chromosome <chr>, Strand <chr>, Consequence <chr>, #> #   Variant_Classification <chr>, Variant_Type <chr>, Tumor_Seq_Allele2 <chr>, #> #   dbSNP_RS <chr>, dbSNP_Val_Status <lgl>, Matched_Norm_Sample_Barcode <lgl>, #> #   Match_Norm_Seq_Allele1 <lgl>, Match_Norm_Seq_Allele2 <lgl>, #> #   Tumor_Validation_Allele1 <lgl>, Tumor_Validation_Allele2 <lgl>, … print(MSK_PAAD_output$parameters) #> # A tibble: 1 × 11 #>   k_max purity_error num_cores iter_warmup iter_sampling num_chains results_dir  #>   <dbl>        <dbl>     <dbl>       <dbl>         <dbl>      <dbl> <chr>        #> 1     8         0.05         4        1000          2000          4 ~/INCOMMON_… #> # ℹ 4 more variables: generate_report_plot <lgl>, reports_dir <chr>, #> #   stan_fit_dump <lgl>, stan_fit_dir <chr>"},{"path":"caravagnalab.github.io/INCOMMON/articles/a3_mutant_dosage.html","id":"gene-mutant-dosage","dir":"Articles","previous_headings":"3.1 Genome interpretation of 1779 pancreatic adenocarcinoma samples","what":"3.1.2 Gene mutant dosage","title":"3. Gene mutant dosage","text":"gene mutation, mutant dosage can computed. INCOMMON exploits full posterior distribution p(k,m|X,Θ)p(k,m\\;|\\;X, \\Theta) k m values compute mean Fraction Alleles Mutation (FAM) 𝔼(FAM)=∑k=1kmax∑m=1kp(k,m|X,Θ)mk\\mathbb{E}(\\text{FAM})=\\sum\\limits_{k=1}^{k_{max}}\\sum\\limits_{m=1}^kp(k,m\\;|\\;X, \\Theta)\\frac{m}{k}. can done function compute_expectations. Samples can classified respect mutant gene “Low Dosage”, “Balanced Dosage” “High Dosage”, using gene-role specific thresholds. default, INCOMMON uses thresholds optimised survival analysis, function mutant_dosage_classification: FAM column now added object. can take look inferred FAM KRAS mutations using function show_FAM: example, first mutation, given estimated purity π=87%\\pi=87\\% total sequencing depth DP=505\\text{DP}=505, expect 0.87*505=≃4400.87*505=\\simeq440 reads tumour cells. FAM corresponds fraction tumour reads carry variant (NV=268\\text{NV}=268), approximately 60%60\\%. oncogene, value FAMcorresponds “Balanced Dosage” class.","code":"MSK_PAAD_output = mutant_dosage_classification(MSK_PAAD_output) #> Joining with `by = join_by(id)` show_FAM(MSK_PAAD_output, gene = 'KRAS') %>% dplyr::arrange(dplyr::desc(purity)) #> # A tibble: 1,576 × 10 #>    sample    gene  gene_role    NV    DP purity purity_map eta_map     FAM class #>    <chr>     <chr> <chr>     <int> <int>  <dbl>      <dbl>   <dbl>   <dbl> <chr> #>  1 P-0005980 KRAS  oncogene    268   505    0.9      0.871    105. 5.97e-1 Bala… #>  2 P-0009045 KRAS  oncogene    695  1211    0.9      0.942    183. 5.71e-1 Bala… #>  3 P-0050275 KRAS  oncogene    634  1121    0.9      0.777    197. 2.56e-5 Low … #>  4 P-0000783 KRAS  oncogene    474   941    0.8      0.747    224. 6.00e-1 Bala… #>  5 P-0005815 KRAS  oncogene    278   605    0.8      0.818    191. 5.00e-1 Bala… #>  6 P-0008013 KRAS  oncogene    129   786    0.8      0.689    164. 1.67e-1 Low … #>  7 P-0012926 KRAS  oncogene    226   818    0.8      0.717    249. 1.65e-1 Low … #>  8 P-0017349 KRAS  oncogene    770   953    0.8      0.747    153. 8.48e-1 High… #>  9 P-0017552 KRAS  oncogene    407   816    0.8      0.645    154. 5.71e-1 Bala… #> 10 P-0029168 KRAS  oncogene    406   964    0.8      0.695    213. 5.00e-1 Bala… #> # ℹ 1,566 more rows"},{"path":"caravagnalab.github.io/INCOMMON/articles/a3_mutant_dosage.html","id":"visulasing-the-distribution-of-mutant-dosage-classes","dir":"Articles","previous_headings":"3.1 Genome interpretation of 1779 pancreatic adenocarcinoma samples","what":"3.1.3 Visulasing the distribution of mutant dosage classes","title":"3. Gene mutant dosage","text":"can visualise distribution INCOMMON classes specific gene tumour type using function plot_class_fraction. instance, can take look distribution KRAS mutations:  Across 1563 KRAS mutant samples, majority balanced dosage, interestingly, KRAS mutant dosage tends increase metastases. can also look TP53: Primary PAAD tumours TP53 mutations majority low dosage configurations, dosage strongly increases metastases favour balanced high dosage configurations.","code":"plot_class_fraction(x = MSK_PAAD_output, gene = 'KRAS') plot_class_fraction(x = MSK_PAAD_output, gene = 'TP53')"},{"path":"caravagnalab.github.io/INCOMMON/articles/a4_survival_analysis.html","id":"classification-of-1740-prostate-adenocarcinoma-samples","dir":"Articles","previous_headings":"","what":"4.1 Classification of 1740 prostate adenocarcinoma samples","title":"4. Survival analysis of MSK-MetTropism","text":"order stratify patients based INCOMMON interpreted genomes, first need classify mutations samples.","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/a4_survival_analysis.html","id":"input-intialisation","dir":"Articles","previous_headings":"4.1 Classification of 1740 prostate adenocarcinoma samples","what":"4.1.1 Input intialisation","title":"4. Survival analysis of MSK-MetTropism","text":"First read example classified data:","code":"data(\"MSK_PAAD_output\") print(MSK_PAAD_output) #> ── [ INCOMMON ]  175054 PASS mutations across 24018 samples, with 290 mutant gen #> ℹ Average sample purity: 0.4 #> ℹ Average sequencing depth: 649 #> # A tibble: 7,839 × 186 #>    sample    tumor_type purity chr     from     to ref   alt      NV    DP gene  #>    <chr>     <chr>       <dbl> <chr>  <dbl>  <dbl> <chr> <chr> <int> <int> <chr> #>  1 P-0000142 PAAD          0.4 chr12 2.54e7 2.54e7 C     C       273  1404 KRAS  #>  2 P-0000142 PAAD          0.4 chr17 7.58e6 7.58e6 G     G        53   671 TP53  #>  3 P-0000142 PAAD          0.4 chr2  4.77e7 4.77e7 T     T        31   481 MSH2  #>  4 P-0000142 PAAD          0.4 chr5  1.28e6 1.28e6 G     G        34   227 TERT  #>  5 P-0000783 PAAD          0.8 chr12 2.54e7 2.54e7 C     C       474   941 KRAS  #>  6 P-0000783 PAAD          0.8 chr5  1.12e8 1.12e8 G     G       164   424 APC   #>  7 P-0000783 PAAD          0.8 chr11 8.60e7 8.60e7 T     T       210   601 EED   #>  8 P-0000783 PAAD          0.8 chr13 3.29e7 3.29e7 TC    TC      160   493 BRCA2 #>  9 P-0000879 PAAD          0.6 chr7  1.40e8 1.40e8 A     A       308   736 BRAF  #> 10 P-0000879 PAAD          0.6 chr1  1.15e8 1.15e8 T     T       188   506 NRAS  #> # ℹ 7,829 more rows #> # ℹ 175 more variables: HGVSp_Short <chr>, Entrez_Gene_Id <dbl>, Center <chr>, #> #   NCBI_Build <chr>, Chromosome <chr>, Strand <chr>, Consequence <chr>, #> #   Variant_Classification <chr>, Variant_Type <chr>, Tumor_Seq_Allele2 <chr>, #> #   dbSNP_RS <chr>, dbSNP_Val_Status <lgl>, Matched_Norm_Sample_Barcode <lgl>, #> #   Match_Norm_Seq_Allele1 <lgl>, Match_Norm_Seq_Allele2 <lgl>, #> #   Tumor_Validation_Allele1 <lgl>, Tumor_Validation_Allele2 <lgl>, …"},{"path":"caravagnalab.github.io/INCOMMON/articles/a4_survival_analysis.html","id":"survival-analysis-of-mutant-kras-patients","dir":"Articles","previous_headings":"","what":"4.2 Survival analysis of Mutant KRAS patients","title":"4. Survival analysis of MSK-MetTropism","text":"order obtain grouping patients based mutant dosage KRAS, need first annotate FAM mutant dosage class sample interpret mutant KRAS genomes.","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/a4_survival_analysis.html","id":"mutand-dosage-classification","dir":"Articles","previous_headings":"4.2 Survival analysis of Mutant KRAS patients","what":"4.2.1 Mutand Dosage Classification","title":"4. Survival analysis of MSK-MetTropism","text":"use function mutant_dosage_classification add INCOMMON classes (Mutant /without LOH, Mutant /without AMP, Tier-2) class annotate sample genotype summarising interpreted mutations found sample. investigate impact survival Mutant KRAS dosage respect KRAS WT patients. first look distribution mutant dosage across PAAD samples KRAS, using function plot_class_fraction:  Across 1563 samples, relatively large fraction KRAS mutations (21%) associated high dosage primary pancreatic tumours, fraction increases 24% metastases.","code":"MSK_PAAD_output = mutant_dosage_classification(MSK_PAAD_output) #> Joining with `by = join_by(id)` plot_class_fraction(x = MSK_PAAD_output, tumor_type = 'PAAD', gene = 'KRAS')"},{"path":"caravagnalab.github.io/INCOMMON/articles/a4_survival_analysis.html","id":"kaplan-meier-survival-esitmates","dir":"Articles","previous_headings":"4.2 Survival analysis of Mutant KRAS patients","what":"4.2.2 Kaplan-Meier survival esitmates","title":"4. Survival analysis of MSK-MetTropism","text":"Next use function kaplan_meier_fit fit survival data (overall survival status versus overall survival months case) using Kaplan-Meier estimator. Notice must choose variables clinical_data used survival time survival status (‘OS_MONTHS’ ‘OS_STATUS’ case). median overall survival time decreases proportionally mutant KRAS dosage: 38.3 months WT group 17.4 months low mutant dosage, 14.6 months balanced mutant dosage, 10.7 months high mutant dosage.","code":"MSK_PAAD_output = kaplan_meier_fit(   x = MSK_PAAD_output,    tumor_type = 'PAAD',    gene = 'KRAS',    survival_time = 'OS_MONTHS',    survival_status = 'OS_STATUS') #> Call: survfit(formula = \"survival::Surv(OS_MONTHS, OS_STATUS) ~ group\",  #>     data = data) #>  #>    7 observations deleted due to missingness  #>                   n events median 0.95LCL 0.95UCL #> WT              214     92   38.3   28.98    51.1 #> Low Dosage      541    344   17.4   15.34    19.8 #> Balanced Dosage 670    417   14.6   13.34    15.8 #> High Dosage     347    237   10.7    9.36    12.5"},{"path":"caravagnalab.github.io/INCOMMON/articles/a4_survival_analysis.html","id":"hazard-ratio-estimates-with-cox-regression","dir":"Articles","previous_headings":"4.2 Survival analysis of Mutant KRAS patients","what":"4.2.3 Hazard Ratio estimates with Cox regression","title":"4. Survival analysis of MSK-MetTropism","text":"order estimate hazard ratio associated groups, fit survival data, time using multivariate Cox proportional hazards regression model. , overcome confounding effect global mutational copy-number burden including tumour mutational burden fraction genome altered (FGA) provided within clinical data, plus standard covariates age patients sequencing, sex sample type (primary vs metastasis). TMB, best practices require using value 10 per megabase discriminate patients high burden low. can decide strategy use tuning argument tmb_method. default value “median”, uses median samples asthreshold. , set “>10” stick mentioned best practices. analysis confirms gradient worsening survival outcome patients increasing mutant dosage KRAS. evaluated hazard ratios increase 2.04 Low Dosage, 2.29 Balanced Dosage, 3.20 High Dosage. pairwise analysis reveals outcome difference High Balanced dosage significant (P-value P=9.93×10−5P=9.93\\times10^{-5}), confirming effectiveness mutant dosage outcome predictive factor overall survival.","code":"MSK_PAAD_output = cox_fit(x = MSK_PAAD_output,         tumor_type = 'PAAD',         gene = 'KRAS',         survival_time = 'OS_MONTHS',         survival_status = 'OS_STATUS',         covariates = c('AGE_AT_SEQUENCING', 'SEX', 'TMB', 'FGA','SAMPLE_TYPE'),         tmb_method = \">10\") #> [1] \"Cox fit with INCOMMON groups:\" #> Call: #> survival::coxph(formula = formula %>% stats::as.formula(), data = data %>%  #>     as.data.frame()) #>  #>                            coef exp(coef)  se(coef)       z        p #> groupBalanced Dosage   0.828020  2.288783  0.132845   6.233 4.58e-10 #> groupHigh Dosage       1.161802  3.195687  0.136122   8.535  < 2e-16 #> groupLow Dosage        0.717250  2.048791  0.136201   5.266 1.39e-07 #> AGE_AT_SEQUENCING      0.005402  1.005417  0.002965   1.822  0.06845 #> SEXMale                0.179991  1.197207  0.061022   2.950  0.00318 #> TMB_NONSYNONYMOUS> 10  0.049379  1.050619  0.219603   0.225  0.82209 #> FGA                   -0.098933  0.905803  0.180039  -0.550  0.58266 #> SAMPLE_TYPEPrimary    -0.677310  0.507982  0.064381 -10.520  < 2e-16 #>  #> Likelihood ratio test=226.3  on 8 df, p=< 2.2e-16 #> n= 1768, number of events= 1088  #>    (11 observations deleted due to missingness) #> [1] \"Pairwise tests:\" #>  #>   Simultaneous Tests for General Linear Hypotheses #>  #> Fit: survival::coxph(formula = formula %>% stats::as.formula(), data = data %>%  #>     as.data.frame()) #>  #> Linear Hypotheses: #>                                                  Estimate Std. Error z value #> `groupHigh Dosage` - `groupBalanced Dosage` == 0  0.33378    0.08228   4.057 #> `groupLow Dosage` - `groupBalanced Dosage` == 0  -0.11077    0.07341  -1.509 #>                                                  Pr(>|z|)     #> `groupHigh Dosage` - `groupBalanced Dosage` == 0 9.93e-05 *** #> `groupLow Dosage` - `groupBalanced Dosage` == 0     0.234     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> (Adjusted p values reported -- single-step method)"},{"path":"caravagnalab.github.io/INCOMMON/articles/a4_survival_analysis.html","id":"visualising-survival-analysis","dir":"Articles","previous_headings":"4.2 Survival analysis of Mutant KRAS patients","what":"4.2.4 Visualising survival analysis","title":"4. Survival analysis of MSK-MetTropism","text":"Kaplan-Meier estimation multivariate Cox regression can visualized straightforwardly using plot_survival_analysis function:  plot displays Kaplan-Meier survival curves risk table, forest plot Cox multivariate regression coefficients, highlighting red covariates statistically significant contribution differences hazard risks.","code":"plot_survival_analysis(x = MSK_PAAD_output,                        tumor_type = 'PAAD',                        gene = 'KRAS') #> Scale for x is already present. #> Adding another scale for x, which will replace the existing scale. #> Scale for x is already present. #> Adding another scale for x, which will replace the existing scale. #> Joining with `by = join_by(var)` #> Joining with `by = join_by(var)` #> Warning: Removed 3 rows containing missing values or values outside the scale range #> (`geom_rect()`). #> Warning: Removed 3 rows containing missing values or values outside the scale range #> (`geom_point()`). #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_rect()`). #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":[]},{"path":"caravagnalab.github.io/INCOMMON/articles/a5_metastasis_analysis.html","id":"metastatic-propensity-of-fully-incactivated-tp53","dir":"Articles","previous_headings":"5.2 Metastatic propensity of PAAD samples","what":"5.2.1 Metastatic propensity of fully incactivated TP53","title":"5. Analysis of metastatic patterns of MSK-MetTropism","text":"can analyse metastatic propensity primary breast tumor genomes containing TP53 mutations using function met_propensity. function implements logistic regression fit Binomial probability developing metastasis based interpreted mutant genome, mutant gene without CNA (, Mutant TP53 without LOH) reference. analysis emerges high dosage CDKN2A three-fold increase risk metastatise (= 3.46, p.value = 0.015) respect mutant samples balanced mutant dosage.","code":"data(\"MSK_PAAD_output\") MSK_PAAD_output = met_propensity(x = MSK_PAAD_output, tumor_type = 'PAAD', gene = 'CDKN2A') #> Joining with `by = join_by(id)` #> Waiting for profiling to be done... #> Waiting for profiling to be done... #> # A tibble: 1 × 6 #>   gene   class          OR   low    up p.value #>   <chr>  <chr>       <dbl> <dbl> <dbl>   <dbl> #> 1 CDKN2A High Dosage  3.46  1.21  9.24  0.0153"},{"path":"caravagnalab.github.io/INCOMMON/articles/a5_metastasis_analysis.html","id":"metastatic-propensity-for-the-top-mutant-genes-in-brca","dir":"Articles","previous_headings":"5.2 Metastatic propensity of PAAD samples","what":"5.2.2 Metastatic propensity for the top mutant genes in BRCA","title":"5. Analysis of metastatic patterns of MSK-MetTropism","text":"extend analysis multiple genes, focusing 10 frequently mutated ones.","code":"top_genes = MSK_PAAD_output$input %>%    dplyr::group_by(gene) %>%    dplyr::reframe(N = length(unique(sample))) %>%    dplyr::arrange(dplyr::desc(N)) %>%    dplyr::slice_head(n = 10) %>%    pull(gene)  print(top_genes)  for(g in top_genes){   MSK_PAAD_output = met_propensity(x = MSK_PAAD_output, tumor_type = 'PAAD', gene = g) }"},{"path":"caravagnalab.github.io/INCOMMON/articles/a5_metastasis_analysis.html","id":"visualising-metastatic-propensity-odds-ratio","dir":"Articles","previous_headings":"5.2 Metastatic propensity of PAAD samples","what":"5.2.2 Visualising metastatic propensity odds ratio","title":"5. Analysis of metastatic patterns of MSK-MetTropism","text":"INCOMMON provides function plot_met_volcano visualise metastatic propensity odds ratios volcano plot.  addition CDKN2A, among 10 frequently mutant genes PAAD, high dosage KRAS seems reduce risk metastatisation (= 0.59, p.value = 0.04). Given strong worsening survival outcomes related high KRAS dosage PAAD, effect may explained fact death rate configuration high enough allow annotation metastases patients’ electronic health records.","code":"plot_met_volcano(x = MSK_PAAD_output, tumor_type = 'PAAD')"},{"path":[]},{"path":"caravagnalab.github.io/INCOMMON/articles/a5_metastasis_analysis.html","id":"tropism-to-liver-metastases-of-kras-pancreatic-cancer-with-high-dosage","dir":"Articles","previous_headings":"5.3 Metastatic tropism of BRCA samples","what":"5.3.1 Tropism to liver metastases of KRAS pancreatic cancer with high dosage","title":"5. Analysis of metastatic patterns of MSK-MetTropism","text":"can analyse organotropism metastatic pancreatic tumor genomes containing KRAS mutations using function met_tropsim. Similarly metastatic propensity analysis, function implements logistic regression fit Binomial probability developing metastasis towards specific metastatic site (Liver, example), based mutant gene dosage, balanced dosage reference. odds ratio () metastatising Liver high dosage KRAS mutant pancreatic cancer almost two-fold (= 1.71, p.value = 0.023) respect mutant samples balanced dosage.","code":"MSK_PAAD_output = met_tropism(MSK_PAAD_output, tumor_type = 'PAAD', gene = 'KRAS', metastatic_site = 'Liver') #> Waiting for profiling to be done... #> Waiting for profiling to be done... #> # A tibble: 1 × 7 #>   gene  metastatic_site class          OR   low    up p.value #>   <chr> <chr>           <chr>       <dbl> <dbl> <dbl>   <dbl> #> 1 KRAS  Liver           High Dosage  1.72  1.09  2.77  0.0232"},{"path":"caravagnalab.github.io/INCOMMON/articles/a5_metastasis_analysis.html","id":"tropism-of-top-mutant-genes-in-paad-to-the-liver","dir":"Articles","previous_headings":"5.3 Metastatic tropism of BRCA samples","what":"5.3.2 Tropism of top mutant genes in PAAD to the Liver","title":"5. Analysis of metastatic patterns of MSK-MetTropism","text":"extend analysis multiple genes, focusing 10 frequently mutated ones top 10 frequent metastatic sites.","code":"top_sites = MSK_PAAD_output$clinical_data %>%    dplyr::filter(METASTATIC_SITE != 'Unspecified') %>%    dplyr::group_by(METASTATIC_SITE) %>%    dplyr::reframe(N = length(unique(sample))) %>%    dplyr::arrange(dplyr::desc(N)) %>%    dplyr::slice_head(n = 10) %>%    pull(METASTATIC_SITE)  for(g in top_genes[1:10]){   for(m in top_sites){    MSK_PAAD_output = met_tropism(MSK_PAAD_output, gene = g, tumor_type = 'PAAD', metastatic_site = m)    } }"},{"path":"caravagnalab.github.io/INCOMMON/articles/a5_metastasis_analysis.html","id":"visualising-metastatic-tropism","dir":"Articles","previous_headings":"5.3 Metastatic tropism of BRCA samples","what":"5.3.3 Visualising metastatic tropism","title":"5. Analysis of metastatic patterns of MSK-MetTropism","text":"INCOMMON provides function plot_tropism visualise metastatic tropism odds ratios metastatic site.  Interestingly, high dosage KRAS increases odds metastatisation liver, among first 10 frequent metastatisation sites, highlighting specific organotropic pattern mutant dosage configuration.","code":"plot_tropism(x = MSK_PAAD_output, tumor_type = 'PAAD')"},{"path":"caravagnalab.github.io/INCOMMON/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicola Calonaci. Author, maintainer. Giulio Caravagna. Author, maintainer.","code":""},{"path":"caravagnalab.github.io/INCOMMON/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Calonaci N, Caravagna G (2025). INCOMMON: Inference copy number mutation multiplicity oncology. R package version 0.0.1.","code":"@Manual{,   title = {INCOMMON: Inference of copy number and mutation multiplicity in oncology},   author = {Nicola Calonaci and Giulio Caravagna},   year = {2025},   note = {R package version 0.0.1}, }"},{"path":"caravagnalab.github.io/INCOMMON/index.html","id":"incommon-","dir":"","previous_headings":"","what":"Inference of copy number and mutation multiplicity in oncology","title":"Inference of copy number and mutation multiplicity in oncology","text":"INCOMMON tool INference COpy number Mutation Multiplicity ONcology. INCOMMON infers copy number multiplicity somatic mutations tumor-read count data, can applied classify mutations large-size datasets efficient fast way. INCOMMON also available user-friendly ShinyApp. can download results analysis Zenodo. Check preprint medRxiv!","code":""},{"path":[]},{"path":[]},{"path":"caravagnalab.github.io/INCOMMON/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Inference of copy number and mutation multiplicity in oncology","text":"can install INCOMMON GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"caravagnalab/INCOMMON\")"},{"path":"caravagnalab.github.io/INCOMMON/index.html","id":"copyright-and-contacts","dir":"","previous_headings":"Installation","what":"Copyright and contacts","title":"Inference of copy number and mutation multiplicity in oncology","text":"Cancer Data Science (CDS) Laboratory.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_PAAD_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from the MSK-MetTropism cohort classified with INCOMMON — MSK_PAAD_output","title":"Data from the MSK-MetTropism cohort classified with INCOMMON — MSK_PAAD_output","text":"INCOMMON object resulting classification example data.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_PAAD_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data from the MSK-MetTropism cohort classified with INCOMMON — MSK_PAAD_output","text":"","code":"data(MSK_PAAD_output)"},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_PAAD_output.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from the MSK-MetTropism cohort classified with INCOMMON — MSK_PAAD_output","text":"INCOMMON object genomics, clinical data classification results.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_PAAD_output.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data from the MSK-MetTropism cohort classified with INCOMMON — MSK_PAAD_output","text":"\"msk_classified_with_priors.rds\" Zenodo https://zenodo.org/records/10927218","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_PAAD_output.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data from the MSK-MetTropism cohort classified with INCOMMON — MSK_PAAD_output","text":"","code":"data(MSK_PAAD_output) MSK_PAAD_output #> ── [ INCOMMON ]  175054 PASS mutations across 24018 samples, with 290 mutant gen #> ℹ Average sample purity: 0.4 #> ℹ Average sequencing depth: 649 #> # A tibble: 7,839 × 186 #>    sample    tumor_type purity chr     from     to ref   alt      NV    DP gene  #>    <chr>     <chr>       <dbl> <chr>  <dbl>  <dbl> <chr> <chr> <int> <int> <chr> #>  1 P-0000142 PAAD          0.4 chr12 2.54e7 2.54e7 C     C       273  1404 KRAS  #>  2 P-0000142 PAAD          0.4 chr17 7.58e6 7.58e6 G     G        53   671 TP53  #>  3 P-0000142 PAAD          0.4 chr2  4.77e7 4.77e7 T     T        31   481 MSH2  #>  4 P-0000142 PAAD          0.4 chr5  1.28e6 1.28e6 G     G        34   227 TERT  #>  5 P-0000783 PAAD          0.8 chr12 2.54e7 2.54e7 C     C       474   941 KRAS  #>  6 P-0000783 PAAD          0.8 chr5  1.12e8 1.12e8 G     G       164   424 APC   #>  7 P-0000783 PAAD          0.8 chr11 8.60e7 8.60e7 T     T       210   601 EED   #>  8 P-0000783 PAAD          0.8 chr13 3.29e7 3.29e7 TC    TC      160   493 BRCA2 #>  9 P-0000879 PAAD          0.6 chr7  1.40e8 1.40e8 A     A       308   736 BRAF  #> 10 P-0000879 PAAD          0.6 chr1  1.15e8 1.15e8 T     T       188   506 NRAS  #> # ℹ 7,829 more rows #> # ℹ 175 more variables: HGVSp_Short <chr>, Entrez_Gene_Id <dbl>, Center <chr>, #> #   NCBI_Build <chr>, Chromosome <chr>, Strand <chr>, Consequence <chr>, #> #   Variant_Classification <chr>, Variant_Type <chr>, Tumor_Seq_Allele2 <chr>, #> #   dbSNP_RS <chr>, dbSNP_Val_Status <lgl>, Matched_Norm_Sample_Barcode <lgl>, #> #   Match_Norm_Seq_Allele1 <lgl>, Match_Norm_Seq_Allele2 <lgl>, #> #   Tumor_Validation_Allele1 <lgl>, Tumor_Validation_Allele2 <lgl>, …"},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_clinical_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Genomic data of the MSK-MetTropism cohort — MSK_clinical_data","title":"Genomic data of the MSK-MetTropism cohort — MSK_clinical_data","text":"table contains sample names corresponding clinical data MSK-MetTropism cohort.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_clinical_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Genomic data of the MSK-MetTropism cohort — MSK_clinical_data","text":"","code":"data(MSK_clinical_data)"},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_clinical_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Genomic data of the MSK-MetTropism cohort — MSK_clinical_data","text":"tibble 25659 rows 15 columns:","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_clinical_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Genomic data of the MSK-MetTropism cohort — MSK_clinical_data","text":"MSK-MET cBioPortal https://www.cbioportal.org/study/summary?id=msk_met_2021","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_clinical_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Genomic data of the MSK-MetTropism cohort — MSK_clinical_data","text":"","code":"data(MSK_clinical_data) MSK_clinical_data #> # A tibble: 25,368 × 17 #> # Rowwise:  #>    sample    tumor_type purity OS_MONTHS OS_STATUS SAMPLE_TYPE MET_COUNT #>    <chr>     <chr>       <dbl>     <dbl>     <dbl> <chr>           <dbl> #>  1 P-0000004 BRCA          0.5      3.78         1 Primary             2 #>  2 P-0000015 BRCA          0.4     13.9          1 Metastasis          8 #>  3 P-0000024 UCEC          0.4     35.1          1 Metastasis          8 #>  4 P-0000025 UCEC          0.3     46            1 Metastasis         13 #>  5 P-0000026 UCEC          0.1     80.6          0 Metastasis         11 #>  6 P-0000034 BLCA          0.4      0.79         1 Primary             4 #>  7 P-0000037 HCC           0.9     80.9          0 Metastasis          1 #>  8 P-0000039 PLEMESO       0.4      5.62         1 Primary             5 #>  9 P-0000041 BRCA          0.3     13.6          1 Primary             9 #> 10 P-0000042 PLEMESO       0.4     56.9          1 Primary             0 #> # ℹ 25,358 more rows #> # ℹ 10 more variables: METASTATIC_SITE <chr>, MET_SITE_COUNT <dbl>, #> #   PRIMARY_SITE <chr>, SUBTYPE_ABBREVIATION <chr>, GENE_PANEL <chr>, #> #   SEX <chr>, TMB_NONSYNONYMOUS <dbl>, FGA <dbl>, AGE_AT_SEQUENCING <dbl>, #> #   RACE <chr>"},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_genomic_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Genomic data of the MSK-MetTropism cohort — MSK_genomic_data","title":"Genomic data of the MSK-MetTropism cohort — MSK_genomic_data","text":"table contains sample names corresponding read counts data MSK-MetTropism cohort.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_genomic_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Genomic data of the MSK-MetTropism cohort — MSK_genomic_data","text":"","code":"data(MSK_genomic_data)"},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_genomic_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Genomic data of the MSK-MetTropism cohort — MSK_genomic_data","text":"tibble 224939 rows 10 columns:","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_genomic_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Genomic data of the MSK-MetTropism cohort — MSK_genomic_data","text":"MSK-MET cBioPortal https://www.cbioportal.org/study/summary?id=msk_met_2021","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_genomic_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Genomic data of the MSK-MetTropism cohort — MSK_genomic_data","text":"","code":"data(MSK_genomic_data) MSK_genomic_data #> # A tibble: 224,939 × 10 #>    sample    chr        from        to ref   alt      DP    NV   VAF gene    #>    <chr>     <chr>     <dbl>     <dbl> <chr> <chr> <int> <int> <dbl> <chr>   #>  1 P-0028912 chr17   7577121   7577121 G     A       837   133 0.159 TP53    #>  2 P-0028912 chr6  111983080 111983081 -     A       698   141 0.202 FYN     #>  3 P-0028912 chrX   53246994  53246994 G     A       832    85 0.102 KDM5C   #>  4 P-0003698 chr17   7576852   7576852 C     A       437   109 0.249 TP53    #>  5 P-0003698 chr3   49933259  49933259 C     A       591    86 0.146 MST1R   #>  6 P-0003698 chr5  149435631 149435631 C     T       360    36 0.1   CSF1R   #>  7 P-0003698 chr13  32913797  32913797 G     C      1027   162 0.158 BRCA2   #>  8 P-0003698 chr13  32914259  32914259 G     C      1021   182 0.178 BRCA2   #>  9 P-0003698 chr19  11136104  11136104 G     T       573    98 0.171 SMARCA4 #> 10 P-0003698 chr22  41543840  41543840 G     A       416    45 0.108 EP300   #> # ℹ 224,929 more rows"},{"path":"caravagnalab.github.io/INCOMMON/reference/cancer_gene_census.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene roles from COSMIC Cancer Gene Census — cancer_gene_census","title":"Gene roles from COSMIC Cancer Gene Census — cancer_gene_census","text":"table contains gene roles cancer, obtained COSMIC Cancer Gene Census v98. Data curated gene list assigned either TSG oncogene.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/cancer_gene_census.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene roles from COSMIC Cancer Gene Census — cancer_gene_census","text":"","code":"data(cancer_gene_census)"},{"path":"caravagnalab.github.io/INCOMMON/reference/cancer_gene_census.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gene roles from COSMIC Cancer Gene Census — cancer_gene_census","text":"data frame 733 rows 2 columns: gene Name gene (Hugo Symbol) gene_role Tumour Suppressor Gene (TSG) oncogene","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/cancer_gene_census.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gene roles from COSMIC Cancer Gene Census — cancer_gene_census","text":"COSMIC Cancer Gene Census: https://cancer.sanger.ac.uk/census","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/cancer_gene_census.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gene roles from COSMIC Cancer Gene Census — cancer_gene_census","text":"","code":"data(cancer_gene_census) cancer_gene_census #> # A tibble: 733 × 2 #>    gene   gene_role #>    <chr>  <chr>     #>  1 A1CF   oncogene  #>  2 ABI1   TSG       #>  3 ABL1   oncogene  #>  4 ABL2   oncogene  #>  5 ACKR3  oncogene  #>  6 ACSL3  oncogene  #>  7 ACSL6  oncogene  #>  8 ACVR1  oncogene  #>  9 ACVR1B TSG       #> 10 ACVR2A TSG       #> # ℹ 723 more rows"},{"path":"caravagnalab.github.io/INCOMMON/reference/classify.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify mutations using a Beta-Binomial model-based test. — classify","title":"Classify mutations using a Beta-Binomial model-based test. — classify","text":"Classify mutations using Beta-Binomial model-based test.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/classify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify mutations using a Beta-Binomial model-based test. — classify","text":"","code":"classify(   x,   k_max = 8,   priors_k_m = priors_pcawg_hmf,   priors_eta = priors_eta,   purity_error = 0.05,   num_cores = NULL,   iter_warmup = 500,   iter_sampling = 1000,   num_chains = 4,   results_dir = \"~/INCONNON_inference/results\",   generate_report_plot = F,   reports_dir = \"~/INCONNON_inference/reports\",   stan_fit_dump = F,   stan_fit_dir = \"~/INCONNON_inference/fits\" )"},{"path":"caravagnalab.github.io/INCOMMON/reference/classify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify mutations using a Beta-Binomial model-based test. — classify","text":"x object class 'INCOMMON' generated function init. k_max maximum value total copy number included model. priors_k_m dplyr::tibble data frame columns gene, tumor_type, k, m, N n p indicating tumor-specific pan-cancer (PANCA) prior probabilities. priors_eta dplyr::tibble data frame columns tumor_type,mean_eta, var_eta, N,alpha_eta beta_eta providing parameters Gamma prior distribution per copy sequencing rate. purity_error expected error input sample purity estimate. num_cores number cores use parallel stan sampling. iter_warmup number iterations stan warmup phase. iter_sampling number iterations stan sampling  phase. num_chains number MCMC chains run parallel. results_dir directory path store fit rds format analysed sample. generate_report_plot Whether generate png files full fit report. reports_dir generate_report_plot = TRUE, directory path store reports. stan_fit_dump Whether store stan fit objects. stan_fit_dir stan_fit_dump = TRUE, directory path store stan fit objects.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/classify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify mutations using a Beta-Binomial model-based test. — classify","text":"object class INCOMMON containing original input plus classification data parameters.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/classify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classify mutations using a Beta-Binomial model-based test. — classify","text":"","code":"# First load example data data(MSK_genomic_data) data(MSK_clinical_data) data(priors_pcawg_hmf) data(priors_eta) # Initialize the INCOMMON object for a single sample (note the outputs to screen) sample = 'P-0002081' x = init(genomic_data = MSK_genomic_data[MSK_genomic_data$sample == sample,], clinical_data = MSK_clinical_data[MSK_clinical_data$sample == sample,]) #> ── INCOMMON - Inference of copy number and mutation multiplicity in oncology ─── #>  #> ── Genomic data ── #>  #> ✔ Found 1 samples, with 4 mutations in 4 genes #>  #> ── Clinical data ── #>  #> ℹ Provided clinical features: #>  #> ✔ sample (required for classification) #> ✔ purity (required for classification) #> ✔ tumor_type #> ✔ OS_MONTHS #> ✔ OS_STATUS #> ✔ SAMPLE_TYPE #> ✔ MET_COUNT #> ✔ METASTATIC_SITE #> ✔ MET_SITE_COUNT #> ✔ PRIMARY_SITE #> ✔ SUBTYPE_ABBREVIATION #> ✔ GENE_PANEL #> ✔ SEX #> ✔ TMB_NONSYNONYMOUS #> ✔ FGA #> ✔ AGE_AT_SEQUENCING #> ✔ RACE #>  #> ✔ Found 1 matching samples #> ✔ No mismatched samples # Run INCOMMON classification x = classify(x = x, priors_k_m = priors_pcawg_hmf, priors_eta = priors_eta, num_cores = 1, iter_warmup = 10, iter_sampling = 10, num_chains = 1) #> ℹ Performing classification #>  #> ── INCOMMON inference of copy number and mutation multiplicity for sample P-0002 #>  #> Warning in '/tmp/RtmpJ6qWqi/model-1fb4233da27.stan', line 30, column 18: Found #>     int division: #>       k_max * (k_max + 1) / 2 #>     Values will be rounded towards zero. If rounding is not desired you can #>     write #>     the division as #>       k_max * (k_max + 1) / 2.0 #>     If rounding is intended please use the integer division operator %/%. #> Warning in '/tmp/RtmpJ6qWqi/model-1fb4233da27.stan', line 34, column 19: Found #>     int division: #>       k_max * (k_max + 1) / 2 #>     Values will be rounded towards zero. If rounding is not desired you can #>     write #>     the division as #>       k_max * (k_max + 1) / 2.0 #>     If rounding is intended please use the integer division operator %/%. #> Warning in '/tmp/RtmpJ6qWqi/model-1fb4233da27.stan', line 51, column 11: Found #>     int division: #>       k_max * (k_max + 1) / 2 #>     Values will be rounded towards zero. If rounding is not desired you can #>     write #>     the division as #>       k_max * (k_max + 1) / 2.0 #>     If rounding is intended please use the integer division operator %/%. #> Warning in '/tmp/RtmpJ6qWqi/model-1fb4233da27.stan', line 65, column 18: Found #>     int division: #>       k_max * (k_max + 1) / 2 #>     Values will be rounded towards zero. If rounding is not desired you can #>     write #>     the division as #>       k_max * (k_max + 1) / 2.0 #>     If rounding is intended please use the integer division operator %/%. #> Warning in '/tmp/RtmpJ6qWqi/model-1fb4233da27.stan', line 67, column 18: Found #>     int division: #>       k_max * (k_max + 1) / 2 #>     Values will be rounded towards zero. If rounding is not desired you can #>     write #>     the division as #>       k_max * (k_max + 1) / 2.0 #>     If rounding is intended please use the integer division operator %/%. #> Warning in '/tmp/RtmpJ6qWqi/model-1fb4233da27.stan', line 84, column 11: Found #>     int division: #>       k_max * (k_max + 1) / 2 #>     Values will be rounded towards zero. If rounding is not desired you can #>     write #>     the division as #>       k_max * (k_max + 1) / 2.0 #>     If rounding is intended please use t #> he integer division operator %/%. #> Running MCMC with 1 chain... #>  #> Chain 1 WARNING: No variance estimation is  #> Chain 1          performed for num_warmup < 20  #> Chain 1 Iteration:  1 / 20 [  5%]  (Warmup)  #> Chain 1 Iteration: 11 / 20 [ 55%]  (Sampling)  #> Chain 1 Iteration: 20 / 20 [100%]  (Sampling)  #> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 1 Exception: gamma_lpdf: Random variable is inf, but must be positive finite! (in '/tmp/RtmpJ6qWqi/model-1fb4233da27.stan', line 43, column 2 to column 29) #> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 1  #> Chain 1 finished in 0.1 seconds. #> Warning: 3 of 10 (30.0%) transitions ended with a divergence. #> See https://mc-stan.org/misc/warnings for details. # An S3 method can be used to report to screen what is in the object print(x) #> ── [ INCOMMON ]  4 PASS mutations across 1 samples, with 4 mutant genes across 1 #> ℹ Average sample purity: 0.6 #> ℹ Average sequencing depth: 380 #> # A tibble: 4 × 36 #>   sample    tumor_type purity purity_map eta_map chr     from     to gene  ref   #>   <chr>     <chr>       <dbl>      <dbl>   <dbl> <chr>  <dbl>  <dbl> <chr> <chr> #> 1 P-0002081 LUAD          0.6      0.810    129. chr12 2.54e7 2.54e7 KRAS  C     #> 2 P-0002081 LUAD          0.6      0.810    129. chr17 7.58e6 7.58e6 TP53  G     #> 3 P-0002081 LUAD          0.6      0.810    129. chr19 1.22e6 1.22e6 STK11 C     #> 4 P-0002081 LUAD          0.6      0.810    129. chr19 1.11e7 1.11e7 SMAR… -     #> # ℹ 26 more variables: alt <chr>, NV <int>, DP <int>, VAF <dbl>, map_k <int>, #> #   map_m <int>, gene_role <chr>, OS_MONTHS <dbl>, OS_STATUS <dbl>, #> #   SAMPLE_TYPE <chr>, MET_COUNT <dbl>, METASTATIC_SITE <chr>, #> #   MET_SITE_COUNT <dbl>, PRIMARY_SITE <chr>, SUBTYPE_ABBREVIATION <chr>, #> #   GENE_PANEL <chr>, SEX <chr>, TMB_NONSYNONYMOUS <dbl>, FGA <dbl>, #> #   AGE_AT_SEQUENCING <dbl>, RACE <chr>, bayes_p_purity <dbl>, #> #   bayes_p_eta <dbl>, post_pred_p.value_DP <dbl>, …"},{"path":"caravagnalab.github.io/INCOMMON/reference/compute_eta_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate a prior distribution over the rate of reads per chromosom copy from the data. — compute_eta_prior","title":"Evaluate a prior distribution over the rate of reads per chromosom copy from the data. — compute_eta_prior","text":"Evaluate prior distribution rate reads per chromosom copy data.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/compute_eta_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate a prior distribution over the rate of reads per chromosom copy from the data. — compute_eta_prior","text":"","code":"compute_eta_prior(x, priors_k_m = priors_k_m)"},{"path":"caravagnalab.github.io/INCOMMON/reference/compute_eta_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate a prior distribution over the rate of reads per chromosom copy from the data. — compute_eta_prior","text":"x object class INCOMMON. priors_k_m Pre-computed priors gene muation total copy number multiplicity.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/compute_eta_prior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate a prior distribution over the rate of reads per chromosom copy from the data. — compute_eta_prior","text":"","code":"# First load example classified data data(MSK_PAAD_output) data(priors_pcawg_hmf) compute_eta_prior(x = MSK_PAAD_output, priors_k_m = priors_pcawg_hmf) #> # A tibble: 2 × 6 #>   tumor_type mean_eta var_eta     N alpha_eta beta_eta #>   <chr>         <dbl>   <dbl> <int>     <dbl>    <dbl> #> 1 PAAD           336.  17039.  1659      6.62   0.0197 #> 2 PANCA          336.  17039.  1659      6.62   0.0197"},{"path":"caravagnalab.github.io/INCOMMON/reference/compute_expectations.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the expectation value of k, m and FAM from the model full posterior distribution. — compute_expectations","title":"Compute the expectation value of k, m and FAM from the model full posterior distribution. — compute_expectations","text":"Compute expectation value k, m FAM model full posterior distribution.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/compute_expectations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the expectation value of k, m and FAM from the model full posterior distribution. — compute_expectations","text":"","code":"compute_expectations(x)"},{"path":"caravagnalab.github.io/INCOMMON/reference/compute_expectations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the expectation value of k, m and FAM from the model full posterior distribution. — compute_expectations","text":"x object class INCOMMON.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/compute_expectations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the expectation value of k, m and FAM from the model full posterior distribution. — compute_expectations","text":"INCOMMON object annotated expectation values.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/compute_expectations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the expectation value of k, m and FAM from the model full posterior distribution. — compute_expectations","text":"","code":"# First load example classified data data(MSK_PAAD_output) compute_expectations(x = MSK_PAAD_output) #> Joining with `by = join_by(id)` #> ── [ INCOMMON ]  175054 PASS mutations across 24018 samples, with 290 mutant gen #> ℹ Average sample purity: 0.4 #> ℹ Average sequencing depth: 649 #> # A tibble: 7,839 × 189 #>    sample    tumor_type purity chr     from     to ref   alt      NV    DP gene  #>    <chr>     <chr>       <dbl> <chr>  <dbl>  <dbl> <chr> <chr> <int> <int> <chr> #>  1 P-0000142 PAAD          0.4 chr12 2.54e7 2.54e7 C     C       273  1404 KRAS  #>  2 P-0000142 PAAD          0.4 chr17 7.58e6 7.58e6 G     G        53   671 TP53  #>  3 P-0000142 PAAD          0.4 chr2  4.77e7 4.77e7 T     T        31   481 MSH2  #>  4 P-0000142 PAAD          0.4 chr5  1.28e6 1.28e6 G     G        34   227 TERT  #>  5 P-0000783 PAAD          0.8 chr12 2.54e7 2.54e7 C     C       474   941 KRAS  #>  6 P-0000783 PAAD          0.8 chr5  1.12e8 1.12e8 G     G       164   424 APC   #>  7 P-0000783 PAAD          0.8 chr11 8.60e7 8.60e7 T     T       210   601 EED   #>  8 P-0000783 PAAD          0.8 chr13 3.29e7 3.29e7 TC    TC      160   493 BRCA2 #>  9 P-0000879 PAAD          0.6 chr7  1.40e8 1.40e8 A     A       308   736 BRAF  #> 10 P-0000879 PAAD          0.6 chr1  1.15e8 1.15e8 T     T       188   506 NRAS  #> # ℹ 7,829 more rows #> # ℹ 178 more variables: HGVSp_Short <chr>, Entrez_Gene_Id <dbl>, Center <chr>, #> #   NCBI_Build <chr>, Chromosome <chr>, Strand <chr>, Consequence <chr>, #> #   Variant_Classification <chr>, Variant_Type <chr>, Tumor_Seq_Allele2 <chr>, #> #   dbSNP_RS <chr>, dbSNP_Val_Status <lgl>, Matched_Norm_Sample_Barcode <lgl>, #> #   Match_Norm_Seq_Allele1 <lgl>, Match_Norm_Seq_Allele2 <lgl>, #> #   Tumor_Validation_Allele1 <lgl>, Tumor_Validation_Allele2 <lgl>, …"},{"path":"caravagnalab.github.io/INCOMMON/reference/cox_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit multivariate Cox regression model based on INCOMMON classes. — cox_fit","title":"Fit multivariate Cox regression model based on INCOMMON classes. — cox_fit","text":"Fit multivariate Cox regression model based INCOMMON classes.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/cox_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit multivariate Cox regression model based on INCOMMON classes. — cox_fit","text":"","code":"cox_fit(   x,   gene,   tumor_type,   survival_time,   survival_status,   covariates = c(\"age\", \"sex\", \"tmb\"),   tmb_method = \"median\" )"},{"path":"caravagnalab.github.io/INCOMMON/reference/cox_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit multivariate Cox regression model based on INCOMMON classes. — cox_fit","text":"x object class 'INCOMMON' containing classification results produced function classify. gene gene patient's stratification based. tumor_type tumor type patients stratify. survival_time variable clincal_data used survival time. survival_status variable clincal_data used survival status. covariates covariates used mutlivariate regression. tmb_method method define reference value tumor mutational burden TMB","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/cox_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit multivariate Cox regression model based on INCOMMON classes. — cox_fit","text":"object class 'INCOMMON' containing additional object survival.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/cox_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit multivariate Cox regression model based on INCOMMON classes. — cox_fit","text":"","code":"# First load example classified data data(MSK_PAAD_output) # Perform Cox regression based on the classification of KRAS mutant samples of pancreatic adenocarcinoma MSK_PAAD_output = cox_fit(x = MSK_PAAD_output, tumor_type = 'PAAD', gene = 'KRAS', survival_time = 'OS_MONTHS', survival_status = 'OS_STATUS', covariates = c('age', 'sex', 'tmb'), tmb_method = \">10\") #> Joining with `by = join_by(id)` #> [1] \"Cox fit with INCOMMON groups:\" #> Call: #> survival::coxph(formula = formula %>% stats::as.formula(), data = data %>%  #>     as.data.frame()) #>  #>                        coef exp(coef) se(coef)     z        p #> groupBalanced Dosage 0.8179    2.2658   0.1159 7.058 1.69e-12 #> groupHigh Dosage     1.1569    3.1801   0.1242 9.318  < 2e-16 #> groupLow Dosage      0.6840    1.9818   0.1177 5.810 6.24e-09 #>  #> Likelihood ratio test=102.1  on 3 df, p=< 2.2e-16 #> n= 1772, number of events= 1090  #>    (7 observations deleted due to missingness) #> [1] \"Pairwise tests:\" #>  #> \t Simultaneous Tests for General Linear Hypotheses #>  #> Fit: survival::coxph(formula = formula %>% stats::as.formula(), data = data %>%  #>     as.data.frame()) #>  #> Linear Hypotheses: #>                                                  Estimate Std. Error z value #> `groupHigh Dosage` - `groupBalanced Dosage` == 0  0.33900    0.08156   4.156 #> `groupLow Dosage` - `groupBalanced Dosage` == 0  -0.13391    0.07299  -1.835 #>                                                  Pr(>|z|)     #> `groupHigh Dosage` - `groupBalanced Dosage` == 0 6.45e-05 *** #> `groupLow Dosage` - `groupBalanced Dosage` == 0     0.123     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #> (Adjusted p values reported -- single-step method) #>"},{"path":"caravagnalab.github.io/INCOMMON/reference/init.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare input for analyses with 'INCOMMON'. — init","title":"Prepare input for analyses with 'INCOMMON'. — init","text":"Process input data object class 'INCOMMON', ready downstream analyses (e.g. classify).","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare input for analyses with 'INCOMMON'. — init","text":"","code":"init(genomic_data, clinical_data, gene_roles = INCOMMON::cancer_gene_census)"},{"path":"caravagnalab.github.io/INCOMMON/reference/init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare input for analyses with 'INCOMMON'. — init","text":"genomic_data data table annotated mutations columns sample name sample, mutant chromosome chr, mutation start position , mutation end position , reference allele ref, alternative allele alt, integer sequencing depth DP, integer number reads variant NV, variant allele frequency VAF gene name gene Hugo Symbol,  protein sequence variant HGVS recommended format, preferably 1-letter amino-acid code HGVSp_Short. clinical_data data table clinical data compulsory matching sample names sample sample purity purity, optional clinical features like tumor type ONCOTREE code tumor_type (required tumor specific priors), overall survival status OS_STATUS time OS_MONTHS (required survival analysis), SAMPLE_TYPE (Primary Metastasis)  number metastases MET_COUNT (required metastatic propensity analysis), metastatic site METASTATIC_SITE (required metastatic tropism analysis), plus useful covariate. gene_roles data table reporting gene names associated gene_role (\"oncogene\" \"TSG\"). default taken COSMIC Cancer Gene Census v98.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare input for analyses with 'INCOMMON'. — init","text":"object class INCOMMON.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare input for analyses with 'INCOMMON'. — init","text":"","code":"# Example input data from the MSK-MetTropism cohort, released with the package data(MSK_genomic_data) print(MSK_genomic_data) #> # A tibble: 224,939 × 10 #>    sample    chr        from        to ref   alt      DP    NV   VAF gene    #>    <chr>     <chr>     <dbl>     <dbl> <chr> <chr> <int> <int> <dbl> <chr>   #>  1 P-0028912 chr17   7577121   7577121 G     A       837   133 0.159 TP53    #>  2 P-0028912 chr6  111983080 111983081 -     A       698   141 0.202 FYN     #>  3 P-0028912 chrX   53246994  53246994 G     A       832    85 0.102 KDM5C   #>  4 P-0003698 chr17   7576852   7576852 C     A       437   109 0.249 TP53    #>  5 P-0003698 chr3   49933259  49933259 C     A       591    86 0.146 MST1R   #>  6 P-0003698 chr5  149435631 149435631 C     T       360    36 0.1   CSF1R   #>  7 P-0003698 chr13  32913797  32913797 G     C      1027   162 0.158 BRCA2   #>  8 P-0003698 chr13  32914259  32914259 G     C      1021   182 0.178 BRCA2   #>  9 P-0003698 chr19  11136104  11136104 G     T       573    98 0.171 SMARCA4 #> 10 P-0003698 chr22  41543840  41543840 G     A       416    45 0.108 EP300   #> # ℹ 224,929 more rows data(MSK_clinical_data) print(MSK_clinical_data) #> # A tibble: 25,368 × 17 #> # Rowwise:  #>    sample    tumor_type purity OS_MONTHS OS_STATUS SAMPLE_TYPE MET_COUNT #>    <chr>     <chr>       <dbl>     <dbl>     <dbl> <chr>           <dbl> #>  1 P-0000004 BRCA          0.5      3.78         1 Primary             2 #>  2 P-0000015 BRCA          0.4     13.9          1 Metastasis          8 #>  3 P-0000024 UCEC          0.4     35.1          1 Metastasis          8 #>  4 P-0000025 UCEC          0.3     46            1 Metastasis         13 #>  5 P-0000026 UCEC          0.1     80.6          0 Metastasis         11 #>  6 P-0000034 BLCA          0.4      0.79         1 Primary             4 #>  7 P-0000037 HCC           0.9     80.9          0 Metastasis          1 #>  8 P-0000039 PLEMESO       0.4      5.62         1 Primary             5 #>  9 P-0000041 BRCA          0.3     13.6          1 Primary             9 #> 10 P-0000042 PLEMESO       0.4     56.9          1 Primary             0 #> # ℹ 25,358 more rows #> # ℹ 10 more variables: METASTATIC_SITE <chr>, MET_SITE_COUNT <dbl>, #> #   PRIMARY_SITE <chr>, SUBTYPE_ABBREVIATION <chr>, GENE_PANEL <chr>, #> #   SEX <chr>, TMB_NONSYNONYMOUS <dbl>, FGA <dbl>, AGE_AT_SEQUENCING <dbl>, #> #   RACE <chr> # Initialize the INCOMMON object (note the outputs to screen) x = init(genomic_data = MSK_genomic_data, clinical_data = MSK_clinical_data) #> ── INCOMMON - Inference of copy number and mutation multiplicity in oncology ─── #>  #> ── Genomic data ── #>  #> ✔ Found 25659 samples, with 224939 mutations in 491 genes #> ! No read counts found for 1393 mutations in 1393 samples #> ! Gene name not provided for 1393 mutations #> ! 201 genes could not be assigned a role (TSG or oncogene) #>  #> ── Clinical data ── #>  #> ℹ Provided clinical features: #>  #> ✔ sample (required for classification) #> ✔ purity (required for classification) #> ✔ tumor_type #> ✔ OS_MONTHS #> ✔ OS_STATUS #> ✔ SAMPLE_TYPE #> ✔ MET_COUNT #> ✔ METASTATIC_SITE #> ✔ MET_SITE_COUNT #> ✔ PRIMARY_SITE #> ✔ SUBTYPE_ABBREVIATION #> ✔ GENE_PANEL #> ✔ SEX #> ✔ TMB_NONSYNONYMOUS #> ✔ FGA #> ✔ AGE_AT_SEQUENCING #> ✔ RACE #>  #> ✔ Found 25257 matching samples #> ✖ Found 513 unmatched samples # An S3 method can be used to report to screen what is in the object print(x) #> ── [ INCOMMON ]  175054 PASS mutations across 24018 samples, with 290 mutant gen #> ℹ Average sample purity: 0.4 #> ℹ Average sequencing depth: 649 #> # A tibble: 175,054 × 27 #>    sample    tumor_type purity chr     from     to ref   alt      DP    NV   VAF #>    <chr>     <chr>       <dbl> <chr>  <dbl>  <dbl> <chr> <chr> <int> <int> <dbl> #>  1 P-0028912 CHOL          0.3 chr17 7.58e6 7.58e6 G     A       837   133 0.159 #>  2 P-0028912 CHOL          0.3 chrX  5.32e7 5.32e7 G     A       832    85 0.102 #>  3 P-0003698 BLCA          0.2 chr17 7.58e6 7.58e6 C     A       437   109 0.249 #>  4 P-0003698 BLCA          0.2 chr5  1.49e8 1.49e8 C     T       360    36 0.1   #>  5 P-0003698 BLCA          0.2 chr13 3.29e7 3.29e7 G     C      1027   162 0.158 #>  6 P-0003698 BLCA          0.2 chr13 3.29e7 3.29e7 G     C      1021   182 0.178 #>  7 P-0003698 BLCA          0.2 chr19 1.11e7 1.11e7 G     T       573    98 0.171 #>  8 P-0003698 BLCA          0.2 chr22 4.15e7 4.15e7 G     A       416    45 0.108 #>  9 P-0003698 BLCA          0.2 chrX  4.49e7 4.49e7 C     T       730   194 0.266 #> 10 P-0003823 BLCA          0.6 chr5  1.30e6 1.30e6 G     A       218   138 0.633 #> # ℹ 175,044 more rows #> # ℹ 16 more variables: gene <chr>, gene_role <chr>, OS_MONTHS <dbl>, #> #   OS_STATUS <dbl>, SAMPLE_TYPE <chr>, MET_COUNT <dbl>, METASTATIC_SITE <chr>, #> #   MET_SITE_COUNT <dbl>, PRIMARY_SITE <chr>, SUBTYPE_ABBREVIATION <chr>, #> #   GENE_PANEL <chr>, SEX <chr>, TMB_NONSYNONYMOUS <dbl>, FGA <dbl>, #> #   AGE_AT_SEQUENCING <dbl>, RACE <chr>"},{"path":"caravagnalab.github.io/INCOMMON/reference/kaplan_meier_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Kaplan-Meier survival model stratifying patients based on INCOMMON classes, for a single gene and tumour type. — kaplan_meier_fit","title":"Fit Kaplan-Meier survival model stratifying patients based on INCOMMON classes, for a single gene and tumour type. — kaplan_meier_fit","text":"Fit Kaplan-Meier survival model stratifying patients based INCOMMON classes, single gene tumour type.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/kaplan_meier_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Kaplan-Meier survival model stratifying patients based on INCOMMON classes, for a single gene and tumour type. — kaplan_meier_fit","text":"","code":"kaplan_meier_fit(x, tumor_type, gene, survival_time, survival_status)"},{"path":"caravagnalab.github.io/INCOMMON/reference/kaplan_meier_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Kaplan-Meier survival model stratifying patients based on INCOMMON classes, for a single gene and tumour type. — kaplan_meier_fit","text":"x object class 'INCOMMON' containing classification results produced function classify. tumor_type tumor type patients stratify. gene gene patient's stratification based. survival_time variable clincal_data used survival time. survival_status variable clincal_data used survival status.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/kaplan_meier_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Kaplan-Meier survival model stratifying patients based on INCOMMON classes, for a single gene and tumour type. — kaplan_meier_fit","text":"object class 'INCOMMON' containing additional object survival.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/kaplan_meier_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Kaplan-Meier survival model stratifying patients based on INCOMMON classes, for a single gene and tumour type. — kaplan_meier_fit","text":"","code":"# First load example classified data data(MSK_PAAD_output) # Perform survival analysis based on the classification of KRAS mutant samples of pancreatic adenocarcinoma MSK_PAAD_output = kaplan_meier_fit(x = MSK_PAAD_output, tumor_type = 'PAAD', gene = 'KRAS', survival_time = 'OS_MONTHS', survival_status = 'OS_STATUS') #> Joining with `by = join_by(id)` #> Call: survfit(formula = \"survival::Surv(OS_MONTHS, OS_STATUS) ~ group\",  #>     data = data) #>  #>    7 observations deleted due to missingness  #>                   n events median 0.95LCL 0.95UCL #> WT              214     92   38.3   28.98    51.1 #> Low Dosage      541    344   17.4   15.34    19.8 #> Balanced Dosage 670    417   14.6   13.34    15.8 #> High Dosage     347    237   10.7    9.36    12.5"},{"path":"caravagnalab.github.io/INCOMMON/reference/met_propensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Logistic regression of metastatic propensity based on INCOMMON classes. — met_propensity","title":"Logistic regression of metastatic propensity based on INCOMMON classes. — met_propensity","text":"Logistic regression metastatic propensity based INCOMMON classes.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/met_propensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic regression of metastatic propensity based on INCOMMON classes. — met_propensity","text":"","code":"met_propensity(x, gene, tumor_type)"},{"path":"caravagnalab.github.io/INCOMMON/reference/met_propensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logistic regression of metastatic propensity based on INCOMMON classes. — met_propensity","text":"x object class 'INCOMMON' containing classification results produced function classify. gene gene patient's stratification based. tumor_type tumor type patients stratify.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/met_propensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logistic regression of metastatic propensity based on INCOMMON classes. — met_propensity","text":"object class 'INCOMMON' containing additional object survival.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/met_propensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logistic regression of metastatic propensity based on INCOMMON classes. — met_propensity","text":"","code":"# First load example classified data data(MSK_PAAD_output) # Estimate the metastatic propensity associated with mutant TP53 with vs without CNA in BRCA. MSK_PAAD_output = met_propensity(x = MSK_PAAD_output, tumor_type = 'BRCA', gene = 'TP53') #> Joining with `by = join_by(id)`"},{"path":"caravagnalab.github.io/INCOMMON/reference/met_tropism.html","id":null,"dir":"Reference","previous_headings":"","what":"Logistic regression of metastatic tropism based on INCOMMON classes. — met_tropism","title":"Logistic regression of metastatic tropism based on INCOMMON classes. — met_tropism","text":"Logistic regression metastatic tropism based INCOMMON classes.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/met_tropism.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic regression of metastatic tropism based on INCOMMON classes. — met_tropism","text":"","code":"met_tropism(x, gene, tumor_type, metastatic_site)"},{"path":"caravagnalab.github.io/INCOMMON/reference/met_tropism.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logistic regression of metastatic tropism based on INCOMMON classes. — met_tropism","text":"x object class 'INCOMMON' containing classification results produced function classify. gene gene patient's stratification based. tumor_type tumor type patients stratify. metastatic_site target organ metastatic diffusion.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/met_tropism.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logistic regression of metastatic tropism based on INCOMMON classes. — met_tropism","text":"object class 'INCOMMON' containing additional object survival. Logistic regression metastatic tropism based INCOMMON classes.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/met_tropism.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logistic regression of metastatic tropism based on INCOMMON classes. — met_tropism","text":"","code":"# First load example classified data data(MSK_PAAD_output) # Estimate the metastatic propensity associated with mutant TP53 with vs # without CNA in BRCA, with respect to the Liver. MSK_PAAD_output = met_tropism(x = MSK_PAAD_output, tumor_type = 'BRCA', gene = 'TP53', metastatic_site = 'Liver') #> Joining with `by = join_by(id)`"},{"path":"caravagnalab.github.io/INCOMMON/reference/mutant_dosage_classification.html","id":null,"dir":"Reference","previous_headings":"","what":"Group patients by gene mutant mutant dosage using gene-role specific thresholds. — mutant_dosage_classification","title":"Group patients by gene mutant mutant dosage using gene-role specific thresholds. — mutant_dosage_classification","text":"Group patients gene mutant mutant dosage using gene-role specific thresholds.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/mutant_dosage_classification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group patients by gene mutant mutant dosage using gene-role specific thresholds. — mutant_dosage_classification","text":"","code":"mutant_dosage_classification(   x,   TSG_low = 0.25,   TSG_high = 0.75,   ONC_low = 0.33,   ONC_high = 0.66 )"},{"path":"caravagnalab.github.io/INCOMMON/reference/mutant_dosage_classification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group patients by gene mutant mutant dosage using gene-role specific thresholds. — mutant_dosage_classification","text":"x object class INCOMMON. TSG_low lower cutoff mutant dosage classification tumour suppressor genes. TSG_high upper cutoff mutant dosage classification tumour suppressor genes. ONC_low lower cutoff mutant dosage classification oncogenes. ONC_high upper cutoff mutant dosage classification oncogenes.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/mutant_dosage_classification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group patients by gene mutant mutant dosage using gene-role specific thresholds. — mutant_dosage_classification","text":"object class INCOMMON new columns reporting mean FAM class assignment.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/mutant_dosage_classification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group patients by gene mutant mutant dosage using gene-role specific thresholds. — mutant_dosage_classification","text":"","code":"# First load example classified data data(MSK_PAAD_output) mutant_dosage_classification(MSK_PAAD_output, TSG_low = .25, TSG_high = .75, ONC_low = .33, ONC_high = .66) #> Joining with `by = join_by(id)` #> ── [ INCOMMON ]  175054 PASS mutations across 24018 samples, with 290 mutant gen #> ℹ Average sample purity: 0.4 #> ℹ Average sequencing depth: 649 #> # A tibble: 7,839 × 192 #>    sample genotype tumor_type purity chr     from     to ref   alt      NV    DP #>    <chr>  <chr>    <chr>       <dbl> <chr>  <dbl>  <dbl> <chr> <chr> <int> <int> #>  1 P-000… KRAS wi… PAAD          0.4 chr12 2.54e7 2.54e7 C     C       273  1404 #>  2 P-000… KRAS wi… PAAD          0.4 chr17 7.58e6 7.58e6 G     G        53   671 #>  3 P-000… KRAS wi… PAAD          0.4 chr2  4.77e7 4.77e7 T     T        31   481 #>  4 P-000… KRAS wi… PAAD          0.4 chr5  1.28e6 1.28e6 G     G        34   227 #>  5 P-000… KRAS wi… PAAD          0.8 chr12 2.54e7 2.54e7 C     C       474   941 #>  6 P-000… KRAS wi… PAAD          0.8 chr5  1.12e8 1.12e8 G     G       164   424 #>  7 P-000… KRAS wi… PAAD          0.8 chr11 8.60e7 8.60e7 T     T       210   601 #>  8 P-000… KRAS wi… PAAD          0.8 chr13 3.29e7 3.29e7 TC    TC      160   493 #>  9 P-000… BRAF wi… PAAD          0.6 chr7  1.40e8 1.40e8 A     A       308   736 #> 10 P-000… BRAF wi… PAAD          0.6 chr1  1.15e8 1.15e8 T     T       188   506 #> # ℹ 7,829 more rows #> # ℹ 181 more variables: gene <chr>, HGVSp_Short <chr>, Entrez_Gene_Id <dbl>, #> #   Center <chr>, NCBI_Build <chr>, Chromosome <chr>, Strand <chr>, #> #   Consequence <chr>, Variant_Classification <chr>, Variant_Type <chr>, #> #   Tumor_Seq_Allele2 <chr>, dbSNP_RS <chr>, dbSNP_Val_Status <lgl>, #> #   Matched_Norm_Sample_Barcode <lgl>, Match_Norm_Seq_Allele1 <lgl>, #> #   Match_Norm_Seq_Allele2 <lgl>, Tumor_Validation_Allele1 <lgl>, …"},{"path":"caravagnalab.github.io/INCOMMON/reference/parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for class 'INCOMMON'. — parameters","title":"Getter for class 'INCOMMON'. — parameters","text":"Get model parameters performed classification tests.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for class 'INCOMMON'. — parameters","text":"","code":"parameters(x)"},{"path":"caravagnalab.github.io/INCOMMON/reference/parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for class 'INCOMMON'. — parameters","text":"x obj class 'INCOMMON'.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getter for class 'INCOMMON'. — parameters","text":"dplyr::tibble containing parameters models used classification.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getter for class 'INCOMMON'. — parameters","text":"","code":"# First load example classified data data(MSK_PAAD_output) # Get classification parameters parameters(MSK_PAAD_output) #> # A tibble: 1 × 11 #>   k_max purity_error num_cores iter_warmup iter_sampling num_chains results_dir  #>   <dbl>        <dbl>     <dbl>       <dbl>         <dbl>      <dbl> <chr>        #> 1     8         0.05         4        1000          2000          4 ~/INCOMMON_… #> # ℹ 4 more variables: generate_report_plot <lgl>, reports_dir <chr>, #> #   stan_fit_dump <lgl>, stan_fit_dir <chr>"},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_class_fraction.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize frequency distribution of INCOMMON classes. — plot_class_fraction","title":"Visualize frequency distribution of INCOMMON classes. — plot_class_fraction","text":"Visualize frequency distribution INCOMMON classes.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_class_fraction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize frequency distribution of INCOMMON classes. — plot_class_fraction","text":"","code":"plot_class_fraction(x, tumor_type = NULL, gene = NULL, ...)"},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_class_fraction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize frequency distribution of INCOMMON classes. — plot_class_fraction","text":"x list objects class 'INCOMMON' containing classification results, produced using function classify. tumor_type Tumor type tumor-specific prior ('PANCA' pan-cancer). gene Gene gene-specific prior. ... Default S3 method parameter.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_class_fraction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize frequency distribution of INCOMMON classes. — plot_class_fraction","text":"object list class 'ggplot2'.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_class_fraction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize frequency distribution of INCOMMON classes. — plot_class_fraction","text":"","code":"# First load example classified data data(MSK_PAAD_output) # Plot class fraction for a specific gene and tumour type MSK_PAAD_output = mutant_dosage_classification(MSK_PAAD_output) #> Joining with `by = join_by(id)` plot_class_fraction(x = MSK_PAAD_output, tumor_type = 'PAAD', gene = 'KRAS')"},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_eta_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise the prior distribution over the rate of reads per chromosome copy. — plot_eta_prior","title":"Visualise the prior distribution over the rate of reads per chromosome copy. — plot_eta_prior","text":"Visualise prior distribution rate reads per chromosome copy.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_eta_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise the prior distribution over the rate of reads per chromosome copy. — plot_eta_prior","text":"","code":"plot_eta_prior(x, priors_eta)"},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_eta_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise the prior distribution over the rate of reads per chromosome copy. — plot_eta_prior","text":"x object class INCOMMON.' priors_eta table prior distribution rate reads per chromosome copy obtained function compute_eta_prior.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_eta_prior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise the prior distribution over the rate of reads per chromosome copy. — plot_eta_prior","text":"","code":"# Load the default prior on eta, estimated from the MKS-MET data and the data. data(MSK_genomic_data) data(MSK_clinical_data) data(priors_eta) x = init(genomic_data = MSK_genomic_data, clinical_data =MSK_clinical_data) #> ── INCOMMON - Inference of copy number and mutation multiplicity in oncology ─── #>  #> ── Genomic data ── #>  #> ✔ Found 25659 samples, with 224939 mutations in 491 genes #> ! No read counts found for 1393 mutations in 1393 samples #> ! Gene name not provided for 1393 mutations #> ! 201 genes could not be assigned a role (TSG or oncogene) #>  #> ── Clinical data ── #>  #> ℹ Provided clinical features: #>  #> ✔ sample (required for classification) #> ✔ purity (required for classification) #> ✔ tumor_type #> ✔ OS_MONTHS #> ✔ OS_STATUS #> ✔ SAMPLE_TYPE #> ✔ MET_COUNT #> ✔ METASTATIC_SITE #> ✔ MET_SITE_COUNT #> ✔ PRIMARY_SITE #> ✔ SUBTYPE_ABBREVIATION #> ✔ GENE_PANEL #> ✔ SEX #> ✔ TMB_NONSYNONYMOUS #> ✔ FGA #> ✔ AGE_AT_SEQUENCING #> ✔ RACE #>  #> ✔ Found 25257 matching samples #> ✖ Found 513 unmatched samples # Plot classification results for a specific sample plot_eta_prior(x = x, priors_eta = priors_eta) #> Warning: Unknown or uninitialised column: `cohort`. #> Warning: Unknown or uninitialised column: `cohort`. #> Warning: Unknown or uninitialised column: `cohort`. #> Warning: Unknown or uninitialised column: `cohort`. #> Warning: Unknown or uninitialised column: `cohort`. #> Warning: Unknown or uninitialised column: `cohort`. #> Warning: Unknown or uninitialised column: `cohort`. #> Warning: Unknown or uninitialised column: `cohort`. #> Warning: Unknown or uninitialised column: `cohort`. #> Warning: Unknown or uninitialised column: `cohort`. #> Warning: Unknown or uninitialised column: `cohort`. #> Warning: Unknown or uninitialised column: `cohort`. #> Picking joint bandwidth of 36.2 #> Warning: Removed 1681 rows containing non-finite outside the scale range #> (`stat_density_ridges()`)."},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_met_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize metastatic propnesity odds ratio in a volcano plot fashion. — plot_met_volcano","title":"Visualize metastatic propnesity odds ratio in a volcano plot fashion. — plot_met_volcano","text":"Visualize metastatic propnesity odds ratio volcano plot fashion.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_met_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize metastatic propnesity odds ratio in a volcano plot fashion. — plot_met_volcano","text":"","code":"plot_met_volcano(x, tumor_type)"},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_met_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize metastatic propnesity odds ratio in a volcano plot fashion. — plot_met_volcano","text":"x object class 'INCOMMON' containing classification results, produced function classify. tumor_type tumour type classified data available. 'PANCA' pools multiple tumour types pan-cancer visualisation.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_met_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize metastatic propnesity odds ratio in a volcano plot fashion. — plot_met_volcano","text":"object list objects class 'ggplot2'.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_met_volcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize metastatic propnesity odds ratio in a volcano plot fashion. — plot_met_volcano","text":"","code":"# First load example classified data data(MSK_PAAD_output) # Estimate the metastatic propensity associated with mutant KRAS and CDKN2A high vs balanced dosage. for(g in c('KRAS', 'CDKN2A')){MSK_PAAD_output = met_propensity(x = MSK_PAAD_output, tumor_type = 'PAAD', gene = g)} #> Joining with `by = join_by(id)` #> Waiting for profiling to be done... #> Waiting for profiling to be done... #> # A tibble: 1 × 6 #>   gene  class          OR   low    up p.value #>   <chr> <chr>       <dbl> <dbl> <dbl>   <dbl> #> 1 KRAS  High Dosage 0.584 0.348 0.986  0.0423 #> Waiting for profiling to be done... #> Waiting for profiling to be done... #> # A tibble: 1 × 6 #>   gene   class          OR   low    up p.value #>   <chr>  <chr>       <dbl> <dbl> <dbl>   <dbl> #> 1 CDKN2A High Dosage  3.46  1.21  9.24  0.0153 # Plot results in a volcano plot plot_met_volcano(x = MSK_PAAD_output, tumor_type = 'PAAD')"},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_posterior_k_m.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise the posterior distribution on (k,m) configurations. — plot_posterior_k_m","title":"Visualise the posterior distribution on (k,m) configurations. — plot_posterior_k_m","text":"Visualise posterior distribution (k,m) configurations.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_posterior_k_m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise the posterior distribution on (k,m) configurations. — plot_posterior_k_m","text":"","code":"plot_posterior_k_m(x, k_max = NULL, z_km = NULL)"},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_posterior_k_m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise the posterior distribution on (k,m) configurations. — plot_posterior_k_m","text":"x object class INCOMMON. k_max maximum allowed value total copyu number. z_km list posterior distributions (k,m) configurations.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_posterior_k_m.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise the posterior distribution on (k,m) configurations. — plot_posterior_k_m","text":"object list objects class 'ggplot2'.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_posterior_k_m.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise the posterior distribution on (k,m) configurations. — plot_posterior_k_m","text":"","code":"# First load example classified data data(MSK_PAAD_output) # Plot classification results for a specific sample x = subset_sample(x = MSK_PAAD_output, sample_list = \"P-0000142\") plot_posterior_k_m(x = x)"},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize prior distribution for a gene (tumor-specific or pancancer). — plot_prior","title":"Visualize prior distribution for a gene (tumor-specific or pancancer). — plot_prior","text":"Visualize prior distribution gene (tumor-specific pancancer).","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize prior distribution for a gene (tumor-specific or pancancer). — plot_prior","text":"","code":"plot_prior(x, gene, tumor_type)"},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize prior distribution for a gene (tumor-specific or pancancer). — plot_prior","text":"x prior distribution format required INCOMMON, INCOMMON::priors_pcawg_hmf. gene Gene gene-specific prior. tumor_type Tumor type tumor-specific prior ('PANCA' pan-cancer).","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize prior distribution for a gene (tumor-specific or pancancer). — plot_prior","text":"object list objects class 'ggplot2'.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_prior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize prior distribution for a gene (tumor-specific or pancancer). — plot_prior","text":"","code":"# First load example classified data data(MSK_PAAD_output) # Plot classification results for a specific sample plot_prior(x = MSK_PAAD_output, gene = 'TP53', tumor_type = 'PAAD')"},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_purity_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise the prior distribution on sample purity — plot_purity_prior","title":"Visualise the prior distribution on sample purity — plot_purity_prior","text":"Visualise prior distribution sample purity","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_purity_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise the prior distribution on sample purity — plot_purity_prior","text":"","code":"plot_purity_prior(x, sample, purity_error = 0.05)"},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_purity_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise the prior distribution on sample purity — plot_purity_prior","text":"x object class INCOMMON. sample identifier tumour sample. purity_error variance Beta prior distribution purity.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_purity_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise the prior distribution on sample purity — plot_purity_prior","text":"object list objects class 'ggplot2'.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_purity_prior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise the prior distribution on sample purity — plot_purity_prior","text":"","code":"# First load example classified data data(MSK_PAAD_output) # Plot classification results for a specific sample plot_purity_prior(x = MSK_PAAD_output, sample = \"P-0000142\", purity_error = 0.05)"},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_survival_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise survival analysis based on INCOMMON classes. — plot_survival_analysis","title":"Visualise survival analysis based on INCOMMON classes. — plot_survival_analysis","text":"Visualise survival analysis based INCOMMON classes.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_survival_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise survival analysis based on INCOMMON classes. — plot_survival_analysis","text":"","code":"plot_survival_analysis(   x,   tumor_type,   gene,   cox_covariates = c(\"age\", \"sex\", \"tmb\") )"},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_survival_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise survival analysis based on INCOMMON classes. — plot_survival_analysis","text":"x list objects class 'INCOMMON' containing classification results multiple samples, produced using function classify. tumor_type selected tumour type. gene selected gene. cox_covariates character vector listing covariates used multivariarte regression.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_survival_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise survival analysis based on INCOMMON classes. — plot_survival_analysis","text":"object list class 'ggplot2' showing Kaplan-Meier curves Cox regression forest plot.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_survival_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise survival analysis based on INCOMMON classes. — plot_survival_analysis","text":"","code":"# First load example classified data data(MSK_PAAD_output) # Perform survival analysis based on the classification of KRAS mutant samples of pancreatic adenocarcinoma MSK_PAAD_output = kaplan_meier_fit(x = MSK_PAAD_output, tumor_type = 'PAAD', gene = 'KRAS', survival_time = 'OS_MONTHS', survival_status = 'OS_STATUS') #> Joining with `by = join_by(id)` #> Call: survfit(formula = \"survival::Surv(OS_MONTHS, OS_STATUS) ~ group\",  #>     data = data) #>  #>    7 observations deleted due to missingness  #>                   n events median 0.95LCL 0.95UCL #> WT              214     92   38.3   28.98    51.1 #> Low Dosage      541    344   17.4   15.34    19.8 #> Balanced Dosage 670    417   14.6   13.34    15.8 #> High Dosage     347    237   10.7    9.36    12.5 # Perform Cox regression MSK_PAAD_output = cox_fit(x = MSK_PAAD_output, tumor_type = 'PAAD', gene = 'KRAS', survival_time = 'OS_MONTHS', survival_status = 'OS_STATUS', covariates = c('age', 'sex', 'tmb'), tmb_method = \">10\") #> [1] \"Cox fit with INCOMMON groups:\" #> Call: #> survival::coxph(formula = formula %>% stats::as.formula(), data = data %>%  #>     as.data.frame()) #>  #>                        coef exp(coef) se(coef)     z        p #> groupBalanced Dosage 0.8179    2.2658   0.1159 7.058 1.69e-12 #> groupHigh Dosage     1.1569    3.1801   0.1242 9.318  < 2e-16 #> groupLow Dosage      0.6840    1.9818   0.1177 5.810 6.24e-09 #>  #> Likelihood ratio test=102.1  on 3 df, p=< 2.2e-16 #> n= 1772, number of events= 1090  #>    (7 observations deleted due to missingness) #> [1] \"Pairwise tests:\" #>  #> \t Simultaneous Tests for General Linear Hypotheses #>  #> Fit: survival::coxph(formula = formula %>% stats::as.formula(), data = data %>%  #>     as.data.frame()) #>  #> Linear Hypotheses: #>                                                  Estimate Std. Error z value #> `groupHigh Dosage` - `groupBalanced Dosage` == 0  0.33900    0.08156   4.156 #> `groupLow Dosage` - `groupBalanced Dosage` == 0  -0.13391    0.07299  -1.835 #>                                                  Pr(>|z|)     #> `groupHigh Dosage` - `groupBalanced Dosage` == 0 6.45e-05 *** #> `groupLow Dosage` - `groupBalanced Dosage` == 0     0.123     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #> (Adjusted p values reported -- single-step method) #>  plot_survival_analysis(x = MSK_PAAD_output, tumor_type = 'PAAD', gene = 'KRAS') #> Scale for x is already present. #> Adding another scale for x, which will replace the existing scale. #> Scale for x is already present. #> Adding another scale for x, which will replace the existing scale. #> Joining with `by = join_by(var)` #> Joining with `by = join_by(var)` #> Warning: Removed 3 rows containing missing values or values outside the scale range #> (`geom_rect()`). #> Warning: Removed 3 rows containing missing values or values outside the scale range #> (`geom_point()`). #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_rect()`). #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_tropism.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize metastatic propnesity odds ratio in a volcano plot fashion. — plot_tropism","title":"Visualize metastatic propnesity odds ratio in a volcano plot fashion. — plot_tropism","text":"Visualize metastatic propnesity odds ratio volcano plot fashion.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_tropism.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize metastatic propnesity odds ratio in a volcano plot fashion. — plot_tropism","text":"","code":"plot_tropism(x, tumor_type)"},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_tropism.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize metastatic propnesity odds ratio in a volcano plot fashion. — plot_tropism","text":"x object class 'INCOMMON' containing classification results, produced function classify. tumor_type tumour type classified data available.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_tropism.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize metastatic propnesity odds ratio in a volcano plot fashion. — plot_tropism","text":"object list objects class 'ggplot2'.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_tropism.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize metastatic propnesity odds ratio in a volcano plot fashion. — plot_tropism","text":"","code":"# First load example classified data data(MSK_PAAD_output) # Estimate the metastatic tropism associated with mutant TP53, KRAS, CDKN2A, high vs balanced mutant dosage. for(g in c('TP53', 'KRAS', 'CDKN2A')){for(m in c('Liver', 'Lymph', 'Bone', 'CNS/Brain')){MSK_PAAD_output = met_tropism(x = MSK_PAAD_output, gene = g, tumor_type = 'PAAD', metastatic_site = m)}} #> Joining with `by = join_by(id)` #> Waiting for profiling to be done... #> Waiting for profiling to be done... #> # A tibble: 1 × 7 #>   gene  metastatic_site class          OR   low    up p.value #>   <chr> <chr>           <chr>       <dbl> <dbl> <dbl>   <dbl> #> 1 TP53  Liver           High Dosage 0.650 0.410  1.03  0.0664 #> Waiting for profiling to be done... #> Waiting for profiling to be done... #> # A tibble: 1 × 7 #>   gene  metastatic_site class          OR   low    up p.value #>   <chr> <chr>           <chr>       <dbl> <dbl> <dbl>   <dbl> #> 1 TP53  Lymph           High Dosage  1.24 0.362  3.96   0.716 #> Waiting for profiling to be done... #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: collapsing to unique 'x' values #> Waiting for profiling to be done... #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: collapsing to unique 'x' values #> # A tibble: 1 × 7 #>   gene  metastatic_site class          OR   low    up p.value #>   <chr> <chr>           <chr>       <dbl> <dbl> <dbl>   <dbl> #> 1 TP53  Bone            High Dosage  1.00    NA    NA   1.000 #> Waiting for profiling to be done... #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: collapsing to unique 'x' values #> Waiting for profiling to be done... #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: collapsing to unique 'x' values #> # A tibble: 1 × 7 #>   gene  metastatic_site class               OR   low    up p.value #>   <chr> <chr>           <chr>            <dbl> <dbl> <dbl>   <dbl> #> 1 TP53  CNS/Brain       High Dosage 115193308.     0    NA   0.997 #> Waiting for profiling to be done... #> Waiting for profiling to be done... #> # A tibble: 1 × 7 #>   gene  metastatic_site class          OR   low    up p.value #>   <chr> <chr>           <chr>       <dbl> <dbl> <dbl>   <dbl> #> 1 KRAS  Liver           High Dosage  1.72  1.09  2.77  0.0232 #> Waiting for profiling to be done... #> Waiting for profiling to be done... #> # A tibble: 1 × 7 #>   gene  metastatic_site class          OR   low    up p.value #>   <chr> <chr>           <chr>       <dbl> <dbl> <dbl>   <dbl> #> 1 KRAS  Lymph           High Dosage 0.825 0.287  2.10   0.699 #> Waiting for profiling to be done... #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: collapsing to unique 'x' values #> Waiting for profiling to be done... #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: collapsing to unique 'x' values #> # A tibble: 1 × 7 #>   gene  metastatic_site class               OR   low    up p.value #>   <chr> <chr>           <chr>            <dbl> <dbl> <dbl>   <dbl> #> 1 KRAS  Bone            High Dosage 114425353.     0    NA   0.997 #> Waiting for profiling to be done... #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Waiting for profiling to be done... #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> # A tibble: 1 × 7 #>   gene  metastatic_site class                 OR   low    up p.value #>   <chr> <chr>           <chr>              <dbl> <dbl> <dbl>   <dbl> #> 1 KRAS  CNS/Brain       High Dosage 0.0000000170    NA   Inf   0.998 #> Waiting for profiling to be done... #> Waiting for profiling to be done... #> # A tibble: 1 × 7 #>   gene   metastatic_site class          OR   low    up p.value #>   <chr>  <chr>           <chr>       <dbl> <dbl> <dbl>   <dbl> #> 1 CDKN2A Liver           High Dosage  1.08 0.396  2.68   0.872 #> Waiting for profiling to be done... #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Waiting for profiling to be done... #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> # A tibble: 1 × 7 #>   gene   metastatic_site class          OR   low    up p.value #>   <chr>  <chr>           <chr>       <dbl> <dbl> <dbl>   <dbl> #> 1 CDKN2A Lymph           High Dosage 0.770 0.108  15.4   0.819 #> Waiting for profiling to be done... #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Waiting for profiling to be done... #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> # A tibble: 1 × 7 #>   gene   metastatic_site class                  OR   low    up p.value #>   <chr>  <chr>           <chr>               <dbl> <dbl> <dbl>   <dbl> #> 1 CDKN2A Bone            High Dosage 0.00000000412    NA   Inf   0.996 # Plot results in a volcano plot plot_tropism(x = MSK_PAAD_output, tumor_type = 'PAAD')"},{"path":"caravagnalab.github.io/INCOMMON/reference/posterior_k_m.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the posterior distribution over (k,m) configurations for a specific mutation — posterior_k_m","title":"Get the posterior distribution over (k,m) configurations for a specific mutation — posterior_k_m","text":"Get posterior distribution (k,m) configurations specific mutation","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/posterior_k_m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the posterior distribution over (k,m) configurations for a specific mutation — posterior_k_m","text":"","code":"posterior_k_m(x, id)"},{"path":"caravagnalab.github.io/INCOMMON/reference/posterior_k_m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the posterior distribution over (k,m) configurations for a specific mutation — posterior_k_m","text":"x object class INCOMMON. id id mutation (sample:chr:::ref:alt:NV:DP)","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/posterior_k_m.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the posterior distribution over (k,m) configurations for a specific mutation — posterior_k_m","text":"table estimated posterior distribution.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/posterior_k_m.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the posterior distribution over (k,m) configurations for a specific mutation — posterior_k_m","text":"","code":"# First load example classified data data(MSK_PAAD_output) show_FAM(MSK_PAAD_output, tumor_type = 'PAAD', gene = 'TP53') #> Joining with `by = join_by(id)` #> # A tibble: 1,346 × 10 #>    sample   gene  gene_role    NV    DP purity purity_map eta_map      FAM class #>    <chr>    <chr> <chr>     <int> <int>  <dbl>      <dbl>   <dbl>    <dbl> <chr> #>  1 P-00001… TP53  TSG          53   671    0.4      0.454    240. 2.50e- 1 Low … #>  2 P-00015… TP53  TSG         370   703    0.6      0.541    347. 1   e+ 0 High… #>  3 P-00020… TP53  TSG         295   565    0.5      0.564    180. 7.50e- 1 Bala… #>  4 P-00022… TP53  TSG          21  1020    0.5      0.162    328. 1.25e- 1 Low … #>  5 P-00024… TP53  TSG         171   548    0.2      0.333    268. 9.99e- 1 High… #>  6 P-00024… TP53  TSG         195   601    0.2      0.291    326. 1.00e+ 0 High… #>  7 P-00024… TP53  TSG          62   534    0.3      0.215    299. 9.99e- 1 High… #>  8 P-00028… TP53  TSG         170   854    0.5      0.593    160. 2.50e- 1 Bala… #>  9 P-00029… TP53  TSG         265   447    0.7      0.738    293. 1.00e+ 0 High… #> 10 P-00029… TP53  TSG         160   722    0.6      0.442    255. 1.51e-10 Low … #> # ℹ 1,336 more rows"},{"path":"caravagnalab.github.io/INCOMMON/reference/print.INCOMMON.html","id":null,"dir":"Reference","previous_headings":"","what":"Print for class 'INCOMMON'. — print.INCOMMON","title":"Print for class 'INCOMMON'. — print.INCOMMON","text":"Print class 'INCOMMON'.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/print.INCOMMON.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print for class 'INCOMMON'. — print.INCOMMON","text":"","code":"# S3 method for class 'INCOMMON' print(x, ...)"},{"path":"caravagnalab.github.io/INCOMMON/reference/print.INCOMMON.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print for class 'INCOMMON'. — print.INCOMMON","text":"x obj class 'INCOMMON'. ... Default S3 method parameter.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/print.INCOMMON.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print for class 'INCOMMON'. — print.INCOMMON","text":"Nothing.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/priors_eta.html","id":null,"dir":"Reference","previous_headings":"","what":"Priors over the rate of reads per chromosome copy from MSK-MET — priors_eta","title":"Priors over the rate of reads per chromosome copy from MSK-MET — priors_eta","text":"Prior distribution copy number mutation multiplicity PCAWG.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/priors_eta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Priors over the rate of reads per chromosome copy from MSK-MET — priors_eta","text":"","code":"data(priors_eta)"},{"path":"caravagnalab.github.io/INCOMMON/reference/priors_eta.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Priors over the rate of reads per chromosome copy from MSK-MET — priors_eta","text":"data frame 12 rows 6 columns: tumor_type Tumor type. mean_eta Mean distribution var_eta Variance distribution N Total number samples alpha_eta Shape parameter alpha distribution beta_eta Shape parameter beta distribution","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/priors_eta.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Priors over the rate of reads per chromosome copy from MSK-MET — priors_eta","text":"Validated copy number calls PCAWG: https://doi.org/10.5281/zenodo.6410935","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/priors_eta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Priors over the rate of reads per chromosome copy from MSK-MET — priors_eta","text":"","code":"data(priors_eta) priors_eta #> # A tibble: 12 × 6 #>    tumor_type mean_eta var_eta     N alpha_eta beta_eta #>    <chr>         <dbl>   <dbl> <int>     <dbl>    <dbl> #>  1 BRCA           320.  31113.  2271      3.28  0.0103  #>  2 ESCA           357.  28769.   285      4.44  0.0124  #>  3 GIST           340.  61998.   299      1.87  0.00549 #>  4 HCC            304.  16885.   171      5.48  0.0180  #>  5 LUAD           353.  34458.  3406      3.61  0.0102  #>  6 MEL            304.  28999.  1042      3.19  0.0105  #>  7 OV             316.  19945.   936      5.01  0.0159  #>  8 PAAD           334.  15101.  1698      7.38  0.0221  #>  9 PRAD           283.  21340.   223      3.75  0.0133  #> 10 SCLC           372.  45882.   255      3.01  0.00811 #> 11 STAD           298.  17672.    85      5.04  0.0169  #> 12 PANCA          332.  29352. 10732      3.75  0.0113"},{"path":"caravagnalab.github.io/INCOMMON/reference/priors_k_m.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for class 'INCOMMON'. — priors_k_m","title":"Getter for class 'INCOMMON'. — priors_k_m","text":"Get model priors used classification.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/priors_k_m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for class 'INCOMMON'. — priors_k_m","text":"","code":"priors_k_m(x)"},{"path":"caravagnalab.github.io/INCOMMON/reference/priors_k_m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for class 'INCOMMON'. — priors_k_m","text":"x obj class 'INCOMMON'.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/priors_k_m.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getter for class 'INCOMMON'. — priors_k_m","text":"dplyr::tibble containing prior distributions.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/priors_k_m.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getter for class 'INCOMMON'. — priors_k_m","text":"","code":"# First load example classified data data(MSK_PAAD_output) # Get priors used in classification priors_k_m(MSK_PAAD_output) #> # A tibble: 26,280 × 6 #> # Groups:   gene, tumor_type [730] #>    gene  tumor_type     k     m     N     n #>    <chr> <chr>      <int> <int> <dbl> <dbl> #>  1 ABL1  HCC            1     1 1026.  55.7 #>  2 ABL1  HCC            2     1 1026. 481.  #>  3 ABL1  HCC            2     2 1026.  90.6 #>  4 ABL1  HCC            3     1 1026.  87.9 #>  5 ABL1  HCC            3     2 1026.  73.0 #>  6 ABL1  HCC            3     3 1026.  38.9 #>  7 ABL1  HCC            4     1 1026.  25.1 #>  8 ABL1  HCC            4     2 1026.  42.7 #>  9 ABL1  HCC            4     3 1026.  21.7 #> 10 ABL1  HCC            4     4 1026.  16.8 #> # ℹ 26,270 more rows"},{"path":"caravagnalab.github.io/INCOMMON/reference/priors_pcawg_hmf.html","id":null,"dir":"Reference","previous_headings":"","what":"Priors over (k,m) configurations from PCAWG and HMF — priors_pcawg_hmf","title":"Priors over (k,m) configurations from PCAWG and HMF — priors_pcawg_hmf","text":"Prior distribution copy number mutation multiplicity PCAWG.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/priors_pcawg_hmf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Priors over (k,m) configurations from PCAWG and HMF — priors_pcawg_hmf","text":"","code":"data(priors_pcawg_hmf)"},{"path":"caravagnalab.github.io/INCOMMON/reference/priors_pcawg_hmf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Priors over (k,m) configurations from PCAWG and HMF — priors_pcawg_hmf","text":"data frame 26,280 rows 6 columns: gene Name gene (Hugo Symbol). tumor_type Tumor type. k Total copy number m Mutation multiplicity N Total number samples n Number samples per (k,m) configuration","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/priors_pcawg_hmf.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Priors over (k,m) configurations from PCAWG and HMF — priors_pcawg_hmf","text":"Validated copy number calls PCAWG: https://doi.org/10.5281/zenodo.6410935","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/priors_pcawg_hmf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Priors over (k,m) configurations from PCAWG and HMF — priors_pcawg_hmf","text":"","code":"data(priors_pcawg_hmf) priors_pcawg_hmf #> # A tibble: 26,280 × 6 #> # Groups:   gene, tumor_type [730] #>    gene  tumor_type     k     m     N     n #>    <chr> <chr>      <int> <int> <dbl> <dbl> #>  1 ABL1  HCC            1     1 1026.  55.7 #>  2 ABL1  HCC            2     1 1026. 481.  #>  3 ABL1  HCC            2     2 1026.  90.6 #>  4 ABL1  HCC            3     1 1026.  87.9 #>  5 ABL1  HCC            3     2 1026.  73.0 #>  6 ABL1  HCC            3     3 1026.  38.9 #>  7 ABL1  HCC            4     1 1026.  25.1 #>  8 ABL1  HCC            4     2 1026.  42.7 #>  9 ABL1  HCC            4     3 1026.  21.7 #> 10 ABL1  HCC            4     4 1026.  16.8 #> # ℹ 26,270 more rows"},{"path":"caravagnalab.github.io/INCOMMON/reference/show_FAM.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the fraction of alleles with the mutation (FAM) values for a gene and cancer type. — show_FAM","title":"Get the fraction of alleles with the mutation (FAM) values for a gene and cancer type. — show_FAM","text":"Get fraction alleles mutation (FAM) values gene cancer type.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/show_FAM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the fraction of alleles with the mutation (FAM) values for a gene and cancer type. — show_FAM","text":"","code":"show_FAM(x, tumor_type = NULL, gene = NULL)"},{"path":"caravagnalab.github.io/INCOMMON/reference/show_FAM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the fraction of alleles with the mutation (FAM) values for a gene and cancer type. — show_FAM","text":"x object class INCOMMON. tumor_type tumour type identifier. gene gene name..","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/show_FAM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the fraction of alleles with the mutation (FAM) values for a gene and cancer type. — show_FAM","text":"table estimated FAM values","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/show_FAM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the fraction of alleles with the mutation (FAM) values for a gene and cancer type. — show_FAM","text":"","code":"# First load example classified data data(MSK_PAAD_output) show_FAM(MSK_PAAD_output, tumor_type = 'PAAD', gene = 'TP53') #> Joining with `by = join_by(id)` #> # A tibble: 1,346 × 10 #>    sample   gene  gene_role    NV    DP purity purity_map eta_map      FAM class #>    <chr>    <chr> <chr>     <int> <int>  <dbl>      <dbl>   <dbl>    <dbl> <chr> #>  1 P-00001… TP53  TSG          53   671    0.4      0.454    240. 2.50e- 1 Low … #>  2 P-00015… TP53  TSG         370   703    0.6      0.541    347. 1   e+ 0 High… #>  3 P-00020… TP53  TSG         295   565    0.5      0.564    180. 7.50e- 1 Bala… #>  4 P-00022… TP53  TSG          21  1020    0.5      0.162    328. 1.25e- 1 Low … #>  5 P-00024… TP53  TSG         171   548    0.2      0.333    268. 9.99e- 1 High… #>  6 P-00024… TP53  TSG         195   601    0.2      0.291    326. 1.00e+ 0 High… #>  7 P-00024… TP53  TSG          62   534    0.3      0.215    299. 9.99e- 1 High… #>  8 P-00028… TP53  TSG         170   854    0.5      0.593    160. 2.50e- 1 Bala… #>  9 P-00029… TP53  TSG         265   447    0.7      0.738    293. 1.00e+ 0 High… #> 10 P-00029… TP53  TSG         160   722    0.6      0.442    255. 1.51e-10 Low … #> # ℹ 1,336 more rows"},{"path":"caravagnalab.github.io/INCOMMON/reference/subset_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset an INCOMMON object by sample ID. — subset_sample","title":"Subset an INCOMMON object by sample ID. — subset_sample","text":"Subset INCOMMON object sample ID.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/subset_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset an INCOMMON object by sample ID. — subset_sample","text":"","code":"subset_sample(x, sample_list)"},{"path":"caravagnalab.github.io/INCOMMON/reference/subset_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset an INCOMMON object by sample ID. — subset_sample","text":"x object class 'INCOMMON' generated function init. sample_list list identifiers samples subsetted","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/subset_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset an INCOMMON object by sample ID. — subset_sample","text":"object class INCOMMON containing subset original input.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/subset_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset an INCOMMON object by sample ID. — subset_sample","text":"","code":"# First load example data data(MSK_PAAD_output) x = subset_sample(x = MSK_PAAD_output, sample_list = c(\"P-0000142\")) print(x) #> ── [ INCOMMON ]  175054 PASS mutations across 24018 samples, with 290 mutant gen #> ℹ Average sample purity: 0.4 #> ℹ Average sequencing depth: 649 #> # A tibble: 4 × 186 #>   sample    tumor_type purity chr      from     to ref   alt      NV    DP gene  #>   <chr>     <chr>       <dbl> <chr>   <dbl>  <dbl> <chr> <chr> <int> <int> <chr> #> 1 P-0000142 PAAD          0.4 chr12  2.54e7 2.54e7 C     C       273  1404 KRAS  #> 2 P-0000142 PAAD          0.4 chr17  7.58e6 7.58e6 G     G        53   671 TP53  #> 3 P-0000142 PAAD          0.4 chr2   4.77e7 4.77e7 T     T        31   481 MSH2  #> 4 P-0000142 PAAD          0.4 chr5   1.28e6 1.28e6 G     G        34   227 TERT  #> # ℹ 175 more variables: HGVSp_Short <chr>, Entrez_Gene_Id <dbl>, Center <chr>, #> #   NCBI_Build <chr>, Chromosome <chr>, Strand <chr>, Consequence <chr>, #> #   Variant_Classification <chr>, Variant_Type <chr>, Tumor_Seq_Allele2 <chr>, #> #   dbSNP_RS <chr>, dbSNP_Val_Status <lgl>, Matched_Norm_Sample_Barcode <lgl>, #> #   Match_Norm_Seq_Allele1 <lgl>, Match_Norm_Seq_Allele2 <lgl>, #> #   Tumor_Validation_Allele1 <lgl>, Tumor_Validation_Allele2 <lgl>, #> #   Match_Norm_Validation_Allele1 <lgl>, Match_Norm_Validation_Allele2 <lgl>, …"}]
