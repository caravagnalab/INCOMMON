[{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"caravagnalab.github.io/INCOMMON/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"caravagnalab.github.io/INCOMMON/articles/INCOMMON.html","id":"mutation-copy-number-and-multiplicity-inference","dir":"Articles","previous_headings":"","what":"Mutation copy number and multiplicity inference","title":"INCOMMON","text":"INCOMMON assesses, every mutation, copy number configurations identified triples \\((n_A,n_B,m)\\) \\(n_A\\) major allele copy number, \\(n_B\\) minor mutation present \\(m\\) copies. supported configurations : Loss heterozygosity monosomy LOH: \\((n_A=1,n_B=0, m=1)\\) Copy-neutral loss heterozygosity CNLOH: \\((n_A=2,  n_B=0 , m=2)\\) Amplification : \\((n_A=3,  n_B=2 , m=2)\\) \\((n_A=4,  n_B=2 , m=2)\\) Heterozygous mutant diploid HMD: \\((n_A=2,  n_B=1 , m=1)\\) INCOMMON implements classifier based maximum posteriori estimation infer copy number multiplicity mutations read-count data. classifier based Beta-Binomial mixture model, number reads variant (\\(n\\)) number events sequencing depth \\(N\\) total number trials. mutation genomic site ploidy \\(p = n_A+n_B\\), multiplicity \\(m\\leq \\max(n_A,n_B)\\), sample purity \\(\\pi\\) expected VAF \\[ \\theta_{m,p}\\left(\\pi\\right) = \\frac{m\\pi}{p\\pi + 2\\left(1-\\pi\\right)} \\] Tumour sample purity \\(\\pi\\) can estimated copy number assessment, pathology assessment, general bioinformatics approach outside INCOMMON. INCOMMON assumes input purity correct. read counting process represents event probability. Therefore, likelihood observing: \\(n\\) reads variant locus \\(N\\) coverage locus sample purity \\(\\pi\\) given ploidy \\(p\\) multiplicity \\(m\\) \\[ P(n | N, \\theta_{m,p}\\left(\\pi\\right),\\rho) = \\text{Beta-Binonmial}\\left(n \\;\\large\\mid\\;\\normalsize N,\\theta_{m,p}\\left(\\pi\\right), \\rho\\right) \\] \\(\\rho\\) models overdispersion sequencer. Setting \\(\\rho = 0\\) corresponds using pure Binomial model model sequencer overdispersion.","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/INCOMMON.html","id":"input-format","dir":"Articles","previous_headings":"","what":"Input format","title":"INCOMMON","text":"input required INCOMMMON classification consists two data tables: genomic_data: data table annotated mutations columns indicating, mutation, sample name sample, mutant chromosome chr, start position , end position , reference allele ref, alternative allele alt, sequencing depth DP, number reads variant NV, variant allele frequency VAF, mutant gene name gene Hugo Symbol, possibly protein sequence variant HGVS recommended format (preferably 1-letter amino-acid code HGVSp_Short). clinical_data: data table clinical data matched sample names sample purity purity (required), clinical features like tumor type (ONCOTREE code) tumor_type (required tumor specific priors), survival data OS_STATUS time OS_MONTHS (required survival analysis), metastasis data SAMPLE_TYPE (Primary Metastasis), number metastases MET_COUNT (required metastatic propensity analysis) metastatic site METASTATIC_SITE (required metastatic tropism analysis), plus useful covariate. gene_roles: data table reporting gene names gene associated roles gene_role (“oncogene” “TSG”). INCOMMON provides set gene roles extracted COSMIC Cancer Gene Census (v98) default. input downstream analysis checked cast expected format function init. INCOMMON provides data publicly available MSK-MetTropism cohort correct format. following example shows input pre-processed INCOMMON:","code":"data(MSK_genomic_data) data(MSK_clinical_data) data(cancer_gene_census)  x = init(   genomic_data = MSK_genomic_data,   clinical_data = MSK_clinical_data,   gene_roles = cancer_gene_census ) #> ── INCOMMON - Inference of copy number and mutation multiplicity in oncology ─── #>  #> ── Genomic data ── #>  #> ✔ Found 25659 samples, with 224939 mutations in 491 genes #> ! No read counts found for 1393 mutations in 1393 samples #> ! Gene name not provided for 1393 mutations #> ! 201 genes could not be assigned a role (TSG or oncogene) #>  #> ── Clinical data ── #>  #> ℹ Provided clinical features: #> ✔ sample (required for classification) #> ✔ purity (required for classification) #> ✔ tumor_type #> ✔ OS_MONTHS #> ✔ OS_STATUS #> ✔ SAMPLE_TYPE #> ✔ MET_COUNT #> ✔ METASTATIC_SITE #> ✔ MET_SITE_COUNT #> ✔ PRIMARY_SITE #> ✔ SUBTYPE_ABBREVIATION #> ✔ GENE_PANEL #> ✔ TMB_NONSYNONYMOUS #> ✔ FGA #> ✔ AGE_AT_DEATH #> ✔ Found 25659 matching samples #> ✔ No mismatched samples  print(x) #> ── [ INCOMMON ]  175054 PASS mutations across 24018 samples, with 290 mutant gen #> ℹ Average sample purity: 0.4 #> ℹ Average sequencing depth: 649 #> # A tibble: 175,054 × 25 #>    sample    tumor_type purity chr     from     to ref   alt      DP    NV   VAF #>    <chr>     <chr>       <dbl> <chr>  <dbl>  <dbl> <chr> <chr> <int> <int> <dbl> #>  1 P-0028912 CHOL          0.3 chr17 7.58e6 7.58e6 G     A       837   133 0.159 #>  2 P-0028912 CHOL          0.3 chrX  5.32e7 5.32e7 G     A       832    85 0.102 #>  3 P-0003698 BLCA          0.2 chr17 7.58e6 7.58e6 C     A       437   109 0.249 #>  4 P-0003698 BLCA          0.2 chr5  1.49e8 1.49e8 C     T       360    36 0.1   #>  5 P-0003698 BLCA          0.2 chr13 3.29e7 3.29e7 G     C      1027   162 0.158 #>  6 P-0003698 BLCA          0.2 chr13 3.29e7 3.29e7 G     C      1021   182 0.178 #>  7 P-0003698 BLCA          0.2 chr19 1.11e7 1.11e7 G     T       573    98 0.171 #>  8 P-0003698 BLCA          0.2 chr22 4.15e7 4.15e7 G     A       416    45 0.108 #>  9 P-0003698 BLCA          0.2 chrX  4.49e7 4.49e7 C     T       730   194 0.266 #> 10 P-0003823 BLCA          0.6 chr5  1.30e6 1.30e6 G     A       218   138 0.633 #> # ℹ 175,044 more rows #> # ℹ 14 more variables: gene <chr>, gene_role <chr>, OS_MONTHS <dbl>, #> #   OS_STATUS <dbl>, SAMPLE_TYPE <chr>, MET_COUNT <dbl>, METASTATIC_SITE <chr>, #> #   MET_SITE_COUNT <dbl>, PRIMARY_SITE <chr>, SUBTYPE_ABBREVIATION <chr>, #> #   GENE_PANEL <chr>, TMB_NONSYNONYMOUS <dbl>, FGA <dbl>, AGE_AT_DEATH <dbl>"},{"path":"caravagnalab.github.io/INCOMMON/articles/INCOMMON.html","id":"genome-interprter","dir":"Articles","previous_headings":"","what":"Genome interprter","title":"INCOMMON","text":"Downstream INCOMMON classification, mutant genome can interpreted terms full inactivation tumor suppressor genes (TSG) mutations LOH, enhanced activation oncogenes mutations amplification. TSGs, full inactivation states include copy number configurations loss wild-type (WT) allele (multiplicity equal ploidy \\(m=p\\)): Mutations LOH Mutations CNLOH oncogenes, enhanced activation states include copy number configurations amplification mutant allele (multiplicity \\(m = 2\\)): Mutations (trisomy tetrasomy) Mutations CNLOH Even intepretation CNLOH oncogene activating event might sound unusual, based intuition , oncogene, presence multiple mutant copies relevant, whereas absence WT .","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/INCOMMON.html","id":"survival-analysis","dir":"Articles","previous_headings":"","what":"Survival analysis","title":"INCOMMON","text":"patients’ survival status time provided features clinical data table clinical_table, survival analysis can performed. Downstream classification, INCOMMON can stratify patients based mutational copy number state TSG oncogene interest. INCOMMON provides following functions, dedicated fitting survival data: kaplan_meier_fit uses Kaplan-Meier estimator fit survival data patients stratified respect status specific tumor_type gene (Mutant TSG /without LOH suppressors, Mutant oncogene /without amplification oncogenes, WT group reference) cox_fit uses Cox proportional hazard ratio model fit survival data. addition arguments tumor_type gene, accepts covariates, given provided clinical_table.","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/INCOMMON.html","id":"metastatic-patterns","dir":"Articles","previous_headings":"","what":"Metastatic patterns","title":"INCOMMON","text":"information metastatisation provided, type sample (primary tumor metastasis), whether patients metastatic , sites metastatisation primary tumors, clinical data table clinical_table, analysis metastatic propensity tropism based INCOMMON classification genome interpretation can performed. INCOMMON provides following functions analysis metastases: met_propensity: uses logistic regression test compute odds ratio () metastatisation patients identified two mutational statuses gene (Mutant TSG versus without LOH Mutant oncogene versus without amplification) specific types primary tumors tumor_type. met_tropism: uses logistic regression test compute odds ratio () metastatise specific site METASTATIC_SITE patients identified two mutational statuses gene (Mutant TSG versus without LOH Mutant oncogene versus without amplification) specific types primary tumors tumor_type.","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/a1_pcawg_priors.html","id":"empirical-priors-from-pcawg","dir":"Articles","previous_headings":"","what":"1.1 Empirical priors from PCAWG","title":"1. Prior distribution of INCOMMON classes from PCAWG","text":"classifying mutations specific gene samples specific tumour type, categorical prior distribution \\(p\\left(z_{m,p}=1\\right)=p_{m,p}\\), \\(p\\) ploidy \\(m\\) mutation multiplicity, can used obtain confident classifications, given prior probability class \\(p_{m,p}\\) obtained reliable copy number calls. default, INCOMMON relies prior probability obtained PCAWG whole genomes. set high-confidence copy number calls validated quality control, obtained \\(p_{m,p}\\) gene frequency corresponding INCOMMON class. empirical priors PCAWG provided internal data table pcawg_priors following format label represents lower-level INCOMMON class format <p> N (Mutated: <m> N) p corresponding value \\(p_{m,p}\\).","code":"data(\"pcawg_priors\")"},{"path":"caravagnalab.github.io/INCOMMON/articles/a1_pcawg_priors.html","id":"tumour-specific-priors","dir":"Articles","previous_headings":"1.1 Empirical priors from PCAWG","what":"1.1.1 Tumour-specific priors","title":"1. Prior distribution of INCOMMON classes from PCAWG","text":"gene mutated least 5% samples tumour type, least 20 samples, built tumour-specific prior. case, instance, KRAS pancreatic adenocarcinoma:","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/a1_pcawg_priors.html","id":"pan-cancer-priors","dir":"Articles","previous_headings":"1.1 Empirical priors from PCAWG","what":"1.1.2 Pan-cancer priors","title":"1. Prior distribution of INCOMMON classes from PCAWG","text":"cases requirements tumour-specific prior satisified, pooled tumour types pan-cancer prior. pcawg_priors table, priors identified tumor_type equal ‘PANCA’, meaning pan-cancer.","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/a1_pcawg_priors.html","id":"user-defined-priors","dir":"Articles","previous_headings":"","what":"1.2 User-defined priors","title":"1. Prior distribution of INCOMMON classes from PCAWG","text":"user may want leverage priors obtained different way (e.g. datasets specific gene tumour type included pcawg_priors), can easily creating similar data table. example: requirement probabilities sum one \\(\\sum\\limits_{p=1}^4 \\sum\\limits_{m\\leq p}p_{m,p}=1\\).","code":"my_priors = tibble(gene = 'my_gene',                    tumor_type = 'my_tumor_type',                     label = c(\"1N (Mutated: 1N)\",                              \"2N (Mutated: 1N)\",                              \"2N (Mutated: 2N)\",                              \"3N (Mutated: 1N)\",                              \"3N (Mutated: 2N)\",                              \"4N (Mutated: 1N)\",                              \"4N (Mutated: 2N)\"),                     p = c(0.2,0.3,0.1,0.1,0.1,0.1,0.1))"},{"path":"caravagnalab.github.io/INCOMMON/articles/a1_pcawg_priors.html","id":"visualising-priors","dir":"Articles","previous_headings":"","what":"1.3 Visualising priors","title":"1. Prior distribution of INCOMMON classes from PCAWG","text":"used prior distribution can visualised using internal plotting function plot_prior. example:  ","code":"plot_prior(x = pcawg_priors,             gene = 'KRAS',            tumor_type = 'PAAD') #> ✔ Loading CNAqc, 'Copy Number Alteration quality check'. Support : <https://caravagn.github.io/CNAqc/> plot_prior(x = my_priors,             gene = 'my_gene',            tumor_type = 'my_tumor_type')"},{"path":"caravagnalab.github.io/INCOMMON/articles/a2_classify_mutations.html","id":"input-preparation","dir":"Articles","previous_headings":"","what":"2.1 Input preparation","title":"2. Inference of copy number and mutation multiplicity","text":"minimal input INCOMMON analyses consists two pieces.","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/a2_classify_mutations.html","id":"genomic-data","dir":"Articles","previous_headings":"2.1 Input preparation","what":"2.1.1 Genomic data","title":"2. Inference of copy number and mutation multiplicity","text":"First need table genomic_data (mutations) required columns chr, , , ref, alt, DP, NV, VAF, gene. following example taken internal dataset obtained MSK-MetTropism cohort:","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/a2_classify_mutations.html","id":"clinical-data","dir":"Articles","previous_headings":"2.1 Input preparation","what":"2.1.2 Clinical data","title":"2. Inference of copy number and mutation multiplicity","text":"Second, need table clinical data least columns sample (sample names matching ones genomic_data) purity (purity sample). INCOMMMON classification task, might helpful also column tumor_type specifying tumour type sample, required using tumour-specific priors. following example taken internal dataset obtained MSK-MetTropism cohort:","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/a2_classify_mutations.html","id":"classification-of-sample-p-0002081","dir":"Articles","previous_headings":"","what":"2.2 Classification of sample ‘P-0002081’","title":"2. Inference of copy number and mutation multiplicity","text":"now focus specific sample: inspecting clinical data table, can see sample metastatic lung adenocarcinoma (LUAD), purity 0.6, sequenced MSK-IMPACT targeted panel version 341. genomic data table contains 4 mutations affecting KRAS, TP53, STK11 SMARCA4 genes.","code":"sample = 'P-0002081'  genomic_data = MSK_genomic_data %>% filter(sample == !!sample) clinical_data = MSK_clinical_data %>% filter(sample == !!sample)  print(genomic_data) #> # A tibble: 4 × 10 #>   sample    chr       from       to ref   alt      DP    NV   VAF gene    #>   <chr>     <chr>    <dbl>    <dbl> <chr> <chr> <int> <int> <dbl> <chr>   #> 1 P-0002081 chr12 25398285 25398285 C     A       743   378 0.509 KRAS    #> 2 P-0002081 chr17  7577139  7577139 G     A       246   116 0.472 TP53    #> 3 P-0002081 chr19  1221293  1221293 C     A       260   122 0.469 STK11   #> 4 P-0002081 chr19 11141472 11141473 -     C       271   133 0.491 SMARCA4 print(clinical_data) #> # A tibble: 1 × 15 #>   sample    tumor_type purity OS_MONTHS OS_STATUS SAMPLE_TYPE MET_COUNT #>   <chr>     <chr>       <dbl>     <dbl>     <dbl> <chr>           <dbl> #> 1 P-0002081 LUAD          0.6      0.36         1 Metastasis          6 #> # ℹ 8 more variables: METASTATIC_SITE <chr>, MET_SITE_COUNT <dbl>, #> #   PRIMARY_SITE <chr>, SUBTYPE_ABBREVIATION <chr>, GENE_PANEL <chr>, #> #   TMB_NONSYNONYMOUS <dbl>, FGA <dbl>, AGE_AT_DEATH <dbl>"},{"path":"caravagnalab.github.io/INCOMMON/articles/a2_classify_mutations.html","id":"initialisation-of-the-input","dir":"Articles","previous_headings":"2.2 Classification of sample ‘P-0002081’","what":"2.2.1 Initialisation of the input","title":"2. Inference of copy number and mutation multiplicity","text":"first thing initialise input INCOMMON format, function init. function takes input tables genomic_data clinical_data, plus optionally, list gene roles. INCOMMON provides default list cancer_gene_census obtained COSMIC Cancer Gene Census v.98. required format following: Let’s look output function init: requirements INCOMMON classification satisfied. average sequencing depth 380. Mutations flagged PASS ones satisfy requirements INCOMMON classification: available, non-negative sample purity, integer sequencing depth number reads variant, character gene names etc. sample, 4 mutations required information.","code":"x = init(genomic_data = genomic_data,           clinical_data = clinical_data,           gene_roles = cancer_gene_census) #> ── INCOMMON - Inference of copy number and mutation multiplicity in oncology ─── #>  #> ── Genomic data ── #>  #> ✔ Found 1 samples, with 4 mutations in 4 genes #>  #> ── Clinical data ── #>  #> ℹ Provided clinical features: #> ✔ sample (required for classification) #> ✔ purity (required for classification) #> ✔ tumor_type #> ✔ OS_MONTHS #> ✔ OS_STATUS #> ✔ SAMPLE_TYPE #> ✔ MET_COUNT #> ✔ METASTATIC_SITE #> ✔ MET_SITE_COUNT #> ✔ PRIMARY_SITE #> ✔ SUBTYPE_ABBREVIATION #> ✔ GENE_PANEL #> ✔ TMB_NONSYNONYMOUS #> ✔ FGA #> ✔ AGE_AT_DEATH #> ✔ Found 1 matching samples #> ✔ No mismatched samples  print(x) #> ── [ INCOMMON ]  4 PASS mutations across 1 samples, with 4 mutant genes across 1 #> ℹ Average sample purity: 0.6 #> ℹ Average sequencing depth: 380 #> # A tibble: 4 × 25 #>   sample    tumor_type purity chr      from     to ref   alt      DP    NV   VAF #>   <chr>     <chr>       <dbl> <chr>   <dbl>  <dbl> <chr> <chr> <int> <int> <dbl> #> 1 P-0002081 LUAD          0.6 chr12  2.54e7 2.54e7 C     A       743   378 0.509 #> 2 P-0002081 LUAD          0.6 chr17  7.58e6 7.58e6 G     A       246   116 0.472 #> 3 P-0002081 LUAD          0.6 chr19  1.22e6 1.22e6 C     A       260   122 0.469 #> 4 P-0002081 LUAD          0.6 chr19  1.11e7 1.11e7 -     C       271   133 0.491 #> # ℹ 14 more variables: gene <chr>, gene_role <chr>, OS_MONTHS <dbl>, #> #   OS_STATUS <dbl>, SAMPLE_TYPE <chr>, MET_COUNT <dbl>, METASTATIC_SITE <chr>, #> #   MET_SITE_COUNT <dbl>, PRIMARY_SITE <chr>, SUBTYPE_ABBREVIATION <chr>, #> #   GENE_PANEL <chr>, TMB_NONSYNONYMOUS <dbl>, FGA <dbl>, AGE_AT_DEATH <dbl>"},{"path":"caravagnalab.github.io/INCOMMON/articles/a2_classify_mutations.html","id":"running-the-incommon-classifier","dir":"Articles","previous_headings":"2.2 Classification of sample ‘P-0002081’","what":"2.2.2 Running the INCOMMON classifier","title":"2. Inference of copy number and mutation multiplicity","text":"now run classification step function classify, using default priors (see dedicated section), entropy cutoff, -dispersion parameter. 3 mutant genes loss heterozygosty (LOH) 1 amplification mutant allele (). average entropy 0.04 indicates high confidence classification, largest uncertainty 0.07. mutant oncogene sample KRAS, mutated amplification, whereas TSGs (TP53, SMARCA4, STK11) LOH.","code":"x = classify(x = x,               priors = pcawg_priors,               entropy_cutoff = 0.2,              rho = 0.01) #>  #> ── INCOMMON inference of copy number and mutation multiplicity for sample  ───── #> ℹ Performing classification #> → No LUAD-specific prior probability specified for KRAS #> → Using a pan-cancer prior #> ✔ Loading CNAqc, 'Copy Number Alteration quality check'. Support : <https://caravagn.github.io/CNAqc/> #> → No LUAD-specific prior probability specified for TP53 #> → Using a pan-cancer prior #> → No LUAD-specific prior probability specified for STK11 #> → Using a pan-cancer prior #> → No LUAD-specific prior probability specified for SMARCA4 #> → Using a pan-cancer prior #> ℹ There are: #> • N = 0 mutations (HMD) #> • N = 3 mutations (LOH) #> • N = 0 mutations (CNLOH) #> • N = 1 mutations (AM) #> • N = 0 mutations (Tier-2) #> ℹ The mean classification entropy is 0.04 (min: 0.01, max: 0.06) print(x) #> ── [ INCOMMON ]  4 PASS mutations across 1 samples, with 4 mutant genes across 1 #> ℹ Average sample purity: 0.6 #> ℹ Average sequencing depth: 380 #> ── [ INCOMMON ]  Classified mutations with overdispersion parameter 0.01 and ent #> ℹ There are: #> • N = 0 mutations (HMD) #> • N = 3 mutations (LOH) #> • N = 0 mutations (CNLOH) #> • N = 1 mutations (AM) #> • N = 0 mutations (Tier-2) #> # A tibble: 4 × 18 #>   sample    tumor_type purity chr      from     to ref   alt      DP    NV   VAF #>   <chr>     <chr>       <dbl> <chr>   <dbl>  <dbl> <chr> <chr> <int> <int> <dbl> #> 1 P-0002081 LUAD          0.6 chr12  2.54e7 2.54e7 C     A       743   378 0.509 #> 2 P-0002081 LUAD          0.6 chr17  7.58e6 7.58e6 G     A       246   116 0.472 #> 3 P-0002081 LUAD          0.6 chr19  1.22e6 1.22e6 C     A       260   122 0.469 #> 4 P-0002081 LUAD          0.6 chr19  1.11e7 1.11e7 -     C       271   133 0.491 #> # ℹ 7 more variables: gene <chr>, gene_role <chr>, id <chr>, label <chr>, #> #   state <chr>, posterior <dbl>, entropy <dbl>"},{"path":"caravagnalab.github.io/INCOMMON/articles/a2_classify_mutations.html","id":"visualising-incommon-classification","dir":"Articles","previous_headings":"","what":"2.3 Visualising INCOMMON classification","title":"2. Inference of copy number and mutation multiplicity","text":"INCOMMON allows visualising representation maximum posteriori classification function plot_classification.  plots show posterior mixtures Beta-Binomial distributions (one INCOMMON class) spanning total sequencing depth mutation site. color marker shape identify different combination ploidy multiplicity. vertical dashed line corresponds number reads variant \\(NV\\), whereas horizontal line corresponds value classification entropy.","code":"plot_classification(x, sample = sample, assembly = T) #> → No LUAD-specific prior probability specified for KRAS #> → Using a pan-cancer prior #> → No LUAD-specific prior probability specified for KRAS #> → Using a pan-cancer prior #> → No LUAD-specific prior probability specified for TP53 #> → Using a pan-cancer prior #> → No LUAD-specific prior probability specified for TP53 #> → Using a pan-cancer prior #> → No LUAD-specific prior probability specified for STK11 #> → Using a pan-cancer prior #> → No LUAD-specific prior probability specified for STK11 #> → Using a pan-cancer prior #> → No LUAD-specific prior probability specified for SMARCA4 #> → Using a pan-cancer prior #> → No LUAD-specific prior probability specified for SMARCA4 #> → Using a pan-cancer prior #> → No LUAD-specific prior probability specified for KRAS #> → Using a pan-cancer prior #> → No LUAD-specific prior probability specified for TP53 #> → Using a pan-cancer prior #> → No LUAD-specific prior probability specified for STK11 #> → Using a pan-cancer prior #> → No LUAD-specific prior probability specified for SMARCA4 #> → Using a pan-cancer prior #> → No LUAD-specific prior probability specified for KRAS #> → Using a pan-cancer prior #> → No LUAD-specific prior probability specified for TP53 #> → Using a pan-cancer prior #> → No LUAD-specific prior probability specified for STK11 #> → Using a pan-cancer prior #> → No LUAD-specific prior probability specified for SMARCA4 #> → Using a pan-cancer prior"},{"path":[]},{"path":"caravagnalab.github.io/INCOMMON/articles/a3_genome_interpreter.html","id":"incommon-classification","dir":"Articles","previous_headings":"3.1 Genome interpretation of 1880 prostate adenocarcinoma samples","what":"3.1.1 INCOMMON classification","title":"3. Genome Interpreter","text":"First, classify samples prostate adenocarcinoma (PRAD). first step, select samples type MSK-MetTropsim dataset: can classify 7194 mutations across 1880 samples. quality data quite good, average purity 0.41 average sequencing depth 613. 3029 heterozygous diploid mutations (HMD), 352 mutations loss heterozygosity (LOH), 1345 mutations copy-neutral LOH (CNLOH), 694 mutations amplification. addition, 1774 mutations classified Tier-2, either entropy larger cutoff low number mutant alleles relative WT.","code":"data(MSK_genomic_data) data(MSK_clinical_data) data(cancer_gene_census)  x = init(   genomic_data = MSK_genomic_data,   clinical_data = MSK_clinical_data %>% filter(tumor_type == 'PRAD'),   gene_roles = cancer_gene_census ) #> ── INCOMMON - Inference of copy number and mutation multiplicity in oncology ─── #>  #> ── Genomic data ── #>  #> ✔ Found 25659 samples, with 224939 mutations in 491 genes #> ! No read counts found for 1393 mutations in 1393 samples #> ! Gene name not provided for 1393 mutations #> ! 201 genes could not be assigned a role (TSG or oncogene) #>  #> ── Clinical data ── #>  #> ℹ Provided clinical features: #> ✔ sample (required for classification) #> ✔ purity (required for classification) #> ✔ tumor_type #> ✔ OS_MONTHS #> ✔ OS_STATUS #> ✔ SAMPLE_TYPE #> ✔ MET_COUNT #> ✔ METASTATIC_SITE #> ✔ MET_SITE_COUNT #> ✔ PRIMARY_SITE #> ✔ SUBTYPE_ABBREVIATION #> ✔ GENE_PANEL #> ✔ TMB_NONSYNONYMOUS #> ✔ FGA #> ✔ AGE_AT_DEATH #> ✔ Found 1938 matching samples #> ✖ Found 23721 unmatched samples  print(x) #> ── [ INCOMMON ]  7194 PASS mutations across 1880 samples, with 287 mutant genes #> ℹ Average sample purity: 0.41 #> ℹ Average sequencing depth: 613 #> # A tibble: 7,194 × 25 #>    sample   tumor_type purity chr     from     to ref   alt      DP    NV    VAF #>    <chr>    <chr>       <dbl> <chr>  <dbl>  <dbl> <chr> <chr> <int> <int>  <dbl> #>  1 P-00314… PRAD          0.1 chr3  1.89e8 1.89e8 A     G       527    57 0.108  #>  2 P-00369… PRAD          0.5 chr17 4.77e7 4.77e7 A     C       580   144 0.248  #>  3 P-00369… PRAD          0.5 chr22 4.15e7 4.15e7 G     T       363    94 0.259  #>  4 P-00446… PRAD          0.9 chr17 7.58e6 7.58e6 C     A       397   336 0.846  #>  5 P-00446… PRAD          0.9 chr2  4.77e7 4.77e7 AAG   -       317   123 0.388  #>  6 P-00446… PRAD          0.9 chr4  1.88e8 1.88e8 G     A       351    19 0.0541 #>  7 P-00420… PRAD          0.4 chr8  1.29e8 1.29e8 G     C       819   162 0.198  #>  8 P-00420… PRAD          0.4 chr2  1.98e8 1.98e8 C     A       454    27 0.0595 #>  9 P-00436… PRAD          0.6 chr10 8.97e7 8.97e7 T     G       265    65 0.245  #> 10 P-00438… PRAD          0.4 chr3  4.13e7 4.13e7 G     T       476    53 0.111  #> # ℹ 7,184 more rows #> # ℹ 14 more variables: gene <chr>, gene_role <chr>, OS_MONTHS <dbl>, #> #   OS_STATUS <dbl>, SAMPLE_TYPE <chr>, MET_COUNT <dbl>, METASTATIC_SITE <chr>, #> #   MET_SITE_COUNT <dbl>, PRIMARY_SITE <chr>, SUBTYPE_ABBREVIATION <chr>, #> #   GENE_PANEL <chr>, TMB_NONSYNONYMOUS <dbl>, FGA <dbl>, AGE_AT_DEATH <dbl> x = classify(   x = x,   priors = INCOMMON::pcawg_priors,   entropy_cutoff = 0.2,   rho = 0.01   # parallel = TRUE, # uncomment these to run in parallel   # num_cores = 8 ) print(x) #> ── [ INCOMMON ]  7194 PASS mutations across 1880 samples, with 287 mutant genes #> ℹ Average sample purity: 0.41 #> ℹ Average sequencing depth: 613 #> ── [ INCOMMON ]  Classified mutations with overdispersion parameter 0.01 and ent #> ℹ There are: #> • N = 3111 mutations (HMD) #> • N = 359 mutations (LOH) #> • N = 1345 mutations (CNLOH) #> • N = 695 mutations (AM) #> • N = 1684 mutations (Tier-2) #> # A tibble: 7,194 × 18 #>    sample   tumor_type purity chr     from     to ref   alt      DP    NV    VAF #>    <chr>    <chr>       <dbl> <chr>  <dbl>  <dbl> <chr> <chr> <int> <int>  <dbl> #>  1 P-00314… PRAD          0.1 chr3  1.89e8 1.89e8 A     G       527    57 0.108  #>  2 P-00369… PRAD          0.5 chr17 4.77e7 4.77e7 A     C       580   144 0.248  #>  3 P-00369… PRAD          0.5 chr22 4.15e7 4.15e7 G     T       363    94 0.259  #>  4 P-00446… PRAD          0.9 chr17 7.58e6 7.58e6 C     A       397   336 0.846  #>  5 P-00446… PRAD          0.9 chr2  4.77e7 4.77e7 AAG   -       317   123 0.388  #>  6 P-00446… PRAD          0.9 chr4  1.88e8 1.88e8 G     A       351    19 0.0541 #>  7 P-00420… PRAD          0.4 chr8  1.29e8 1.29e8 G     C       819   162 0.198  #>  8 P-00420… PRAD          0.4 chr2  1.98e8 1.98e8 C     A       454    27 0.0595 #>  9 P-00436… PRAD          0.6 chr10 8.97e7 8.97e7 T     G       265    65 0.245  #> 10 P-00438… PRAD          0.4 chr3  4.13e7 4.13e7 G     T       476    53 0.111  #> # ℹ 7,184 more rows #> # ℹ 7 more variables: gene <chr>, gene_role <chr>, id <chr>, label <chr>, #> #   state <chr>, posterior <dbl>, entropy <dbl>"},{"path":"caravagnalab.github.io/INCOMMON/articles/a3_genome_interpreter.html","id":"genome-interpreter","dir":"Articles","previous_headings":"3.1 Genome interpretation of 1880 prostate adenocarcinoma samples","what":"3.1.2 Genome Interpreter","title":"3. Genome Interpreter","text":"function genome_interpreter adds two variables classification object: class, indicating mutant gene whether LOH amplification, depending gene role. addition, sample annotated genotype summarises interpreted mutation found sample. Across PRAD samples classified, 1525 different genotypes, abundant ones full inactivation TP53 (‘Mutant TP53 LOH’), partial inactivation TP53 (‘Mutant TP53 without LOH’) mutations TSG SPOP without LOH. Notice alterations can found genotypes, combined mutations genes.","code":"x = genome_interpreter(x = x) #> ℹ There are 1524 different genotypes #> ℹ The most abundant genotypes are: #> • Mutant TP53 with LOH (58 Samples, Frequency 0.03) #> • Mutant TP53 without LOH (36 Samples, Frequency 0.02) #> • Mutant SPOP without LOH (26 Samples, Frequency 0.01)"},{"path":"caravagnalab.github.io/INCOMMON/articles/a3_genome_interpreter.html","id":"visulasing-the-distribution-of-incommon-classes","dir":"Articles","previous_headings":"3.1 Genome interpretation of 1880 prostate adenocarcinoma samples","what":"3.1.3 Visulasing the distribution of INCOMMON classes","title":"3. Genome Interpreter","text":"can visualise distribution INCOMMON classes specific gene tumour type using function plot_class_fraction. , classified prostate adenocarcinoma samples, set tumor_type PRAD can look distribution INCOMMON states interpreted classes different genes. instance, TP53 characterizes abundant genotypes:  high incidence (60%) mutations LOH 609 mutant TP53 samples, majority (51%) copy-neutral (CNLOH). TP53 mutations without LOH represent 29% total, small fraction (9.8%) Tier-2 mutations. can also look SPOP: Across 285 samples, majority (57%) SPOP mutations without LOH, whereas smaller fraction (20%) combined LOH, 17% CNLOH. fraction Tier-2 mutations (21%) gene much higher TP53. oncogenes, addition mutations amplification trisomy/tetrasomy (), mutations CNLOH interpreted amplifications disomy, since mutant allele present double copy. Let’s take look KRAS:  majority mutations amplifications (26% across 19 samples) consist double mutant alleles trisomy tetrasomy context (21%) plus 5% cases disomy. significant fraction (21%) mutations Tier-2, whereas 53% mutations heterozygous diploid context.","code":"plot_class_fraction(x = x, tumor_type = 'PRAD', gene = 'TP53') #> ℹ The frequency of states CNLOH, HMD, LOH, and Tier-2 are 0.51, 0.3, 0.1, and 0.09 plot_class_fraction(x = x, tumor_type = 'PRAD', gene = 'SPOP') #> ℹ The frequency of states AM, CNLOH, HMD, LOH, and Tier-2 are 0.01, 0.17, 0.59, 0.04, and 0.19 plot_class_fraction(x = x, tumor_type = 'PRAD', gene = 'KRAS') #> ℹ The frequency of states AM, CNLOH, HMD, and Tier-2 are 0.21, 0.05, 0.53, and 0.21"},{"path":"caravagnalab.github.io/INCOMMON/articles/a4_survival_analysis.html","id":"classification-of-1740-prostate-adenocarcinoma-samples","dir":"Articles","previous_headings":"","what":"4.1 Classification of 1740 prostate adenocarcinoma samples","title":"4. Survival analysis of MSK-MetTropism","text":"order stratify patients based INCOMMON interpreted genomes, first need classify mutations samples.","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/a4_survival_analysis.html","id":"input-intialisation","dir":"Articles","previous_headings":"4.1 Classification of 1740 prostate adenocarcinoma samples","what":"4.1.1 Input intialisation","title":"4. Survival analysis of MSK-MetTropism","text":"First prepare input using function init: 6779 mutations average sequencing depth 623 across 1740 samples average purity 0.26.","code":"data(MSK_genomic_data) data(MSK_clinical_data) data(cancer_gene_census)  x = init(   genomic_data = MSK_genomic_data,   clinical_data = MSK_clinical_data %>% filter(tumor_type == 'PAAD'),   gene_roles = cancer_gene_census ) #> ── INCOMMON - Inference of copy number and mutation multiplicity in oncology ─── #>  #> ── Genomic data ── #>  #> ✔ Found 25659 samples, with 224939 mutations in 491 genes #> ! No read counts found for 1393 mutations in 1393 samples #> ! Gene name not provided for 1393 mutations #> ! 201 genes could not be assigned a role (TSG or oncogene) #>  #> ── Clinical data ── #>  #> ℹ Provided clinical features: #> ✔ sample (required for classification) #> ✔ purity (required for classification) #> ✔ tumor_type #> ✔ OS_MONTHS #> ✔ OS_STATUS #> ✔ SAMPLE_TYPE #> ✔ MET_COUNT #> ✔ METASTATIC_SITE #> ✔ MET_SITE_COUNT #> ✔ PRIMARY_SITE #> ✔ SUBTYPE_ABBREVIATION #> ✔ GENE_PANEL #> ✔ TMB_NONSYNONYMOUS #> ✔ FGA #> ✔ AGE_AT_DEATH #> ✔ Found 1742 matching samples #> ✖ Found 23917 unmatched samples  print(x) #> ── [ INCOMMON ]  6779 PASS mutations across 1740 samples, with 276 mutant genes #> ℹ Average sample purity: 0.26 #> ℹ Average sequencing depth: 623 #> # A tibble: 6,779 × 25 #>    sample   tumor_type purity chr     from     to ref   alt      DP    NV    VAF #>    <chr>    <chr>       <dbl> <chr>  <dbl>  <dbl> <chr> <chr> <int> <int>  <dbl> #>  1 P-00094… PAAD          0.1 chr12 2.54e7 2.54e7 C     T       847    82 0.0968 #>  2 P-00094… PAAD          0.1 chr17 7.58e6 7.58e6 C     T       709    91 0.128  #>  3 P-00215… PAAD          0.4 chr12 2.54e7 2.54e7 C     T      1048   322 0.307  #>  4 P-00215… PAAD          0.4 chr17 7.57e6 7.57e6 G     A       942   384 0.408  #>  5 P-00215… PAAD          0.4 chr1  2.71e7 2.71e7 -     G       833   289 0.347  #>  6 P-00215… PAAD          0.4 chr1  1.13e7 1.13e7 T     C      1115   300 0.269  #>  7 P-00215… PAAD          0.4 chr3  1.87e8 1.87e8 G     A      1362   847 0.622  #>  8 P-00034… PAAD          0.2 chr12 2.54e7 2.54e7 C     T       533    56 0.105  #>  9 P-00034… PAAD          0.2 chr17 7.58e6 7.58e6 C     A       351    56 0.160  #> 10 P-00245… PAAD          0.2 chr12 2.54e7 2.54e7 C     G       938   155 0.165  #> # ℹ 6,769 more rows #> # ℹ 14 more variables: gene <chr>, gene_role <chr>, OS_MONTHS <dbl>, #> #   OS_STATUS <dbl>, SAMPLE_TYPE <chr>, MET_COUNT <dbl>, METASTATIC_SITE <chr>, #> #   MET_SITE_COUNT <dbl>, PRIMARY_SITE <chr>, SUBTYPE_ABBREVIATION <chr>, #> #   GENE_PANEL <chr>, TMB_NONSYNONYMOUS <dbl>, FGA <dbl>, AGE_AT_DEATH <dbl>"},{"path":"caravagnalab.github.io/INCOMMON/articles/a4_survival_analysis.html","id":"classification","dir":"Articles","previous_headings":"4.1 Classification of 1740 prostate adenocarcinoma samples","what":"4.1.2 Classification","title":"4. Survival analysis of MSK-MetTropism","text":"classify mutations using PCAWG priors default entropy cutoff overdispersion parameter: 2611 heterozygous diploid mutations (HMD), 558 mutations loss heterozygosity (LOH), 1988 mutations copy-neutral LOH (CNLOH), 283 mutations amplification. addition, 1339 mutations classified Tier-2, either entropy larger cutoff low number mutant alleles relative wild-type.","code":"x = classify(   x = x,   priors = INCOMMON::pcawg_priors,   entropy_cutoff = 0.2,   rho = 0.01   # parallel = TRUE, # uncomment these to run in parallel   # num_cores = 8 ) print(x) #> ── [ INCOMMON ]  6779 PASS mutations across 1740 samples, with 276 mutant genes #> ℹ Average sample purity: 0.26 #> ℹ Average sequencing depth: 623 #> ── [ INCOMMON ]  Classified mutations with overdispersion parameter 0.01 and ent #> ℹ There are: #> • N = 2759 mutations (HMD) #> • N = 564 mutations (LOH) #> • N = 1990 mutations (CNLOH) #> • N = 284 mutations (AM) #> • N = 1182 mutations (Tier-2) #> # A tibble: 6,779 × 18 #>    sample   tumor_type purity chr     from     to ref   alt      DP    NV    VAF #>    <chr>    <chr>       <dbl> <chr>  <dbl>  <dbl> <chr> <chr> <int> <int>  <dbl> #>  1 P-00094… PAAD          0.1 chr12 2.54e7 2.54e7 C     T       847    82 0.0968 #>  2 P-00094… PAAD          0.1 chr17 7.58e6 7.58e6 C     T       709    91 0.128  #>  3 P-00215… PAAD          0.4 chr12 2.54e7 2.54e7 C     T      1048   322 0.307  #>  4 P-00215… PAAD          0.4 chr17 7.57e6 7.57e6 G     A       942   384 0.408  #>  5 P-00215… PAAD          0.4 chr1  2.71e7 2.71e7 -     G       833   289 0.347  #>  6 P-00215… PAAD          0.4 chr1  1.13e7 1.13e7 T     C      1115   300 0.269  #>  7 P-00215… PAAD          0.4 chr3  1.87e8 1.87e8 G     A      1362   847 0.622  #>  8 P-00034… PAAD          0.2 chr12 2.54e7 2.54e7 C     T       533    56 0.105  #>  9 P-00034… PAAD          0.2 chr17 7.58e6 7.58e6 C     A       351    56 0.160  #> 10 P-00245… PAAD          0.2 chr12 2.54e7 2.54e7 C     G       938   155 0.165  #> # ℹ 6,769 more rows #> # ℹ 7 more variables: gene <chr>, gene_role <chr>, id <chr>, label <chr>, #> #   state <chr>, posterior <dbl>, entropy <dbl>"},{"path":"caravagnalab.github.io/INCOMMON/articles/a4_survival_analysis.html","id":"survival-analysis-of-mutant-kras-patients","dir":"Articles","previous_headings":"","what":"4.2 Survival analysis of Mutant KRAS patients","title":"4. Survival analysis of MSK-MetTropism","text":"order obtain grouping patients based mutational status KRAS, need first annotate genotype sample interpret mutant KRAS genomes.","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/a4_survival_analysis.html","id":"genome-interpretation","dir":"Articles","previous_headings":"4.2 Survival analysis of Mutant KRAS patients","what":"4.2.1 Genome Interpretation","title":"4. Survival analysis of MSK-MetTropism","text":"use function genome_interpreter add INCOMMON classes (Mutant /without LOH, Mutant /without AMP, Tier-2) class annotate sample genotype summarising interpreted mutations found sample. Across PAAD samples classified, 1288 different genotypes, abundant ones different combinations TP53 /without LOH KRAS mutations /without amplifications. investigate impact survival Mutant KRAS /without amplification genomes respect KRAS WT patients. first look distribution INCOMMON copy number states across PAAD samples KRAS, using function plot_class_fraction:  Across 1644 samples, large fraction KRAS mutations (35%) associated amplification mutant allele, always CNLOH (amplification diploid state). slightly higher number (38%) mutant KRAS samples without amplification, whereas 26% samples Tier-2 KRAS mutation.","code":"x = genome_interpreter(x = x) #> ℹ There are 1286 different genotypes #> ℹ The most abundant genotypes are: #> • Mutant KRAS without AMP,Mutant TP53 without LOH (68 Samples, Frequency 0.04) #> • Mutant KRAS with AMP,Mutant TP53 with LOH (53 Samples, Frequency 0.03) #> • Mutant KRAS without AMP (52 Samples, Frequency 0.03) plot_class_fraction(x = x, tumor_type = 'PAAD', gene = 'KRAS') #> ℹ The frequency of states CNLOH, HMD, LOH, and Tier-2 are 0.35, 0.41, 0.1, and 0.14"},{"path":"caravagnalab.github.io/INCOMMON/articles/a4_survival_analysis.html","id":"kaplan-meier-survival-esitmates","dir":"Articles","previous_headings":"4.2 Survival analysis of Mutant KRAS patients","what":"4.2.2 Kaplan-Meier survival esitmates","title":"4. Survival analysis of MSK-MetTropism","text":"Next use function kaplan_meier_fit fit survival data (overall survival status versus overall survival months case) using Kaplan-Meier estimator. median overall survival time decreases 21.5 months KRAS WT group 18.2 months Mutant KRAS without amplification 11.7 months Mutant KRAS amplification patients.","code":"x = kaplan_meier_fit(x = x, tumor_type = 'PAAD', gene = 'KRAS') #> Call: survfit(formula = survival::Surv(OS_MONTHS, OS_STATUS) ~ group,  #>     data = data) #>  #>                           n events median 0.95LCL 0.95UCL #> KRAS WT                 109     63   21.5   18.86    30.8 #> Mutant KRAS without AMP 673    418   18.6   16.23    21.0 #> Mutant KRAS with AMP    573    394   11.7    9.69    13.2"},{"path":"caravagnalab.github.io/INCOMMON/articles/a4_survival_analysis.html","id":"hazard-ratio-estimates-with-cox-regression","dir":"Articles","previous_headings":"4.2 Survival analysis of Mutant KRAS patients","what":"4.2.3 Hazard Ratio estimates with Cox regression","title":"4. Survival analysis of MSK-MetTropism","text":"order estimate hazard ratio associated groups, fit survival data, time using multivariate Cox proportional hazards regression model. , include age patients death, sex tumor mutational burden model covariates. analysis reveals , whereas KRAS mutation alone (without amplification) enough, presence amplification significantly increases hazard ratio (HR = 1.41, p-value = 0.012) respect WT group. Moreover, tumor mutational burden (TMB_NONSYNONYMOUS) also gives significant albeit weak contribution, patients 4 non-synonymous mutations (median TMB_NONSYNONYMOUS) emerge risk (HR = 1.16, p-value = 0.038).","code":"x = cox_fit(x = x,         tumor_type = 'PAAD',         gene = 'KRAS',         survival_time = 'OS_MONTHS',         survival_status = 'OS_STATUS',         covariates = c('age', 'sex', 'tmb')) #> Call: #> survival::coxph(formula = formula %>% stats::as.formula(), data = data %>%  #>     as.data.frame()) #>  #>                                  coef exp(coef) se(coef)      z     p #> groupMutant KRAS with AMP     0.35041   1.41965  0.13777  2.544 0.011 #> groupMutant KRAS without AMP  0.02362   1.02390  0.13694  0.172 0.863 #> AGE_AT_DEATH>67              -0.11306   0.89309  0.06927 -1.632 0.103 #> TMB_NONSYNONYMOUS>3           0.10474   1.11042  0.06884  1.522 0.128 #>  #> Likelihood ratio test=27.71  on 4 df, p=1.43e-05 #> n= 864, number of events= 864  #>    (491 observations deleted due to missingness)"},{"path":"caravagnalab.github.io/INCOMMON/articles/a4_survival_analysis.html","id":"visualising-survival-analysis","dir":"Articles","previous_headings":"4.2 Survival analysis of Mutant KRAS patients","what":"4.2.4 Visualising survival analysis","title":"4. Survival analysis of MSK-MetTropism","text":"Kaplan-Meier estimation multivariate Cox regression can visualized straightforwardly using plot_survival_analysis function:  plot displays Kaplan-Meier survival curves risk table, forest plot Cox multivariate regression coefficients, highlighting red covariates statistically significant contribution differences hazard risks.","code":"plot_survival_analysis(x = x,                        tumor_type = 'PAAD',                        gene = 'KRAS')"},{"path":"caravagnalab.github.io/INCOMMON/articles/a5_metastasis_analysis.html","id":"classification-of-2462-breast-cancer-samples","dir":"Articles","previous_headings":"","what":"5.1 Classification of 2462 breast cancer samples","title":"5. Analysis of metastatic patterns of MSK-MetTropism","text":"order study patterns metastatisation (propensity organotropism) related INCOMMON interpreted genomes, first need classify mutations samples.","code":""},{"path":"caravagnalab.github.io/INCOMMON/articles/a5_metastasis_analysis.html","id":"input-intialisation","dir":"Articles","previous_headings":"5.1 Classification of 2462 breast cancer samples","what":"5.1.1 Input intialisation","title":"5. Analysis of metastatic patterns of MSK-MetTropism","text":"First prepare input using function init: 9916 mutations average sequencing depth 681 across 2462 samples average purity 0.42.","code":"data(MSK_genomic_data) data(MSK_clinical_data) data(cancer_gene_census)  x = init(   genomic_data = MSK_genomic_data,   clinical_data = MSK_clinical_data %>% filter(tumor_type == 'BRCA'),   gene_roles = cancer_gene_census ) #> ── INCOMMON - Inference of copy number and mutation multiplicity in oncology ─── #>  #> ── Genomic data ── #>  #> ✔ Found 25659 samples, with 224939 mutations in 491 genes #> ! No read counts found for 1393 mutations in 1393 samples #> ! Gene name not provided for 1393 mutations #> ! 201 genes could not be assigned a role (TSG or oncogene) #>  #> ── Clinical data ── #>  #> ℹ Provided clinical features: #> ✔ sample (required for classification) #> ✔ purity (required for classification) #> ✔ tumor_type #> ✔ OS_MONTHS #> ✔ OS_STATUS #> ✔ SAMPLE_TYPE #> ✔ MET_COUNT #> ✔ METASTATIC_SITE #> ✔ MET_SITE_COUNT #> ✔ PRIMARY_SITE #> ✔ SUBTYPE_ABBREVIATION #> ✔ GENE_PANEL #> ✔ TMB_NONSYNONYMOUS #> ✔ FGA #> ✔ AGE_AT_DEATH #> ✔ Found 2484 matching samples #> ✖ Found 23175 unmatched samples  print(x) #> ── [ INCOMMON ]  9916 PASS mutations across 2462 samples, with 286 mutant genes #> ℹ Average sample purity: 0.42 #> ℹ Average sequencing depth: 681 #> # A tibble: 9,916 × 25 #>    sample    tumor_type purity chr     from     to ref   alt      DP    NV   VAF #>    <chr>     <chr>       <dbl> <chr>  <dbl>  <dbl> <chr> <chr> <int> <int> <dbl> #>  1 P-0015535 BRCA          0.3 chr3  1.79e8 1.79e8 G     A       868   167 0.192 #>  2 P-0015535 BRCA          0.3 chr17 3.79e7 3.79e7 T     C      1172   205 0.175 #>  3 P-0015535 BRCA          0.3 chr7  1.41e8 1.41e8 G     A       765   120 0.157 #>  4 P-0015535 BRCA          0.3 chr21 3.62e7 3.62e7 G     A      1006   162 0.161 #>  5 P-0015535 BRCA          0.3 chr16 6.88e7 6.88e7 C     -       774   210 0.271 #>  6 P-0015535 BRCA          0.3 chr17 1.60e7 1.60e7 C     T       764   155 0.203 #>  7 P-0015535 BRCA          0.3 chr19 1.46e7 1.46e7 G     C       544    70 0.129 #>  8 P-0007009 BRCA          0.5 chr19 4.28e7 4.28e7 G     A       852   648 0.761 #>  9 P-0007009 BRCA          0.5 chr14 1.05e8 1.05e8 -     GGCA…  1530   453 0.296 #> 10 P-0013299 BRCA          0.4 chr19 4.59e7 4.59e7 C     T      1542   180 0.117 #> # ℹ 9,906 more rows #> # ℹ 14 more variables: gene <chr>, gene_role <chr>, OS_MONTHS <dbl>, #> #   OS_STATUS <dbl>, SAMPLE_TYPE <chr>, MET_COUNT <dbl>, METASTATIC_SITE <chr>, #> #   MET_SITE_COUNT <dbl>, PRIMARY_SITE <chr>, SUBTYPE_ABBREVIATION <chr>, #> #   GENE_PANEL <chr>, TMB_NONSYNONYMOUS <dbl>, FGA <dbl>, AGE_AT_DEATH <dbl>"},{"path":"caravagnalab.github.io/INCOMMON/articles/a5_metastasis_analysis.html","id":"classification","dir":"Articles","previous_headings":"5.1 Classification of 2462 breast cancer samples","what":"5.1.2 Classification","title":"5. Analysis of metastatic patterns of MSK-MetTropism","text":"classify mutations using PCAWG priors default entropy cutoff overdispersion parameter: 4147 heterozygous diploid mutations (HMD), 578 mutations loss heterozygosity (LOH), 2018 mutations copy-neutral LOH (CNLOH), 663 mutations amplification. addition, 2510 mutations classified Tier-2, either entropy larger cutoff low number mutant alleles relative wild-type.","code":"x = classify(   x = x,   priors = INCOMMON::pcawg_priors,   entropy_cutoff = 0.2,   rho = 0.01   # parallel = TRUE, # uncomment these to run in parallel   # num_cores = 8 ) print(x) #> ── [ INCOMMON ]  9916 PASS mutations across 2462 samples, with 286 mutant genes #> ℹ Average sample purity: 0.42 #> ℹ Average sequencing depth: 681 #> ── [ INCOMMON ]  Classified mutations with overdispersion parameter 0.01 and ent #> ℹ There are: #> • N = 4238 mutations (HMD) #> • N = 581 mutations (LOH) #> • N = 2019 mutations (CNLOH) #> • N = 666 mutations (AM) #> • N = 2412 mutations (Tier-2) #> # A tibble: 9,916 × 18 #>    sample    tumor_type purity chr     from     to ref   alt      DP    NV   VAF #>    <chr>     <chr>       <dbl> <chr>  <dbl>  <dbl> <chr> <chr> <int> <int> <dbl> #>  1 P-0015535 BRCA          0.3 chr3  1.79e8 1.79e8 G     A       868   167 0.192 #>  2 P-0015535 BRCA          0.3 chr17 3.79e7 3.79e7 T     C      1172   205 0.175 #>  3 P-0015535 BRCA          0.3 chr7  1.41e8 1.41e8 G     A       765   120 0.157 #>  4 P-0015535 BRCA          0.3 chr21 3.62e7 3.62e7 G     A      1006   162 0.161 #>  5 P-0015535 BRCA          0.3 chr16 6.88e7 6.88e7 C     -       774   210 0.271 #>  6 P-0015535 BRCA          0.3 chr17 1.60e7 1.60e7 C     T       764   155 0.203 #>  7 P-0015535 BRCA          0.3 chr19 1.46e7 1.46e7 G     C       544    70 0.129 #>  8 P-0007009 BRCA          0.5 chr19 4.28e7 4.28e7 G     A       852   648 0.761 #>  9 P-0007009 BRCA          0.5 chr14 1.05e8 1.05e8 -     GGCA…  1530   453 0.296 #> 10 P-0013299 BRCA          0.4 chr19 4.59e7 4.59e7 C     T      1542   180 0.117 #> # ℹ 9,906 more rows #> # ℹ 7 more variables: gene <chr>, gene_role <chr>, id <chr>, label <chr>, #> #   state <chr>, posterior <dbl>, entropy <dbl>"},{"path":[]},{"path":"caravagnalab.github.io/INCOMMON/articles/a5_metastasis_analysis.html","id":"metastatic-propensity-of-fully-incactivated-tp53","dir":"Articles","previous_headings":"5.2 Metastatic propensity of BRCA samples","what":"5.2.1 Metastatic propensity of fully incactivated TP53","title":"5. Analysis of metastatic patterns of MSK-MetTropism","text":"can analyse metastatic propensity primary breast tumor genomes containing TP53 mutations using function met_propensity. function implements logistic regression fit Binomial probability developing metastasis based interpreted mutant genome, mutant gene without CNA (, Mutant TP53 without LOH) reference. analysis emerges Mutant TP53 LOH patients 150% increased risk metastatise (= 1.64, p.value = 0.01) respect mutant samples without LOH.","code":"x = met_propensity(x, tumor_type = 'BRCA', gene = 'TP53') #> ℹ There are 2115 different genotypes #> ℹ The most abundant genotypes are: #> • Mutant TP53 with LOH (54 Samples, Frequency 0.02) #> • Mutant TP53 without LOH (36 Samples, Frequency 0.01) #> • Mutant PIK3CA without AMP (33 Samples, Frequency 0.01) #> Waiting for profiling to be done... #> Waiting for profiling to be done... #> # A tibble: 1 × 6 #>   gene  class                   OR   low    up p.value #>   <chr> <chr>                <dbl> <dbl> <dbl>   <dbl> #> 1 TP53  Mutant TP53 with LOH  1.63  1.11  2.38  0.0118"},{"path":"caravagnalab.github.io/INCOMMON/articles/a5_metastasis_analysis.html","id":"metastatic-propensity-for-the-top-mutant-genes-in-brca","dir":"Articles","previous_headings":"5.2 Metastatic propensity of BRCA samples","what":"5.2.2 Metastatic propensity for the top mutant genes in BRCA","title":"5. Analysis of metastatic patterns of MSK-MetTropism","text":"extend analysis multiple genes, focusing 50 frequently mutated ones.","code":"top_genes = classification(x) %>%    dplyr::filter(state != 'Tier-2') %>%    dplyr::group_by(gene) %>%    dplyr::reframe(N = length(unique(sample))) %>%    dplyr::arrange(dplyr::desc(N)) %>%    dplyr::slice_head(n = 50) %>%    pull(gene)  print(top_genes)  for(g in top_genes){   x = met_propensity(x, tumor_type = 'BRCA', gene = g) }"},{"path":"caravagnalab.github.io/INCOMMON/articles/a5_metastasis_analysis.html","id":"visualising-metastatic-propensity-odds-ratio","dir":"Articles","previous_headings":"5.2 Metastatic propensity of BRCA samples","what":"5.2.2 Visualising metastatic propensity odds ratio","title":"5. Analysis of metastatic patterns of MSK-MetTropism","text":"INCOMMON provides function plot_met_volcano visualise metastatic propensity odds ratios volcano plot.  addition TP53, among 50 frequently mutant genes BRCA complete inactivation (Mutation LOH) ARID1A significantly increases risk metastasis (= 9.33, p.value = 0.04), whereas among oncogenes, PIK3CA full activation (Mutation AMP) leads higher risks metastases (= 2.00, p.value = 0.0007).","code":"plot_met_volcano(x = x, tumor_type = 'BRCA') #> Warning: Removed 14 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":[]},{"path":"caravagnalab.github.io/INCOMMON/articles/a5_metastasis_analysis.html","id":"tropism-of-fully-inactivated-tp53-brca-samples-to-the-liver","dir":"Articles","previous_headings":"5.3 Metastatic tropism of BRCA samples","what":"5.3.1 Tropism of fully inactivated TP53 BRCA samples to the Liver","title":"5. Analysis of metastatic patterns of MSK-MetTropism","text":"can analyse metastatic organotropism metastatic breast tumor genomes containing TP53 mutations using function met_tropsim. Similarly metastatic propensity analysis, function implements logistic regression fit Binomial probability developing metastasis towards specific metastatic site (Liver, example), based interpreted mutant genome, mutant gene without CNA (, Mutant TP53 without LOH) reference. odds ratio () metastatising Liver Mutant TP53 LOH breast cancer almost two-fold (= 1.9, p.value = 0.03) respect mutant samples without LOH.","code":"x = met_tropism(x, tumor_type = 'BRCA', gene = 'TP53', metastatic_site = 'Liver') #> Waiting for profiling to be done... #> Waiting for profiling to be done... #> # A tibble: 1 × 7 #>   gene  metastatic_site class                   OR   low    up p.value #>   <chr> <chr>           <chr>                <dbl> <dbl> <dbl>   <dbl> #> 1 TP53  Liver           Mutant TP53 with LOH  1.95  1.10  3.63  0.0273"},{"path":"caravagnalab.github.io/INCOMMON/articles/a5_metastasis_analysis.html","id":"tropism-of-top-mutant-genes-in-brca-to-the-liver","dir":"Articles","previous_headings":"5.3 Metastatic tropism of BRCA samples","what":"5.3.2 Tropism of top mutant genes in BRCA to the Liver","title":"5. Analysis of metastatic patterns of MSK-MetTropism","text":"extend analysis multiple genes, focusing 10 frequently mutated ones top 10 frequent metastatic sites.","code":"top_sites = x$clinical_data %>%    dplyr::group_by(METASTATIC_SITE) %>%    dplyr::reframe(N = length(unique(sample))) %>%    dplyr::arrange(dplyr::desc(N)) %>%    dplyr::slice_head(n = 10) %>%    pull(METASTATIC_SITE)  for(g in top_genes[1:10]){   for(m in top_sites){    x = met_tropism(x, gene = g, tumor_type = 'BRCA', metastatic_site = m)    } }"},{"path":"caravagnalab.github.io/INCOMMON/articles/a5_metastasis_analysis.html","id":"visualising-metastatic-tropism","dir":"Articles","previous_headings":"5.3 Metastatic tropism of BRCA samples","what":"5.3.3 Visualising metastatic tropism","title":"5. Analysis of metastatic patterns of MSK-MetTropism","text":"INCOMMON provides function plot_tropism visualise metastatic tropism odds ratios metastatic site.  Interestingly, complete inactivation TP53 seems related tropism primary breast tumours Liver CNS/Brain. Mutations CDH1 seem frequently without LOH association metastasis lymphatic system.","code":"plot_tropism(x = x, tumor_type = 'BRCA')"},{"path":"caravagnalab.github.io/INCOMMON/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicola Calonaci. Author, maintainer. Giulio Caravagna. Author, maintainer.","code":""},{"path":"caravagnalab.github.io/INCOMMON/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Calonaci N, Caravagna G (2024). INCOMMON: Inference copy number mutation multiplicity oncology. R package version 0.0.1, https://github.com/caravagnalab/INCOMMON.","code":"@Manual{,   title = {INCOMMON: Inference of copy number and mutation multiplicity in oncology},   author = {Nicola Calonaci and Giulio Caravagna},   year = {2024},   note = {R package version 0.0.1},   url = {https://github.com/caravagnalab/INCOMMON}, }"},{"path":"caravagnalab.github.io/INCOMMON/index.html","id":"incommon-","dir":"","previous_headings":"","what":"Inference of copy number and mutation multiplicity in oncology","title":"Inference of copy number and mutation multiplicity in oncology","text":"INCOMMON tool INference COpy number Mutation Multiplicity ONcology. INCOMMON infers copy number multiplicity somatic mutations tumor-read count data, can applied classify mutations large-size datasets efficient fast way. Mutations classified either Tier-1 (present 100% cells) without copy-number alterations (heterozygous mutant diploid HMD), loss heterozygosity (LOH), copy-neutral LOH (CNLOH), amplification (), Tier-2 (subclonal high ploidy low multiplicity). addition, INCOMMON offers genome interpretation framework, full inactivation tumor suppressor genes (TSG) mutations LOH, enhanced activation oncogenes mutations amplification can detected. events can used perform augmented analysis survival metastatic patterns.","code":""},{"path":[]},{"path":[]},{"path":"caravagnalab.github.io/INCOMMON/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Inference of copy number and mutation multiplicity in oncology","text":"can install INCOMMON GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"caravagnalab/INCOMMON\")"},{"path":"caravagnalab.github.io/INCOMMON/index.html","id":"copyright-and-contacts","dir":"","previous_headings":"Installation","what":"Copyright and contacts","title":"Inference of copy number and mutation multiplicity in oncology","text":"Cancer Data Science (CDS) Laboratory.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_clinical_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Genomic data of the MSK-MetTropism cohort — MSK_clinical_data","title":"Genomic data of the MSK-MetTropism cohort — MSK_clinical_data","text":"table contains sample names corresponding clinical data MSK-MetTropism cohort.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_clinical_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Genomic data of the MSK-MetTropism cohort — MSK_clinical_data","text":"","code":"data(MSK_clinical_data)"},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_clinical_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Genomic data of the MSK-MetTropism cohort — MSK_clinical_data","text":"tibble 25659 rows 15 columns:","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_clinical_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Genomic data of the MSK-MetTropism cohort — MSK_clinical_data","text":"MSK-MET cBioPortal https://www.cbioportal.org/study/summary?id=msk_met_2021","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_clinical_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Genomic data of the MSK-MetTropism cohort — MSK_clinical_data","text":"","code":"data(MSK_clinical_data) MSK_clinical_data #> # A tibble: 25,659 × 15 #>    sample    tumor_type purity OS_MONTHS OS_STATUS SAMPLE_TYPE MET_COUNT #>    <chr>     <chr>       <dbl>     <dbl>     <dbl> <chr>           <dbl> #>  1 P-0028912 CHOL         0.3       11.4         1 Metastasis          7 #>  2 P-0003698 BLCA         0.2       64.3         0 Primary             8 #>  3 P-0003823 BLCA         0.6       65.1         0 Primary             1 #>  4 P-0004520 CHOL         0.3       66.0         0 Metastasis          5 #>  5 P-0007181 CRC          0.4       60.3         0 Metastasis         11 #>  6 P-0007779 LUAD         0.3       58.7         0 Primary             2 #>  7 P-0008019 CRC          0.75      55.5         0 Primary             1 #>  8 P-0009446 PAAD         0.1       55.7         0 Primary             3 #>  9 P-0015535 BRCA         0.3       38.9         0 Primary             1 #> 10 P-0019539 MEL          0.8       40.2         0 Primary             2 #> # ℹ 25,649 more rows #> # ℹ 8 more variables: METASTATIC_SITE <chr>, MET_SITE_COUNT <dbl>, #> #   PRIMARY_SITE <chr>, SUBTYPE_ABBREVIATION <chr>, GENE_PANEL <chr>, #> #   TMB_NONSYNONYMOUS <dbl>, FGA <dbl>, AGE_AT_DEATH <dbl>"},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_genomic_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Genomic data of the MSK-MetTropism cohort — MSK_genomic_data","title":"Genomic data of the MSK-MetTropism cohort — MSK_genomic_data","text":"table contains sample names corresponding read counts data MSK-MetTropism cohort.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_genomic_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Genomic data of the MSK-MetTropism cohort — MSK_genomic_data","text":"","code":"data(MSK_genomic_data)"},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_genomic_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Genomic data of the MSK-MetTropism cohort — MSK_genomic_data","text":"tibble 224939 rows 10 columns:","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_genomic_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Genomic data of the MSK-MetTropism cohort — MSK_genomic_data","text":"MSK-MET cBioPortal https://www.cbioportal.org/study/summary?id=msk_met_2021","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/MSK_genomic_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Genomic data of the MSK-MetTropism cohort — MSK_genomic_data","text":"","code":"data(MSK_genomic_data) MSK_genomic_data #> # A tibble: 224,939 × 10 #>    sample    chr        from        to ref   alt      DP    NV   VAF gene    #>    <chr>     <chr>     <dbl>     <dbl> <chr> <chr> <int> <int> <dbl> <chr>   #>  1 P-0028912 chr17   7577121   7577121 G     A       837   133 0.159 TP53    #>  2 P-0028912 chr6  111983080 111983081 -     A       698   141 0.202 FYN     #>  3 P-0028912 chrX   53246994  53246994 G     A       832    85 0.102 KDM5C   #>  4 P-0003698 chr17   7576852   7576852 C     A       437   109 0.249 TP53    #>  5 P-0003698 chr3   49933259  49933259 C     A       591    86 0.146 MST1R   #>  6 P-0003698 chr5  149435631 149435631 C     T       360    36 0.1   CSF1R   #>  7 P-0003698 chr13  32913797  32913797 G     C      1027   162 0.158 BRCA2   #>  8 P-0003698 chr13  32914259  32914259 G     C      1021   182 0.178 BRCA2   #>  9 P-0003698 chr19  11136104  11136104 G     T       573    98 0.171 SMARCA4 #> 10 P-0003698 chr22  41543840  41543840 G     A       416    45 0.108 EP300   #> # ℹ 224,929 more rows"},{"path":"caravagnalab.github.io/INCOMMON/reference/cancer_gene_census.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene roles from COSMIC Cancer Gene Census — cancer_gene_census","title":"Gene roles from COSMIC Cancer Gene Census — cancer_gene_census","text":"table contains gene roles cancer, obtained COSMIC Cancer Gene Census v98. Data curated gene list assigned either TSG oncogene.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/cancer_gene_census.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene roles from COSMIC Cancer Gene Census — cancer_gene_census","text":"","code":"data(cancer_gene_census)"},{"path":"caravagnalab.github.io/INCOMMON/reference/cancer_gene_census.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gene roles from COSMIC Cancer Gene Census — cancer_gene_census","text":"data frame 733 rows 2 columns: gene Name gene (Hugo Symbol) gene_role Tumour Suppressor Gene (TSG) oncogene","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/cancer_gene_census.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gene roles from COSMIC Cancer Gene Census — cancer_gene_census","text":"COSMIC Cancer Gene Census: https://cancer.sanger.ac.uk/census","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/cancer_gene_census.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gene roles from COSMIC Cancer Gene Census — cancer_gene_census","text":"","code":"data(cancer_gene_census) cancer_gene_census #> # A tibble: 733 × 2 #>    gene   gene_role #>    <chr>  <chr>     #>  1 A1CF   oncogene  #>  2 ABI1   TSG       #>  3 ABL1   oncogene  #>  4 ABL2   oncogene  #>  5 ACKR3  oncogene  #>  6 ACSL3  oncogene  #>  7 ACSL6  oncogene  #>  8 ACVR1  oncogene  #>  9 ACVR1B TSG       #> 10 ACVR2A TSG       #> # ℹ 723 more rows"},{"path":"caravagnalab.github.io/INCOMMON/reference/classification.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for class 'INCOMMON'. — classification","title":"Getter for class 'INCOMMON'. — classification","text":"Get classification data specific selected model.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/classification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for class 'INCOMMON'. — classification","text":"","code":"classification(x)"},{"path":"caravagnalab.github.io/INCOMMON/reference/classification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for class 'INCOMMON'. — classification","text":"x object class 'INCOMMON'.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/classification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getter for class 'INCOMMON'. — classification","text":"table classified data.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/classify.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify mutations using a Beta-Binomial model-based test. — classify","title":"Classify mutations using a Beta-Binomial model-based test. — classify","text":"Classify mutations using Beta-Binomial model-based test.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/classify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify mutations using a Beta-Binomial model-based test. — classify","text":"","code":"classify(   x,   priors = pcawg_priors,   entropy_cutoff = 0.2,   rho = 0.01,   parallel = FALSE,   num_cores = NULL,   karyotypes = c(\"1:0\", \"1:1\", \"2:0\", \"2:1\", \"2:2\") )"},{"path":"caravagnalab.github.io/INCOMMON/reference/classify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify mutations using a Beta-Binomial model-based test. — classify","text":"x object class 'INCOMMON' generated function init. priors dplyr::tibble data frame columns gene, tumor_type, label p indicating tumor-specific pan-cancer (PANCA) prior probabilities. entropy_cutoff Entropy cut-Tier-1 vs Tier-2 assignment. rho -dispersion parameter. parallel Whether run classification parallel (default: FALSE) num_cores number cores use parallel classification. default, takes 80% available cores. karyotypes Karyotypes included among possible classes.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/classify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify mutations using a Beta-Binomial model-based test. — classify","text":"object class INCOMMON containing original input plus classification data parameters.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/compute_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute model likelihood — compute_likelihood","title":"Compute model likelihood — compute_likelihood","text":"Compute model likelihood","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/compute_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute model likelihood — compute_likelihood","text":"","code":"compute_likelihood(NV, DP, prob, rho)"},{"path":"caravagnalab.github.io/INCOMMON/reference/compute_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute model likelihood — compute_likelihood","text":"NV Number reads variant. DP Sequencing coverage mutated genome site. prob Success probability (expected VAF). rho -dispersion parameter.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/compute_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute model likelihood — compute_likelihood","text":"vector probability densities (NV = 1 NV = DP).","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/compute_likelihood.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute model likelihood — compute_likelihood","text":"","code":"compute_likelihood( NV = 170, DP = 200, prob = 0.5, rho = 0.01 ) #>   [1] 1.040151e-27 2.111717e-26 2.911856e-25 3.066789e-24 2.630540e-23 #>   [6] 1.913488e-22 1.213698e-21 6.850297e-21 3.493984e-20 1.630064e-19 #>  [11] 7.024155e-19 2.818165e-18 1.059802e-17 3.756882e-17 1.261479e-16 #>  [16] 4.029069e-16 1.228547e-15 3.587907e-15 1.006449e-14 2.718618e-14 #>  [21] 7.087614e-14 1.787056e-13 4.365843e-13 1.035194e-12 2.385972e-12 #>  [26] 5.353141e-12 1.170607e-11 2.497968e-11 5.207275e-11 1.061501e-10 #>  [31] 2.117987e-10 4.139966e-10 7.933992e-10 1.491887e-09 2.754452e-09 #>  [36] 4.996610e-09 8.910966e-09 1.563272e-08 2.699236e-08 4.589507e-08 #>  [41] 7.688102e-08 1.269397e-07 2.066746e-07 3.319434e-07 5.261316e-07 #>  [46] 8.232574e-07 1.272146e-06 1.941956e-06 2.929389e-06 4.367947e-06 #>  [51] 6.439631e-06 9.389509e-06 1.354354e-05 1.933005e-05 2.730510e-05 #>  [56] 3.818204e-05 5.286503e-05 7.248653e-05 9.844805e-05 1.324633e-04 #>  [61] 1.766024e-04 2.333354e-04 3.055731e-04 3.967020e-04 5.106101e-04 #>  [66] 6.517014e-04 8.248933e-04 1.035595e-03 1.289660e-03 1.593318e-03 #>  [71] 1.953067e-03 2.375544e-03 2.867357e-03 3.434889e-03 4.084073e-03 #>  [76] 4.820142e-03 5.647359e-03 6.568743e-03 7.585790e-03 8.698205e-03 #>  [81] 9.903660e-03 1.119759e-02 1.257303e-02 1.402053e-02 1.552812e-02 #>  [86] 1.708137e-02 1.866355e-02 2.025584e-02 2.183765e-02 2.338705e-02 #>  [91] 2.488122e-02 2.629699e-02 2.761144e-02 2.880245e-02 2.984936e-02 #>  [96] 3.073354e-02 3.143890e-02 3.195240e-02 3.226443e-02 3.236910e-02 #> [101] 3.226443e-02 3.195240e-02 3.143890e-02 3.073354e-02 2.984936e-02 #> [106] 2.880245e-02 2.761144e-02 2.629699e-02 2.488122e-02 2.338705e-02 #> [111] 2.183765e-02 2.025584e-02 1.866355e-02 1.708137e-02 1.552812e-02 #> [116] 1.402053e-02 1.257303e-02 1.119759e-02 9.903660e-03 8.698205e-03 #> [121] 7.585790e-03 6.568743e-03 5.647359e-03 4.820142e-03 4.084073e-03 #> [126] 3.434889e-03 2.867357e-03 2.375544e-03 1.953067e-03 1.593318e-03 #> [131] 1.289660e-03 1.035595e-03 8.248933e-04 6.517014e-04 5.106101e-04 #> [136] 3.967020e-04 3.055731e-04 2.333354e-04 1.766024e-04 1.324633e-04 #> [141] 9.844805e-05 7.248653e-05 5.286503e-05 3.818204e-05 2.730510e-05 #> [146] 1.933005e-05 1.354354e-05 9.389509e-06 6.439631e-06 4.367947e-06 #> [151] 2.929389e-06 1.941956e-06 1.272146e-06 8.232574e-07 5.261316e-07 #> [156] 3.319434e-07 2.066746e-07 1.269397e-07 7.688102e-08 4.589507e-08 #> [161] 2.699236e-08 1.563272e-08 8.910966e-09 4.996610e-09 2.754452e-09 #> [166] 1.491887e-09 7.933992e-10 4.139966e-10 2.117987e-10 1.061501e-10 #> [171] 5.207275e-11 2.497968e-11 1.170607e-11 5.353141e-12 2.385972e-12 #> [176] 1.035194e-12 4.365843e-13 1.787056e-13 7.087614e-14 2.718618e-14 #> [181] 1.006449e-14 3.587907e-15 1.228547e-15 4.029069e-16 1.261479e-16 #> [186] 3.756882e-17 1.059802e-17 2.818165e-18 7.024155e-19 1.630064e-19 #> [191] 3.493984e-20 6.850297e-21 1.213698e-21 1.913488e-22 2.630540e-23 #> [196] 3.066789e-24 2.911856e-25 2.111717e-26 1.040151e-27 2.610884e-29"},{"path":"caravagnalab.github.io/INCOMMON/reference/compute_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute model posterior and entropy — compute_posterior","title":"Compute model posterior and entropy — compute_posterior","text":"Compute model posterior entropy","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/compute_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute model posterior and entropy — compute_posterior","text":"","code":"compute_posterior(   NV,   DP,   gene,   priors = NULL,   tumor_type,   purity,   entropy_cutoff,   rho = 0.01,   karyotypes )"},{"path":"caravagnalab.github.io/INCOMMON/reference/compute_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute model posterior and entropy — compute_posterior","text":"NV Number reads variant. DP Sequencing coverage mutated genome site. gene Gene name symbol. priors Prior distribution. tumor_type Tumor type sample. purity Purity sample. entropy_cutoff Cut-entropy Tier-1/Tier-2 distinction. rho -dispersion parameter. karyotypes Karyotypes included among possible classes.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/compute_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute model posterior and entropy — compute_posterior","text":"table including ploidy, multiplicity, posterior probability, classification entropy.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/compute_posterior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute model posterior and entropy — compute_posterior","text":"","code":"compute_posterior( NV = 170, DP = 200, gene = 'TP53', priors = NULL, tumor_type = 'BRCA', purity = 0.9, entropy_cutoff = 0.2, rho = 0.01, karyotypes = c(\"1:0\", \"1:1\", \"2:0\", \"2:1\", \"2:2\") ) #> ✔ Loading CNAqc, 'Copy Number Alteration quality check'. Support : <https://caravagn.github.io/CNAqc/> #> # A tibble: 1,600 × 11 #>       NV    value Major minor ploidy multiplicity karyotype label  peak  entropy #>    <int>    <dbl> <int> <int>  <int>        <int> <chr>     <chr> <dbl>    <dbl> #>  1     1 1.26e-54     1     0      1            1 1:0       1N (… 0.818 3.92e-10 #>  2     1 2.36e-24     1     1      2            1 1:1       2N (… 0.45  3.92e-10 #>  3     1 2.36e-24     2     0      2            1 2:0       2N (… 0.45  3.92e-10 #>  4     1 2.40e-64     2     0      2            2 2:0       2N (… 0.9   3.92e-10 #>  5     1 8.71e-16     2     1      3            1 2:1       3N (… 0.310 3.92e-10 #>  6     1 1.36e-36     2     1      3            2 2:1       3N (… 0.621 3.92e-10 #>  7     1 1.08e-11     2     2      4            1 2:2       4N (… 0.237 3.92e-10 #>  8     1 6.38e-26     2     2      4            2 2:2       4N (… 0.474 3.92e-10 #>  9     2 4.76e-53     1     0      1            1 1:0       1N (… 0.818 3.18e- 9 #> 10     2 4.24e-23     1     1      2            1 1:1       2N (… 0.45  3.18e- 9 #> # ℹ 1,590 more rows #> # ℹ 1 more variable: state <chr>"},{"path":"caravagnalab.github.io/INCOMMON/reference/cox_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit multivariate Cox regression model based on INCOMMON classes. — cox_fit","title":"Fit multivariate Cox regression model based on INCOMMON classes. — cox_fit","text":"Fit multivariate Cox regression model based INCOMMON classes.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/cox_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit multivariate Cox regression model based on INCOMMON classes. — cox_fit","text":"","code":"cox_fit(   x,   gene,   tumor_type,   survival_time,   survival_status,   covariates = c(\"age\", \"sex\", \"tmb\") )"},{"path":"caravagnalab.github.io/INCOMMON/reference/cox_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit multivariate Cox regression model based on INCOMMON classes. — cox_fit","text":"x object class 'INCOMMON' containing classification results produced function classify. gene gene patient's stratification based. tumor_type tumor type patients stratify. survival_time variable clincal_data used survival time. survival_status variable clincal_data used survival status. covariates covariates used mutlivariate regression.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/cox_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit multivariate Cox regression model based on INCOMMON classes. — cox_fit","text":"object class 'INCOMMON' containing additional object survival.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/genome_interpreter.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize frequency distribution of INCOMMON classes. — genome_interpreter","title":"Visualize frequency distribution of INCOMMON classes. — genome_interpreter","text":"Visualize frequency distribution INCOMMON classes.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/genome_interpreter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize frequency distribution of INCOMMON classes. — genome_interpreter","text":"","code":"genome_interpreter(x)"},{"path":"caravagnalab.github.io/INCOMMON/reference/genome_interpreter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize frequency distribution of INCOMMON classes. — genome_interpreter","text":"x object class 'INCOMMON' containing classification results, produced  function classify.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/genome_interpreter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize frequency distribution of INCOMMON classes. — genome_interpreter","text":"object list class INCOMMON additional columns classification.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/init.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare input for analyses with 'INCOMMON'. — init","title":"Prepare input for analyses with 'INCOMMON'. — init","text":"Process input data object class 'INCOMMON', ready downstream analyses (e.g. classify).","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare input for analyses with 'INCOMMON'. — init","text":"","code":"init(genomic_data, clinical_data, gene_roles = INCOMMON::cancer_gene_census)"},{"path":"caravagnalab.github.io/INCOMMON/reference/init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare input for analyses with 'INCOMMON'. — init","text":"genomic_data data table annotated mutations columns sample name sample, mutant chromosome chr, mutation start position , mutation end position , reference allele ref, alternative allele alt, integer sequencing depth DP, integer number reads variant NV, variant allele frequency VAF gene name gene Hugo Symbol,  protein sequence variant HGVS recommended format, preferably 1-letter amino-acid code HGVSp_Short. clinical_data data table clinical data compulsory matching sample names sample sample purity purity, optional clinical features like tumor type ONCOTREE code tumor_type (required tumor specific priors), overall survival status OS_STATUS time OS_MONTHS (required survival analysis), SAMPLE_TYPE (Primary Metastasis)  number metastases MET_COUNT (required metastatic propensity analysis), metastatic site METASTATIC_SITE (required metastatic tropism analysis), plus useful covariate. gene_roles data table reporting gene names associated gene_role (\"oncogene\" \"TSG\"). default taken COSMIC Cancer Gene Census v98.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare input for analyses with 'INCOMMON'. — init","text":"object class INCOMMON.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare input for analyses with 'INCOMMON'. — init","text":"","code":"# Example input data from the MSK-MetTropism cohort, released with the package data(MSK_genomic_data) print(MSK_genomic_data) #> # A tibble: 224,939 × 10 #>    sample    chr        from        to ref   alt      DP    NV   VAF gene    #>    <chr>     <chr>     <dbl>     <dbl> <chr> <chr> <int> <int> <dbl> <chr>   #>  1 P-0028912 chr17   7577121   7577121 G     A       837   133 0.159 TP53    #>  2 P-0028912 chr6  111983080 111983081 -     A       698   141 0.202 FYN     #>  3 P-0028912 chrX   53246994  53246994 G     A       832    85 0.102 KDM5C   #>  4 P-0003698 chr17   7576852   7576852 C     A       437   109 0.249 TP53    #>  5 P-0003698 chr3   49933259  49933259 C     A       591    86 0.146 MST1R   #>  6 P-0003698 chr5  149435631 149435631 C     T       360    36 0.1   CSF1R   #>  7 P-0003698 chr13  32913797  32913797 G     C      1027   162 0.158 BRCA2   #>  8 P-0003698 chr13  32914259  32914259 G     C      1021   182 0.178 BRCA2   #>  9 P-0003698 chr19  11136104  11136104 G     T       573    98 0.171 SMARCA4 #> 10 P-0003698 chr22  41543840  41543840 G     A       416    45 0.108 EP300   #> # ℹ 224,929 more rows data(MSK_clinical_data) print(MSK_clinical_data) #> # A tibble: 25,659 × 15 #>    sample    tumor_type purity OS_MONTHS OS_STATUS SAMPLE_TYPE MET_COUNT #>    <chr>     <chr>       <dbl>     <dbl>     <dbl> <chr>           <dbl> #>  1 P-0028912 CHOL         0.3       11.4         1 Metastasis          7 #>  2 P-0003698 BLCA         0.2       64.3         0 Primary             8 #>  3 P-0003823 BLCA         0.6       65.1         0 Primary             1 #>  4 P-0004520 CHOL         0.3       66.0         0 Metastasis          5 #>  5 P-0007181 CRC          0.4       60.3         0 Metastasis         11 #>  6 P-0007779 LUAD         0.3       58.7         0 Primary             2 #>  7 P-0008019 CRC          0.75      55.5         0 Primary             1 #>  8 P-0009446 PAAD         0.1       55.7         0 Primary             3 #>  9 P-0015535 BRCA         0.3       38.9         0 Primary             1 #> 10 P-0019539 MEL          0.8       40.2         0 Primary             2 #> # ℹ 25,649 more rows #> # ℹ 8 more variables: METASTATIC_SITE <chr>, MET_SITE_COUNT <dbl>, #> #   PRIMARY_SITE <chr>, SUBTYPE_ABBREVIATION <chr>, GENE_PANEL <chr>, #> #   TMB_NONSYNONYMOUS <dbl>, FGA <dbl>, AGE_AT_DEATH <dbl> # Initialize the INCOMMON object (note the outputs to screen) x = init(genomic_data = MSK_genomic_data, clinical_data = MSK_clinical_data) #> ── INCOMMON - Inference of copy number and mutation multiplicity in oncology ─── #>  #> ── Genomic data ── #>  #> ✔ Found 25659 samples, with 224939 mutations in 491 genes #> ! No read counts found for 1393 mutations in 1393 samples #> ! Gene name not provided for 1393 mutations #> ! 201 genes could not be assigned a role (TSG or oncogene) #>  #> ── Clinical data ── #>  #> ℹ Provided clinical features: #>  #> ✔ sample (required for classification) #> ✔ purity (required for classification) #> ✔ tumor_type #> ✔ OS_MONTHS #> ✔ OS_STATUS #> ✔ SAMPLE_TYPE #> ✔ MET_COUNT #> ✔ METASTATIC_SITE #> ✔ MET_SITE_COUNT #> ✔ PRIMARY_SITE #> ✔ SUBTYPE_ABBREVIATION #> ✔ GENE_PANEL #> ✔ TMB_NONSYNONYMOUS #> ✔ FGA #> ✔ AGE_AT_DEATH #>  #> ✔ Found 25659 matching samples #> ✔ No mismatched samples # An S3 method can be used to report to screen what is in the object print(x) #> ── [ INCOMMON ]  175054 PASS mutations across 24018 samples, with 290 mutant gen #> ℹ Average sample purity: 0.4 #> ℹ Average sequencing depth: 649 #> # A tibble: 175,054 × 25 #>    sample    tumor_type purity chr     from     to ref   alt      DP    NV   VAF #>    <chr>     <chr>       <dbl> <chr>  <dbl>  <dbl> <chr> <chr> <int> <int> <dbl> #>  1 P-0028912 CHOL          0.3 chr17 7.58e6 7.58e6 G     A       837   133 0.159 #>  2 P-0028912 CHOL          0.3 chrX  5.32e7 5.32e7 G     A       832    85 0.102 #>  3 P-0003698 BLCA          0.2 chr17 7.58e6 7.58e6 C     A       437   109 0.249 #>  4 P-0003698 BLCA          0.2 chr5  1.49e8 1.49e8 C     T       360    36 0.1   #>  5 P-0003698 BLCA          0.2 chr13 3.29e7 3.29e7 G     C      1027   162 0.158 #>  6 P-0003698 BLCA          0.2 chr13 3.29e7 3.29e7 G     C      1021   182 0.178 #>  7 P-0003698 BLCA          0.2 chr19 1.11e7 1.11e7 G     T       573    98 0.171 #>  8 P-0003698 BLCA          0.2 chr22 4.15e7 4.15e7 G     A       416    45 0.108 #>  9 P-0003698 BLCA          0.2 chrX  4.49e7 4.49e7 C     T       730   194 0.266 #> 10 P-0003823 BLCA          0.6 chr5  1.30e6 1.30e6 G     A       218   138 0.633 #> # ℹ 175,044 more rows #> # ℹ 14 more variables: gene <chr>, gene_role <chr>, OS_MONTHS <dbl>, #> #   OS_STATUS <dbl>, SAMPLE_TYPE <chr>, MET_COUNT <dbl>, METASTATIC_SITE <chr>, #> #   MET_SITE_COUNT <dbl>, PRIMARY_SITE <chr>, SUBTYPE_ABBREVIATION <chr>, #> #   GENE_PANEL <chr>, TMB_NONSYNONYMOUS <dbl>, FGA <dbl>, AGE_AT_DEATH <dbl>"},{"path":"caravagnalab.github.io/INCOMMON/reference/kaplan_meier_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Kaplan-Meier survival model based on INCOMMON classes. — kaplan_meier_fit","title":"Fit Kaplan-Meier survival model based on INCOMMON classes. — kaplan_meier_fit","text":"Fit Kaplan-Meier survival model based INCOMMON classes.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/kaplan_meier_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Kaplan-Meier survival model based on INCOMMON classes. — kaplan_meier_fit","text":"","code":"kaplan_meier_fit(x, tumor_type, gene)"},{"path":"caravagnalab.github.io/INCOMMON/reference/kaplan_meier_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Kaplan-Meier survival model based on INCOMMON classes. — kaplan_meier_fit","text":"x object class 'INCOMMON' containing classification results produced function classify. tumor_type tumor type patients stratify. gene gene patient's stratification based.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/kaplan_meier_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Kaplan-Meier survival model based on INCOMMON classes. — kaplan_meier_fit","text":"object class 'INCOMMON' containing additional object survival.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/met_propensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Logistic regression of metastatic propensity based on INCOMMON classes. — met_propensity","title":"Logistic regression of metastatic propensity based on INCOMMON classes. — met_propensity","text":"Logistic regression metastatic propensity based INCOMMON classes.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/met_propensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic regression of metastatic propensity based on INCOMMON classes. — met_propensity","text":"","code":"met_propensity(x, gene, tumor_type)"},{"path":"caravagnalab.github.io/INCOMMON/reference/met_propensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logistic regression of metastatic propensity based on INCOMMON classes. — met_propensity","text":"x object class 'INCOMMON' containing classification results produced function classify. gene gene patient's stratification based. tumor_type tumor type patients stratify.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/met_propensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logistic regression of metastatic propensity based on INCOMMON classes. — met_propensity","text":"object class 'INCOMMON' containing additional object survival.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/met_tropism.html","id":null,"dir":"Reference","previous_headings":"","what":"Logistic regression of metastatic tropism based on INCOMMON classes. — met_tropism","title":"Logistic regression of metastatic tropism based on INCOMMON classes. — met_tropism","text":"Logistic regression metastatic tropism based INCOMMON classes.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/met_tropism.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic regression of metastatic tropism based on INCOMMON classes. — met_tropism","text":"","code":"met_tropism(x, gene, tumor_type, metastatic_site)"},{"path":"caravagnalab.github.io/INCOMMON/reference/met_tropism.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logistic regression of metastatic tropism based on INCOMMON classes. — met_tropism","text":"x object class 'INCOMMON' containing classification results produced function classify. gene gene patient's stratification based. tumor_type tumor type patients stratify. metastatic_site target organ metastatic diffusion.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/met_tropism.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logistic regression of metastatic tropism based on INCOMMON classes. — met_tropism","text":"object class 'INCOMMON' containing additional object survival. Logistic regression metastatic tropism based INCOMMON classes.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for class 'INCOMMON'. — parameters","title":"Getter for class 'INCOMMON'. — parameters","text":"Get model parameters performed classification tests.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for class 'INCOMMON'. — parameters","text":"","code":"parameters(x)"},{"path":"caravagnalab.github.io/INCOMMON/reference/parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for class 'INCOMMON'. — parameters","text":"x obj class 'INCOMMON'.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getter for class 'INCOMMON'. — parameters","text":"dplyr::tibble containing parameters models used classification.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/pcawg_priors.html","id":null,"dir":"Reference","previous_headings":"","what":"Priors from PCAWG — pcawg_priors","title":"Priors from PCAWG — pcawg_priors","text":"Prior distribution copy number mutation multiplicity PCAWG.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/pcawg_priors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Priors from PCAWG — pcawg_priors","text":"","code":"data(pcawg_priors)"},{"path":"caravagnalab.github.io/INCOMMON/reference/pcawg_priors.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Priors from PCAWG — pcawg_priors","text":"data frame 4466 rows 4 columns: gene Name gene (Hugo Symbol). tumor_type Tumor type. label INCOMMON class (N (Mutated: N)). p Gene tumor type specific prior probability.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/pcawg_priors.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Priors from PCAWG — pcawg_priors","text":"Validated copy number calls PCAWG: https://doi.org/10.5281/zenodo.6410935","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/pcawg_priors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Priors from PCAWG — pcawg_priors","text":"","code":"data(pcawg_priors) pcawg_priors #> # A tibble: 4,466 × 4 #>    gene  tumor_type label                 p #>    <chr> <chr>      <chr>             <dbl> #>  1 ALB   HCC        1N (Mutated: 1N) 0.151  #>  2 ALB   HCC        2N (Mutated: 1N) 0.593  #>  3 ALB   HCC        2N (Mutated: 2N) 0.0474 #>  4 ALB   HCC        3N (Mutated: 1N) 0.0727 #>  5 ALB   HCC        3N (Mutated: 2N) 0.0485 #>  6 ALB   HCC        4N (Mutated: 1N) 0.0198 #>  7 ALB   HCC        4N (Mutated: 2N) 0.0683 #>  8 APOB  HCC        1N (Mutated: 1N) 0.151  #>  9 APOB  HCC        2N (Mutated: 1N) 0.593  #> 10 APOB  HCC        2N (Mutated: 2N) 0.0474 #> # ℹ 4,456 more rows"},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_class_fraction.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize frequency distribution of INCOMMON classes. — plot_class_fraction","title":"Visualize frequency distribution of INCOMMON classes. — plot_class_fraction","text":"Visualize frequency distribution INCOMMON classes.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_class_fraction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize frequency distribution of INCOMMON classes. — plot_class_fraction","text":"","code":"plot_class_fraction(x, tumor_type, gene)"},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_class_fraction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize frequency distribution of INCOMMON classes. — plot_class_fraction","text":"x list objects class 'INCOMMON' containing classification results, produced using function classify. tumor_type Tumor type tumor-specific prior ('PANCA' pan-cancer). gene Gene gene-specific prior.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_class_fraction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize frequency distribution of INCOMMON classes. — plot_class_fraction","text":"object list class 'ggplot2'.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_classification.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize classification results for individual observations. — plot_classification","title":"Visualize classification results for individual observations. — plot_classification","text":"Visualize classification results individual observations.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_classification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize classification results for individual observations. — plot_classification","text":"","code":"plot_classification(x, sample, assembly = F)"},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_classification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize classification results for individual observations. — plot_classification","text":"x object class 'INCOMMON' containing classification results, produced function classify. sample Sample name dataset. assembly Whether assemble plots mutations sample multi-faceted plot.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_classification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize classification results for individual observations. — plot_classification","text":"object list objects class 'ggplot2'.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_met_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize metastatic propnesity odds ratio in a volcano plot fashion. — plot_met_volcano","title":"Visualize metastatic propnesity odds ratio in a volcano plot fashion. — plot_met_volcano","text":"Visualize metastatic propnesity odds ratio volcano plot fashion.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_met_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize metastatic propnesity odds ratio in a volcano plot fashion. — plot_met_volcano","text":"","code":"plot_met_volcano(x, tumor_type)"},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_met_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize metastatic propnesity odds ratio in a volcano plot fashion. — plot_met_volcano","text":"x object class 'INCOMMON' containing classification results, produced function classify. tumor_type tumour type classified data available. 'PANCA' pools multiple tumour types pan-cancer visualisation.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_met_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize metastatic propnesity odds ratio in a volcano plot fashion. — plot_met_volcano","text":"object list objects class 'ggplot2'.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize prior distribution for a gene (tumor-specific or pancancer). — plot_prior","title":"Visualize prior distribution for a gene (tumor-specific or pancancer). — plot_prior","text":"Visualize prior distribution gene (tumor-specific pancancer).","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize prior distribution for a gene (tumor-specific or pancancer). — plot_prior","text":"","code":"plot_prior(x, gene, tumor_type)"},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize prior distribution for a gene (tumor-specific or pancancer). — plot_prior","text":"x prior distribution format required INCOMMON, INCOMMON::pcawg_priors. gene Gene gene-specific prior. tumor_type Tumor type tumor-specific prior ('PANCA' pan-cancer).","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize prior distribution for a gene (tumor-specific or pancancer). — plot_prior","text":"object list objects class 'ggplot2'.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_survival_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise survival analysis based on INCOMMON classes. — plot_survival_analysis","title":"Visualise survival analysis based on INCOMMON classes. — plot_survival_analysis","text":"Visualise survival analysis based INCOMMON classes.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_survival_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise survival analysis based on INCOMMON classes. — plot_survival_analysis","text":"","code":"plot_survival_analysis(   x,   tumor_type,   gene,   cox_covariates = c(\"age\", \"sex\", \"tmb\") )"},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_survival_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise survival analysis based on INCOMMON classes. — plot_survival_analysis","text":"x list objects class 'INCOMMON' containing classification results multiple samples, produced using function classify. tumor_type selected tumour type. gene selected gene. cox_covariates character vector listing covariates used multivariarte regression.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_survival_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise survival analysis based on INCOMMON classes. — plot_survival_analysis","text":"object list class 'ggplot2' showing Kaplan-Meier curves Cox regression forest plot.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_tropism.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize metastatic propnesity odds ratio in a volcano plot fashion. — plot_tropism","title":"Visualize metastatic propnesity odds ratio in a volcano plot fashion. — plot_tropism","text":"Visualize metastatic propnesity odds ratio volcano plot fashion.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_tropism.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize metastatic propnesity odds ratio in a volcano plot fashion. — plot_tropism","text":"","code":"plot_tropism(x, tumor_type)"},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_tropism.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize metastatic propnesity odds ratio in a volcano plot fashion. — plot_tropism","text":"x object class 'INCOMMON' containing classification results, produced function classify. tumor_type tumour type classified data available.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/plot_tropism.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize metastatic propnesity odds ratio in a volcano plot fashion. — plot_tropism","text":"object list objects class 'ggplot2'.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for class 'INCOMMON'. — posterior","title":"Getter for class 'INCOMMON'. — posterior","text":"Get model posterior distribution mutation.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for class 'INCOMMON'. — posterior","text":"","code":"posterior(x, id)"},{"path":"caravagnalab.github.io/INCOMMON/reference/posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for class 'INCOMMON'. — posterior","text":"x obj class 'INCOMMON'. id identifier mutation created function idify.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getter for class 'INCOMMON'. — posterior","text":"table showing posterior distribution entropy.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/print.INCOMMON.html","id":null,"dir":"Reference","previous_headings":"","what":"Print for class 'INCOMMON'. — print.INCOMMON","title":"Print for class 'INCOMMON'. — print.INCOMMON","text":"Print class 'INCOMMON'.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/print.INCOMMON.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print for class 'INCOMMON'. — print.INCOMMON","text":"","code":"# S3 method for INCOMMON print(x, ...)"},{"path":"caravagnalab.github.io/INCOMMON/reference/print.INCOMMON.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print for class 'INCOMMON'. — print.INCOMMON","text":"x obj class 'INCOMMON'. ... Default S3 method parameter.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/print.INCOMMON.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print for class 'INCOMMON'. — print.INCOMMON","text":"Nothing.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/priors.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for class 'INCOMMON'. — priors","title":"Getter for class 'INCOMMON'. — priors","text":"Get model priors used classification.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/priors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for class 'INCOMMON'. — priors","text":"","code":"priors(x)"},{"path":"caravagnalab.github.io/INCOMMON/reference/priors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for class 'INCOMMON'. — priors","text":"x obj class 'INCOMMON'.","code":""},{"path":"caravagnalab.github.io/INCOMMON/reference/priors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getter for class 'INCOMMON'. — priors","text":"dplyr::tibble containing prior distributions.","code":""}]
