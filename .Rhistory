# Trick to analyse specific HGVS amino acid changes
msk$classification$fit = msk$classification$fit %>%
mutate(gene = paste(gene, HGVSp_Short, sep = ":"))
msk = genome_interpreter(msk)
what = classification(msk) %>%
filter(!grepl('Tier-2',class)) %>%
# Count samples per case study (tumor type-gene)
group_by(tumor_type, gene, class) %>%
reframe(N = length(unique(sample)), across(everything())) %>%
# Count minimum number of samples per class
group_by(tumor_type, gene) %>%
reframe(min.N = min(N), across(everything())) %>%
# Filter out cases with less than 30 samples per class
filter(min.N >= 30)
library(tidyverse)
devtools::load_all('~/Documents/GitHub/INCOMMON/')
msk = readRDS('./results/msk_classified_new_model.rds')
# Trick to analyse specific HGVS amino acid changes
msk$classification$fit = msk$classification$fit %>%
mutate(gene = paste(gene, HGVSp_Short, sep = ":"))
msk = genome_interpreter(msk)
what = classification(msk) %>%
filter(!grepl('Tier-2',class)) %>%
# Count samples per case study (tumor type-gene)
group_by(tumor_type, gene, class) %>%
reframe(N = length(unique(sample)), across(everything())) %>%
# Count minimum number of samples per class
group_by(tumor_type, gene) %>%
reframe(min.N = min(N), across(everything())) %>%
# Filter out cases with less than 30 samples per class
filter(min.N >= 30)
msk$clinical_data = msk$clinical_data %>% rename(Age = AGE_AT_SEQUENCING,
TMB = TMB_NONSYNONYMOUS)
msk$clinical_data = msk$clinical_data %>% select(-AGE_AT_DEATH)
msk$clinical_data = msk$clinical_data %>% rename(Sex = SEX)
msk$clinical_data = msk$clinical_data %>% mutate(Age = round(Age, 0))
# covariates = c()
# covariates = c("sex", "tmb")
for(tumor_type in unique(what$tumor_type)){
# Supported genes
genes = what %>%
filter(tumor_type == !!tumor_type) %>%
pull(gene) %>% unique()
covariates = c("sex", "tmb", 'Age')
if(tumor_type %in% c('BRCA', 'PRAD', 'UCEC')) covariates = c("tmb", 'Age')
for(gene in genes){
tryCatch(
{
min.n = INCOMMON:::prepare_km_fit_input(x = msk,
tumor_type = tumor_type,
gene = gene) %>%
pull(class) %>%
table() %>%
min()
if(min.n <= 30) return(NULL)
# Fit KM
msk = kaplan_meier_fit(
x = msk,
tumor_type = tumor_type,
gene = gene,
survival_time = 'OS_MONTHS',
survival_status = 'OS_STATUS'
)
# Fit Cox
msk = cox_fit(
x = msk,
tumor_type = tumor_type,
gene = gene,
survival_time = 'OS_MONTHS',
survival_status = 'OS_STATUS',
covariates = covariates,
tmb_method = ">10"
)
# Plot surv analysis
plot_summary_survival = plot_survival_analysis(
x = msk,
tumor_type = tumor_type,
gene = gene,
cox_covariates = covariates
)
saveRDS(object = plot_summary_survival,
file = paste0('./plots/survival_summaries/multivariate_new_model/', tumor_type, '_', gene, '.rds'))
ggsave(
plot = plot_summary_survival,
filename = paste0('./figures/Other/survival_summaries/multivariate_new_model/', tumor_type, '_', gene, '.pdf'),
width = 8,
height = 5)
}, error = function(e){
return(NULL)
}
)
}
}
# Number of tumour types
names(msk$survival) %>% length()
# Number of genes
sapply(msk$survival, function(x) names(x)) %>% unlist() %>% unname() %>% unique() %>% length()
# Total number of cases
sapply(msk$survival, function(x) names(x)) %>% unlist() %>% unname() %>% length()
cox_table = lapply(names(msk$survival), function(tumor_type){
genes = names(msk$survival[[tumor_type]])
lapply(genes, function(gene){
# Get total number of samples
n_samples = msk$survival[[tumor_type]][[gene]]$`kaplan-meier`[['baseline']]$n[2]
lapply(c('baseline', 'incommon'), function(method){
print(tumor_type)
print(gene)
print(method)
# Get Cox regression
if(!('cox_regression' %in% names(msk$survival[[tumor_type]][[gene]]))) return(NULL)
x = msk$survival[[tumor_type]][[gene]]$`cox_regression`[[method]]
# Get table of Cox regression coefficients and p.values
s = summary(x)
rnames = s$conf.int %>% rownames()
s$conf.int %>%
as_tibble() %>%
mutate(var = rnames) %>%
select(-2) %>%
rename(value = `exp(coef)`,
upper = `upper .95`,
lower = `lower .95`) %>%
cbind(s$coefficients[, 'Pr(>|z|)'] %>%
as_tibble_col() %>%
rename(p.value = value)) %>%
mutate(var = case_when(
grepl('group', var) ~ gsub(pattern = 'group', replacement = '', var),
grepl('Sex', var) ~ gsub(pattern = 'Sex', replacement = 'Sex: ', var),
TRUE ~ var
)) %>%
mutate(tumor_type = tumor_type,
gene = gene,
n_samples = n_samples,
method = method)
}) %>% do.call(rbind, .)
}) %>% do.call(rbind, .)
}) %>% do.call(rbind, .) %>% as_tibble()
saveRDS(cox_table,file = './results/msk_cox_table_hotspots_new_model.rds')
library(tidyverse)
devtools::load_all('~/Documents/GitHub/INCOMMON/')
msk = readRDS('./results/msk_classified_new_model.rds')
# Trick to analyse specific HGVS amino acid changes
msk$classification$fit = msk$classification$fit %>%
mutate(gene = paste(gene, HGVSp_Short, sep = ":"))
msk = genome_interpreter(msk)
what = classification(msk) %>%
filter(!grepl('Tier-2',class)) %>%
# Count samples per case study (tumor type-gene)
group_by(tumor_type, gene, class) %>%
reframe(N = length(unique(sample)), across(everything())) %>%
# Count minimum number of samples per class
group_by(tumor_type, gene) %>%
reframe(min.N = min(N), across(everything())) %>%
# Filter out cases with less than 30 samples per class
filter(min.N >= 30)
msk$clinical_data = msk$clinical_data %>% rename(Age = AGE_AT_SEQUENCING,
TMB = TMB_NONSYNONYMOUS)
msk$clinical_data = msk$clinical_data %>% select(-AGE_AT_DEATH)
msk$clinical_data = msk$clinical_data %>% rename(Sex = SEX)
msk$clinical_data = msk$clinical_data %>% mutate(Age = round(Age, 0))
# covariates = c()
# covariates = c("sex", "tmb")
for(tumor_type in unique(what$tumor_type)){
# Supported genes
genes = what %>%
filter(tumor_type == !!tumor_type) %>%
pull(gene) %>% unique()
covariates = c("sex", "tmb", 'Age')
if(tumor_type %in% c('BRCA', 'PRAD', 'UCEC')) covariates = c("tmb", 'Age')
for(gene in genes){
tryCatch(
{
min.n = INCOMMON:::prepare_km_fit_input(x = msk,
tumor_type = tumor_type,
gene = gene) %>%
pull(class) %>%
table() %>%
min()
if(min.n <= 30) return(NULL)
# Fit KM
msk = kaplan_meier_fit(
x = msk,
tumor_type = tumor_type,
gene = gene,
survival_time = 'OS_MONTHS',
survival_status = 'OS_STATUS'
)
# Fit Cox
msk = cox_fit(
x = msk,
tumor_type = tumor_type,
gene = gene,
survival_time = 'OS_MONTHS',
survival_status = 'OS_STATUS',
covariates = covariates,
tmb_method = ">10"
)
# Plot surv analysis
plot_summary_survival = plot_survival_analysis(
x = msk,
tumor_type = tumor_type,
gene = gene,
cox_covariates = covariates
)
saveRDS(object = plot_summary_survival,
file = paste0('./plots/survival_summaries/multivariate_new_model/', tumor_type, '_', gene, '.rds'))
ggsave(
plot = plot_summary_survival,
filename = paste0('./figures/Other/survival_summaries/multivariate_new_model/', tumor_type, '_', gene, '.pdf'),
width = 8,
height = 5)
}, error = function(e){
return(NULL)
}
)
}
}
# Number of tumour types
names(msk$survival) %>% length()
# Number of genes
sapply(msk$survival, function(x) names(x)) %>% unlist() %>% unname() %>% unique() %>% length()
# Total number of cases
sapply(msk$survival, function(x) names(x)) %>% unlist() %>% unname() %>% length()
cox_table = lapply(names(msk$survival), function(tumor_type){
genes = names(msk$survival[[tumor_type]])
lapply(genes, function(gene){
# Get total number of samples
n_samples = msk$survival[[tumor_type]][[gene]]$`kaplan-meier`[['baseline']]$n[2]
lapply(c('baseline', 'incommon'), function(method){
print(tumor_type)
print(gene)
print(method)
# Get Cox regression
if(!('cox_regression' %in% names(msk$survival[[tumor_type]][[gene]]))) return(NULL)
x = msk$survival[[tumor_type]][[gene]]$`cox_regression`[[method]]
# Get table of Cox regression coefficients and p.values
s = summary(x)
rnames = s$conf.int %>% rownames()
s$conf.int %>%
as_tibble() %>%
mutate(var = rnames) %>%
select(-2) %>%
rename(value = `exp(coef)`,
upper = `upper .95`,
lower = `lower .95`) %>%
cbind(s$coefficients[, 'Pr(>|z|)'] %>%
as_tibble_col() %>%
rename(p.value = value)) %>%
mutate(var = case_when(
grepl('group', var) ~ gsub(pattern = 'group', replacement = '', var),
grepl('Sex', var) ~ gsub(pattern = 'Sex', replacement = 'Sex: ', var),
TRUE ~ var
)) %>%
mutate(tumor_type = tumor_type,
gene = gene,
n_samples = n_samples,
method = method)
}) %>% do.call(rbind, .)
}) %>% do.call(rbind, .)
}) %>% do.call(rbind, .) %>% as_tibble()
saveRDS(cox_table,file = './results/msk_cox_table_hotspots_new_model.rds')
library(tidyverse)
devtools::load_all('~/Documents/GitHub/INCOMMON/')
msk = readRDS('./results/msk_classified_new_model.rds')
# Trick to analyse specific HGVS amino acid changes
msk$classification$fit = msk$classification$fit %>%
mutate(gene = paste(gene, HGVSp_Short, sep = ":"))
msk = genome_interpreter(msk)
what = classification(msk) %>%
filter(!grepl('Tier-2',class)) %>%
# Count samples per case study (tumor type-gene)
group_by(tumor_type, gene, class) %>%
reframe(N = length(unique(sample)), across(everything())) %>%
# Count minimum number of samples per class
group_by(tumor_type, gene) %>%
reframe(min.N = min(N), across(everything())) %>%
# Filter out cases with less than 30 samples per class
filter(min.N >= 30)
msk$clinical_data = msk$clinical_data %>% rename(Age = AGE_AT_SEQUENCING,
TMB = TMB_NONSYNONYMOUS)
msk$clinical_data = msk$clinical_data %>% select(-AGE_AT_DEATH)
msk$clinical_data = msk$clinical_data %>% rename(Sex = SEX)
msk$clinical_data = msk$clinical_data %>% mutate(Age = round(Age, 0))
# covariates = c()
# covariates = c("sex", "tmb")
for(tumor_type in unique(what$tumor_type)){
# Supported genes
genes = what %>%
filter(tumor_type == !!tumor_type) %>%
pull(gene) %>% unique()
covariates = c("sex", "tmb", 'Age')
if(tumor_type %in% c('BRCA', 'PRAD', 'UCEC')) covariates = c("tmb", 'Age')
for(gene in genes){
tryCatch(
{
min.n = INCOMMON:::prepare_km_fit_input(x = msk,
tumor_type = tumor_type,
gene = gene) %>%
pull(class) %>%
table() %>%
min()
if(min.n <= 30) return(NULL)
# Fit KM
msk = kaplan_meier_fit(
x = msk,
tumor_type = tumor_type,
gene = gene,
survival_time = 'OS_MONTHS',
survival_status = 'OS_STATUS'
)
# Fit Cox
msk = cox_fit(
x = msk,
tumor_type = tumor_type,
gene = gene,
survival_time = 'OS_MONTHS',
survival_status = 'OS_STATUS',
covariates = covariates,
tmb_method = ">10"
)
# Plot surv analysis
plot_summary_survival = plot_survival_analysis(
x = msk,
tumor_type = tumor_type,
gene = gene,
cox_covariates = covariates
)
# saveRDS(object = plot_summary_survival,
#         file = paste0('./plots/survival_summaries/multivariate_new_model/', tumor_type, '_', gene, '.rds'))
ggsave(
plot = plot_summary_survival,
filename = paste0('./figures/Other/survival_summaries/multivariate_new_model/', tumor_type, '_', gene, '.pdf'),
width = 8,
height = 5)
}, error = function(e){
return(NULL)
}
)
}
}
# Number of tumour types
names(msk$survival) %>% length()
# Number of genes
sapply(msk$survival, function(x) names(x)) %>% unlist() %>% unname() %>% unique() %>% length()
# Total number of cases
sapply(msk$survival, function(x) names(x)) %>% unlist() %>% unname() %>% length()
cox_table = lapply(names(msk$survival), function(tumor_type){
genes = names(msk$survival[[tumor_type]])
lapply(genes, function(gene){
# Get total number of samples
n_samples = msk$survival[[tumor_type]][[gene]]$`kaplan-meier`[['baseline']]$n[2]
lapply(c('baseline', 'incommon'), function(method){
print(tumor_type)
print(gene)
print(method)
# Get Cox regression
if(!('cox_regression' %in% names(msk$survival[[tumor_type]][[gene]]))) return(NULL)
x = msk$survival[[tumor_type]][[gene]]$`cox_regression`[[method]]
# Get table of Cox regression coefficients and p.values
s = summary(x)
rnames = s$conf.int %>% rownames()
s$conf.int %>%
as_tibble() %>%
mutate(var = rnames) %>%
select(-2) %>%
rename(value = `exp(coef)`,
upper = `upper .95`,
lower = `lower .95`) %>%
cbind(s$coefficients[, 'Pr(>|z|)'] %>%
as_tibble_col() %>%
rename(p.value = value)) %>%
mutate(var = case_when(
grepl('group', var) ~ gsub(pattern = 'group', replacement = '', var),
grepl('Sex', var) ~ gsub(pattern = 'Sex', replacement = 'Sex: ', var),
TRUE ~ var
)) %>%
mutate(tumor_type = tumor_type,
gene = gene,
n_samples = n_samples,
method = method)
}) %>% do.call(rbind, .)
}) %>% do.call(rbind, .)
}) %>% do.call(rbind, .) %>% as_tibble()
saveRDS(cox_table,file = './results/msk_cox_table_hotspots_new_model.rds')
library(tidyverse)
devtools::load_all('~/Documents/GitHub/INCOMMON/')
msk = readRDS('./results/msk_classified_new_model.rds')
# Trick to analyse specific HGVS amino acid changes
# msk$classification$fit = msk$classification$fit %>%
#   mutate(gene = paste(gene, HGVSp_Short, sep = ":"))
msk = genome_interpreter(msk)
what = classification(msk) %>%
filter(!grepl('Tier-2',class)) %>%
# Count samples per case study (tumor type-gene)
group_by(tumor_type, gene, class) %>%
reframe(N = length(unique(sample)), across(everything())) %>%
# Count minimum number of samples per class
group_by(tumor_type, gene) %>%
reframe(min.N = min(N), across(everything())) %>%
# Filter out cases with less than 30 samples per class
filter(min.N >= 30)
msk$clinical_data = msk$clinical_data %>% rename(Age = AGE_AT_SEQUENCING,
TMB = TMB_NONSYNONYMOUS)
msk$clinical_data = msk$clinical_data %>% select(-AGE_AT_DEATH)
msk$clinical_data = msk$clinical_data %>% rename(Sex = SEX)
msk$clinical_data = msk$clinical_data %>% mutate(Age = round(Age, 0))
# covariates = c()
# covariates = c("sex", "tmb")
for(tumor_type in unique(what$tumor_type)){
# Supported genes
genes = what %>%
filter(tumor_type == !!tumor_type) %>%
pull(gene) %>% unique()
covariates = c("sex", "tmb", 'Age')
if(tumor_type %in% c('BRCA', 'PRAD', 'UCEC')) covariates = c("tmb", 'Age')
for(gene in genes){
tryCatch(
{
min.n = INCOMMON:::prepare_km_fit_input(x = msk,
tumor_type = tumor_type,
gene = gene) %>%
pull(class) %>%
table() %>%
min()
if(min.n <= 30) return(NULL)
# Fit KM
msk = kaplan_meier_fit(
x = msk,
tumor_type = tumor_type,
gene = gene,
survival_time = 'OS_MONTHS',
survival_status = 'OS_STATUS'
)
# Fit Cox
msk = cox_fit(
x = msk,
tumor_type = tumor_type,
gene = gene,
survival_time = 'OS_MONTHS',
survival_status = 'OS_STATUS',
covariates = covariates,
tmb_method = ">10"
)
# Plot surv analysis
plot_summary_survival = plot_survival_analysis(
x = msk,
tumor_type = tumor_type,
gene = gene,
cox_covariates = covariates
)
# saveRDS(object = plot_summary_survival,
#         file = paste0('./plots/survival_summaries/multivariate_new_model/', tumor_type, '_', gene, '.rds'))
ggsave(
plot = plot_summary_survival,
filename = paste0('./figures/Other/survival_summaries/multivariate_new_model/', tumor_type, '_', gene, '.pdf'),
width = 8,
height = 5)
}, error = function(e){
return(NULL)
}
)
}
}
# Number of tumour types
names(msk$survival) %>% length()
# Number of genes
sapply(msk$survival, function(x) names(x)) %>% unlist() %>% unname() %>% unique() %>% length()
# Total number of cases
sapply(msk$survival, function(x) names(x)) %>% unlist() %>% unname() %>% length()
cox_table = lapply(names(msk$survival), function(tumor_type){
genes = names(msk$survival[[tumor_type]])
lapply(genes, function(gene){
# Get total number of samples
n_samples = msk$survival[[tumor_type]][[gene]]$`kaplan-meier`[['baseline']]$n[2]
lapply(c('baseline', 'incommon'), function(method){
print(tumor_type)
print(gene)
print(method)
# Get Cox regression
if(!('cox_regression' %in% names(msk$survival[[tumor_type]][[gene]]))) return(NULL)
x = msk$survival[[tumor_type]][[gene]]$`cox_regression`[[method]]
# Get table of Cox regression coefficients and p.values
s = summary(x)
rnames = s$conf.int %>% rownames()
s$conf.int %>%
as_tibble() %>%
mutate(var = rnames) %>%
select(-2) %>%
rename(value = `exp(coef)`,
upper = `upper .95`,
lower = `lower .95`) %>%
cbind(s$coefficients[, 'Pr(>|z|)'] %>%
as_tibble_col() %>%
rename(p.value = value)) %>%
mutate(var = case_when(
grepl('group', var) ~ gsub(pattern = 'group', replacement = '', var),
grepl('Sex', var) ~ gsub(pattern = 'Sex', replacement = 'Sex: ', var),
TRUE ~ var
)) %>%
mutate(tumor_type = tumor_type,
gene = gene,
n_samples = n_samples,
method = method)
}) %>% do.call(rbind, .)
}) %>% do.call(rbind, .)
}) %>% do.call(rbind, .) %>% as_tibble()
saveRDS(cox_table,file = './results/msk_cox_table_new_model.rds')
x = readRDS('./results/msk_classified_new_model.rds')
x %>% View()
x$classification$fit %>% View()
x = readRDS('./results/msk_HR_new_model.rds')
x
x %>% View()
