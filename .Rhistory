ggplot2::scale_fill_viridis_c(option = 'turbo')+
ggplot2::geom_text(ggplot2::aes(label = round(n, 0)), color = 'white')+
ggplot2::labs(
title = paste0(gene, ' (', tumor_type, ')'),
subtitle = paste0('N = ', .$N))+
my_ggplot_theme()
x %>%
dplyr::filter(gene == !!gene, tumor_type == !!tumor_type) %>%
ggplot2::ggplot(ggplot2::aes(x = k, y = m,))+
ggplot2::geom_tile(ggplot2::aes(fill = log10(n)))+
ggplot2::scale_fill_viridis_c(option = 'turbo')+
ggplot2::geom_text(ggplot2::aes(label = round(n, 0)), color = 'white')+
ggplot2::labs(
title = paste0(gene, ' (', tumor_type, ')'),
subtitle = paste0('N = ', .x$N))+
my_ggplot_theme()
x %>%
dplyr::filter(gene == !!gene, tumor_type == !!tumor_type) %>%
ggplot2::ggplot(ggplot2::aes(x = k, y = m,))+
ggplot2::geom_tile(ggplot2::aes(fill = log10(n)))+
ggplot2::scale_fill_viridis_c(option = 'turbo')+
ggplot2::geom_text(ggplot2::aes(label = round(n, 0)), color = 'white')+
ggplot2::labs(
title = paste0(gene, ' (', tumor_type, ')'),
subtitle = paste0('N = ', N))+
my_ggplot_theme()
devtools::load_all('./')
plot_prior(x = priors_k_m,
gene = 'KRAS',
tumor_type = 'PAAD')
devtools::load_all('./')
plot_prior(x = priors_k_m,
gene = 'KRAS',
tumor_type = 'PAAD')
devtools::install_github(repo = 'caravagnalab/INCOMMON@stan')
library(INCOMMON)
library(dplyr)
library(DT)
data('MSK_genomic_data')
MSK_genomic_data
datatable(
head(MSK_genomic_data, n = 500), filter = 'top',
extensions = 'FixedColumns',
options = list(
dom = 't',
scrollX = TRUE,
scrollCollapse = TRUE
))
data('MSK_clinical_data')
datatable(
head(MSK_clinical_data, n = 500), filter = 'top',
extensions = 'FixedColumns',
options = list(
dom = 't',
scrollX = TRUE,
scrollCollapse = TRUE
))
devtools::load_all('./')
sample = 'P-0002081'
genomic_data = MSK_genomic_data %>% filter(sample == !!sample)
clinical_data = MSK_clinical_data %>% filter(sample == !!sample)
print(genomic_data)
print(clinical_data)
genomic_data = MSK_genomic_data %>% filter(sample == !!sample)
genomic_data
data("cancer_gene_census")
datatable(cancer_gene_census, filter = 'top')
x = init(genomic_data = genomic_data,
clinical_data = clinical_data,
gene_roles = cancer_gene_census)
print(x)
x
priors_eta
x
x
purity(x)
purity(x, sample = unique(x$input$sample))
purity_error = 0.05
alpha_pi = unique(x$input$purity) * ((unique(x$input$purity) * (1 - unique(x$input$purity)) / purity_error) - 1);
alpha_pi = unique(x$input$purity) * ((unique(x$input$purity) * (1 - unique(x$input$purity)) / purity_error) - 1)
alpha_pi
beta_pi = (1 - unique(x$input$purity)) * ((unique(x$input$purity) * (1 - unique(x$input$purity)) / purity_error)
stats::rgamma(n = 1000, )
beta_pi = (1 - unique(x$input$purity)) * ((unique(x$input$purity) * (1 - unique(x$input$purity)) / purity_error))
beta_pi
stats::rgamma(n = 1000, shape = alpha_pi, rate = beta_pi)
data = stats::rgamma(n = 1000, shape = alpha_pi, rate = beta_pi)
data = tibble(y = stats::rgamma(n = 1000, shape = alpha_pi, rate = beta_pi))
data
data = tibble(x = stats::rgamma(n = 1000, shape = alpha_pi, rate = beta_pi))
data %>%
ggplot2::ggplot(ggplot2::aes(x = x))+
ggplot2::geom_histogram(bins = 100)
data = tibble(x = stats::rgamma(n = 100000, shape = alpha_pi, rate = beta_pi))
data %>%
ggplot2::ggplot(ggplot2::aes(x = x))+
ggplot2::geom_histogram(bins = 100)
data %>%
ggplot2::ggplot(ggplot2::aes(x = x))+
ggplot2::geom_density
data %>%
ggplot2::ggplot(ggplot2::aes(x = x))+
ggplot2::geom_density()
df = tibble(
x = seq(0, 1, length.out = 1000),
density = dbeta(seq(0, 1, length.out = 1000), shape1 = alpha_pi, shape2 = beta_pi)
)
# Plot using ggplot2
ggplot(df, aes(x = x, y = density)) +
geom_line(color = "steelblue", size = 1.2) +
labs(
title = paste0("Beta Distribution (α = ", alpha, ", β = ", beta, ")"),
x = "x",
y = "Density"
) +
theme_minimal()
# Plot using ggplot2
ggplot2::ggplot(df, aes(x = x, y = density)) +
ggplot2::geom_line(color = "steelblue", size = 1.2) +
ggplot2::labs(
title = paste0("Beta Distribution (α = ", alpha, ", β = ", beta, ")"),
x = "x",
y = "Density"
) +
ggplot2::theme_minimal()
# Plot using ggplot2
ggplot2::ggplot(df, ggplot2::aes(x = x, y = density)) +
ggplot2::geom_line(color = "steelblue", size = 1.2) +
ggplot2::labs(
title = paste0("Beta Distribution (α = ", alpha, ", β = ", beta, ")"),
x = "x",
y = "Density"
) +
ggplot2::theme_minimal()
# Plot using ggplot2
ggplot2::ggplot(df, ggplot2::aes(x = x, y = density)) +
ggplot2::geom_line(color = "steelblue", size = 1.2) +
ggplot2::labs(
title = paste0("Beta Distribution (α = ", alpha_pi, ", β = ", beta_pi, ")"),
x = "x",
y = "Density"
) +
ggplot2::theme_minimal()
# Plot using ggplot2
ggplot2::ggplot(df, ggplot2::aes(x = x, y = density)) +
ggplot2::geom_line(color = "steelblue", size = 1.2) +
ggplot2::labs(
title = paste0("Beta Distribution (α = ", alpha_pi, ", β = ", beta_pi, ")"),
x = "x",
y = "Density"
)
# Plot using ggplot2
toplot %>%
ggplot2::ggplot(ggplot2::aes(x = x, y = density)) +
ggplot2::geom_line(color = 'steelblue', size = 1.2) +
ggplot2::labs(
title = paste0("Beta Distribution (α = ", alpha_pi, ", β = ", beta_pi, ")"),
x = bquote(pi),
y = "Density"
)
toplot = dplyr::tibble(
x = seq(0, 1, length.out = 1000),
density = stats::dbeta(
seq(0, 1, length.out = 1000),
shape1 = alpha_pi,
shape2 = beta_pi)
)
# Plot using ggplot2
toplot %>%
ggplot2::ggplot(ggplot2::aes(x = x, y = density)) +
ggplot2::geom_line(color = 'steelblue', size = 1.2) +
ggplot2::labs(
title = paste0("Beta Distribution (α = ", alpha_pi, ", β = ", beta_pi, ")"),
x = bquote(pi),
y = "Density"
)
# Plot using ggplot2
toplot %>%
ggplot2::ggplot(ggplot2::aes(x = x, y = density)) +
ggplot2::geom_line(color = 'steelblue', size = 1.2) +
ggplot2::labs(
title = paste0("Beta Distribution (α = ", alpha_pi, ", β = ", beta_pi, ")"),
x = bquote(pi),
y = "Density"
)+
my_ggplot_theme()
# Plot using ggplot2
toplot %>%
ggplot2::ggplot(ggplot2::aes(x = x, y = density)) +
ggplot2::geom_line(color = 'steelblue', size = 1.2) +
ggplot2::labs(
title = paste0("Prior Purity Distribution"),
subtitle = paste0("Beta distribution, "(α = ", alpha_pi, ", β = ", beta_pi, ")),
x = bquote(pi),
y = "Density"
)+
my_ggplot_theme()
# Plot using ggplot2
toplot %>%
ggplot2::ggplot(ggplot2::aes(x = x, y = density)) +
ggplot2::geom_line(color = 'steelblue', size = 1.2) +
ggplot2::labs(
title = paste0("Prior Purity Distribution"),
subtitle = paste0("Beta Distribution (α = ", alpha_pi, ", β = ", beta_pi, ")"),
x = bquote(pi),
y = "Density"
)+
my_ggplot_theme()
purity_mean = unique(x$input$purity)
alpha_pi = purity_mean * (purity_mean * (1 - purity_mean) / purity_error) - 1)
beta_pi = (1 - purity_mean) * (purity_mean * (1 - purity_mean) / purity_error))
purity_mean * ((purity_mean * (1 - purity_mean) / purity_error) - 1)
(1 - purity_mean) * (purity_mean * (1 - purity_mean) / purity_error))
(1 - purity_mean) * (purity_mean * (1 - purity_mean) / purity_error)
# Plot using ggplot2
toplot %>%
ggplot2::ggplot(ggplot2::aes(x = x, y = density)) +
ggplot2::geom_line(color = 'steelblue', size = 1.2) +
ggplot2::geom_vline(xintercept = purity_mean)+
ggplot2::labs(
title = paste0("Prior Purity Distribution"),
subtitle = paste0("Beta Distribution (α = ", alpha_pi, ", β = ", beta_pi, ")"),
x = bquote(pi),
y = "Density"
)+
my_ggplot_theme()
# Plot using ggplot2
toplot %>%
ggplot2::ggplot(ggplot2::aes(x = x, y = density)) +
ggplot2::geom_line(color = 'steelblue', size = 1.2) +
ggplot2::geom_vline(xintercept = purity_mean, linetype = 'longdash')+
ggplot2::labs(
title = paste0("Prior Purity Distribution"),
subtitle = paste0("Beta Distribution (α = ", alpha_pi, ", β = ", beta_pi, ")"),
x = bquote(pi),
y = "Density"
)+
my_ggplot_theme()
# Plot using ggplot2
toplot %>%
ggplot2::ggplot(ggplot2::aes(x = x, y = density)) +
ggplot2::geom_line(color = 'steelblue', size = 1.2) +
ggplot2::geom_vline(xintercept = purity_mean, linetype = 'longdash')+
ggplot2::labs(
title = paste0("Prior Purity Distribution"),
subtitle = paste0("Beta Distribution (α = ", alpha_pi, ", β = ", beta_pi, "); Mean = ", purity_mean),
x = bquote(pi),
y = "Density"
)+
my_ggplot_theme()
devtools::load_all('./')
data('MSK_genomic_data')
datatable(
head(MSK_genomic_data, n = 500), filter = 'top',
extensions = 'FixedColumns',
options = list(
dom = 't',
scrollX = TRUE,
scrollCollapse = TRUE
))
data('MSK_clinical_data')
datatable(
head(MSK_clinical_data, n = 500), filter = 'top',
extensions = 'FixedColumns',
options = list(
dom = 't',
scrollX = TRUE,
scrollCollapse = TRUE
))
sample = 'P-0002081'
genomic_data = MSK_genomic_data %>% filter(sample == !!sample)
clinical_data = MSK_clinical_data %>% filter(sample == !!sample)
print(genomic_data)
print(clinical_data)
data("cancer_gene_census")
datatable(cancer_gene_census, filter = 'top')
x = init(genomic_data = genomic_data,
clinical_data = clinical_data,
gene_roles = cancer_gene_census)
print(x)
sample
purity(x = x, sample = sample)
devtools::load_all('./')
plot_purity_prior(x = x, sample, = sample, purity_error = 0.05)
plot_purity_prior(x = x, sample = sample, purity_error = 0.05)
devtools::load_all('./')
plot_purity_prior(x = x, sample = sample, purity_error = 0.05)
devtools::load_all('./')
devtools::load_all('./')
priors_k_m
data('priors_k_m')
priors_eta = compute_eta_prior(x = x, priors_k_m = priors_k_m)
devtools::load_all('./')
data('priors_k_m')
priors_eta = compute_eta_prior(x = x, priors_k_m = priors_k_m)
x
devtools::load_all('./')
data('priors_k_m')
priors_eta = compute_eta_prior(x = x, priors_k_m = priors_k_m)
priors_eta
devtools::load_all('./')
t
data('priors_k_m')
priors_eta = compute_eta_prior(x = x, priors_k_m = priors_k_m)
data('priors_k_m')
priors_eta = compute_eta_prior(x = x, priors_k_m = priors_k_m)
priors_eta
data('priors_k_m')
priors_eta = compute_eta_prior(x = x, priors_k_m = priors_k_m)
print(priors_eta)
priors_eta
priors_k_m %>%
dplyr::group_by(gene, tumor_type) %>%
dplyr::mutate(p = n / sum(n))
priors_k_m = priors_k_m %>%
dplyr::group_by(gene, tumor_type) %>%
dplyr::mutate(p = n / sum(n))
x_data = x$input %>%
dplyr::select(sample, tumor_type, gene, purity, DP) %>%
unique() %>%
dplyr::left_join(priors_k_m, by = c('gene', 'tumor_type')) %>%
dplyr::mutate(x = DP*p/(2*(1-purity)+k*purity)) %>%
dplyr::group_by(tumor_type, gene, sample) %>%
dplyr::reframe(x = sum(x, na.rm = T)) %>%
dplyr::filter(!is.na(x)) %>% filter(x > 0) %>%
unique() %>%
dplyr::group_by(sample) %>%
dplyr::reframe(x = mean(x), tumor_type) %>%
unique()
x_data
x_data %>%
dplyr::group_by(tumor_type) %>%
dplyr::reframe(mean_eta = mean(x), var_eta = stats::var(x), N = length(unique(sample))) %>%
dplyr::filter(N >= 50)
x_data %>%
dplyr::group_by(tumor_type)
x_data %>%
dplyr::group_by(tumor_type) %>%
dplyr::reframe(mean_eta = mean(x), var_eta = stats::var(x), N = length(unique(sample)))
data('priors_k_m')
msk = init(genomic_data = MSK_genomic_data,
clinical_data = MSK_clinical_data,
gene_roles = cancer_gene_census)
priors_eta = compute_eta_prior(x = msk, priors_k_m = priors_k_m)
print(priors_eta)
toplot = lapply(1:nrow(priors_eta), function(i){
tibble(
tumor_type = priors_eta[i,]$tumor_type,
cohort = priors_eta[i,]$cohort,
x = rgamma(n = 1:10000, shape = priors_eta[i,]$alpha_x, rate = priors_eta[i,]$beta_x)
)
}) %>% do.call(rbind, .)
toplot
toplot_dp = x$input %>% select(DP, tumor_type),
toplot_dp = x$input %>% select(DP, tumor_type)
plot_gamma_prior = rbind(
toplot %>% mutate(what = 'Read count rate per copy (Prior)'),
toplot_dp %>% mutate(what = 'Sequencing Depth (Oberved)') %>% rename(x = DP)
) %>%
filter(
tumor_type %in% prior_eta_msk_met$tumor_type
) %>%
mutate(
cohort = factor(cohort, levels = c('MSK-MET', 'DFCI', 'MSK-CHORD')),
tumor_type = factor(tumor_type)
) %>%
mutate(tumor_type = relevel(tumor_type, ref = 'PANCA')) %>%
ggplot(aes(x = x, fill = what))+
ggridges::geom_density_ridges(aes(y = tumor_type), alpha = .5, scale = .9)+
scale_fill_manual(values = c('indianred', 'steelblue'))+
my_ggplot_theme()+
facet_wrap(~cohort)+
labs(
x = '',
y = 'density',
fill = ''
)+
xlim(0,1500)
plot_gamma_prior = rbind(
toplot %>% mutate(what = 'Read count rate per copy (Prior)'),
toplot_dp %>% mutate(what = 'Sequencing Depth (Oberved)') %>% rename(x = DP)
) %>%
filter(
tumor_type %in% prior_eta_msk_met$tumor_type
) %>%
mutate(
cohort = factor(cohort, levels = c('MSK-MET', 'DFCI', 'MSK-CHORD')),
tumor_type = factor(tumor_type)
) %>%
mutate(tumor_type = relevel(tumor_type, ref = 'PANCA')) %>%
ggplot2::ggplot(ggplot2::aes(x = x, fill = what))+
ggridges::geom_density_ridges(ggplot2::aes(y = tumor_type), alpha = .5, scale = .9)+
ggplot2::scale_fill_manual(values = c('indianred', 'steelblue'))+
my_ggplot_theme()+
ggplot2::facet_wrap(~cohort)+
ggplot2::labs(
x = '',
y = 'density',
fill = ''
)+
ggplot2::xlim(0,1500)
prior_eta
plot_gamma_prior = rbind(
toplot %>% mutate(what = 'Read count rate per copy (Prior)'),
toplot_dp %>% mutate(what = 'Sequencing Depth (Oberved)') %>% rename(x = DP)
) %>%
filter(
tumor_type %in% priors_eta$tumor_type
) %>%
mutate(
cohort = factor(cohort, levels = c('MSK-MET', 'DFCI', 'MSK-CHORD')),
tumor_type = factor(tumor_type)
) %>%
mutate(tumor_type = relevel(tumor_type, ref = 'PANCA')) %>%
ggplot2::ggplot(ggplot2::aes(x = x, fill = what))+
ggridges::geom_density_ridges(ggplot2::aes(y = tumor_type), alpha = .5, scale = .9)+
ggplot2::scale_fill_manual(values = c('indianred', 'steelblue'))+
my_ggplot_theme()+
ggplot2::facet_wrap(~cohort)+
ggplot2::labs(
x = '',
y = 'density',
fill = ''
)+
ggplot2::xlim(0,1500)
plot_gamma_prior = rbind(
toplot %>% mutate(what = 'Read count rate per copy (Prior)'),
toplot_dp %>% mutate(what = 'Sequencing Depth (Oberved)') %>% rename(x = DP)
) %>%
filter(
tumor_type %in% priors_eta$tumor_type
) %>%
mutate(
cohort = factor(cohort, levels = c('MSK-MET', 'DFCI', 'MSK-CHORD')),
tumor_type = factor(tumor_type)
) %>%
mutate(tumor_type = relevel(tumor_type, ref = 'PANCA')) %>%
ggplot2::ggplot(ggplot2::aes(x = x, fill = what))+
ggridges::geom_density_ridges(ggplot2::aes(y = tumor_type), alpha = .5, scale = .9)+
ggplot2::scale_fill_manual(values = c('indianred', 'steelblue'))+
my_ggplot_theme()+
ggplot2::labs(
x = '',
y = 'density',
fill = ''
)+
ggplot2::xlim(0,1500)
plot_gamma_prior = rbind(
toplot %>% mutate(what = 'Read count rate per copy (Prior)'),
toplot_dp %>% mutate(what = 'Sequencing Depth (Oberved)') %>% rename(x = DP)
) %>%
filter(
tumor_type %in% priors_eta$tumor_type
) %>%
mutate(
tumor_type = factor(tumor_type)
) %>%
mutate(tumor_type = relevel(tumor_type, ref = 'PANCA')) %>%
ggplot2::ggplot(ggplot2::aes(x = x, fill = what))+
ggridges::geom_density_ridges(ggplot2::aes(y = tumor_type), alpha = .5, scale = .9)+
ggplot2::scale_fill_manual(values = c('indianred', 'steelblue'))+
my_ggplot_theme()+
ggplot2::labs(
x = '',
y = 'density',
fill = ''
)+
ggplot2::xlim(0,1500)
rbind(
toplot %>% mutate(what = 'Read count rate per copy (Prior)'),
toplot_dp %>% mutate(what = 'Sequencing Depth (Oberved)') %>% rename(x = DP)
) %>%
filter(
tumor_type %in% priors_eta$tumor_type
) %>%
mutate(
tumor_type = factor(tumor_type)
) %>%
mutate(tumor_type = relevel(tumor_type, ref = 'PANCA')) %>%
ggplot2::ggplot(ggplot2::aes(x = x, fill = what))+
ggridges::geom_density_ridges(ggplot2::aes(y = tumor_type), alpha = .5, scale = .9)+
ggplot2::scale_fill_manual(values = c('indianred', 'steelblue'))+
my_ggplot_theme()+
ggplot2::labs(
x = '',
y = 'density',
fill = ''
)+
ggplot2::xlim(0,1500)
toplot_dp = msk$input %>% select(DP, tumor_type)
rbind(
toplot %>% mutate(what = 'Read count rate per copy (Prior)'),
toplot_dp %>% mutate(what = 'Sequencing Depth (Oberved)') %>% rename(x = DP)
) %>%
filter(
tumor_type %in% priors_eta$tumor_type
) %>%
mutate(
tumor_type = factor(tumor_type)
) %>%
mutate(tumor_type = relevel(tumor_type, ref = 'PANCA')) %>%
ggplot2::ggplot(ggplot2::aes(x = x, fill = what))+
ggridges::geom_density_ridges(ggplot2::aes(y = tumor_type), alpha = .5, scale = .9)+
ggplot2::scale_fill_manual(values = c('indianred', 'steelblue'))+
my_ggplot_theme()+
ggplot2::labs(
x = '',
y = 'density',
fill = ''
)+
ggplot2::xlim(0,1500)
getwd()
