ccf_clades_n =  ccf_n,
n_times = 1,
times = t1,
# n_times = n_times+1,
# times  = c(times,t1),
z0 = z0,
# ztot = ztot,
t0 = t0,
# z1 = z1,
zminus = zminus,
zplus = zplus,
# t_min = -50,
loc_mrca = loc_mrca,
scale = 20,
ms = -0.5,
sigma = 0.5,
alpha_lambda = lambda_neg_wbc*10,
beta_lambda = 10,
alpha_p = 0.1,
beta_p = 50,
alpha_n = 0.1,
beta_n = 50,
mu = mu$mean, # Fix to estimate from T1-
l = l %>% filter(karyotype == "1:1") %>% pull(length)
)
data
m_clades
ccf_p
ccf_n
t1
z0
t0
zminus
zplus
zplus = get_total_counts(data = x, patient = patient, timepoint = 'T2', epistate = 'POS') # Mean N cells at T2+
zplus
loc_mrca
lambda_neg_wbc*10
10
data = list(
N_clades = 2,
min_ccf = 0.05, # test dependence on this threshold
max_ccf = 0.3,
m_clades = m_clades,
ccf_clades_p =  ccf_p,
ccf_clades_n =  ccf_n,
n_times = 1,
times = t1,
# n_times = n_times+1,
# times  = c(times,t1),
z0 = z0,
# ztot = ztot,
t0 = t0,
# z1 = z1,
zminus = zminus,
zplus = zplus,
# t_min = -50,
loc_mrca = loc_mrca,
scale = 20,
ms = -0.5,
sigma = 0.5,
alpha_lambda = lambda_neg_wbc*10,
beta_lambda = 10,
alpha_p = 0.1,
beta_p = 50,
alpha_n = 0.1,
beta_n = 50,
mu = mu$mean, # Fix to estimate from T1-
l = l %>% filter(karyotype == "1:1") %>% pull(length)
)
get_mu(patient)
0.0000000202
l
2741101317
sm = model$sample(
data = data,
chains = 1,
iter_warmup = 1000,
iter_sampling = 5000,
seed = 1933,
adapt_delta = 0.99,
max_treedepth = 50,
parallel_chains = 1
)
sm
summary(sm)
sm$cmdstan_summary()
draws = rbind(get_posterior(sm),get_prior(sm))
draws$variable = as.vector(draws$variable)
inference = plot_inference(draws,gt = NULL)
inference
params = unique(draws$variable)[grepl(x = draws$variable %>% unique(),pattern = "pred")]
obs = tibble(variable = params[params != "N_clades_pred"],
exp = c( data$m_clades,
data$z0[2]*data$ccf_clades_p[1],data$zplus*data$ccf_clades_p[2],
data$z0[1]*data$ccf_clades_n[1],data$zminus*data$ccf_clades_n[2],
data$z0[1],data$zminus))
draws
params = unique(draws$variable)[grepl(x = draws$variable %>% unique(),pattern = "pred")]
params
data$m_clades
data$z0[2]*data$ccf_clades_p[1],data$zplus*data$ccf_clades_p[2]
data$z0[2]*data$ccf_clades_p[1]
data$z0[2]
data$ccf_clades_p[1]
params
data$m_clades
params[params != "N_clades_pred"]
data$m_clades
data$z0[2]*data$ccf_clades_p[2]
data$ccf_clades_p
data$ccf_clades_p[2]
data$ccf_clades_p[1]
z0
zminus
obs = tibble(
variable = params[params != "N_clades_pred"],
exp = c(data$m_clades,
data$z0[2]*data$ccf_clades_p[1,1],
data$z0[2]*data$ccf_clades_p[2,1],
data$zplus*data$ccf_clades_p[1,2],
data$zplus*data$ccf_clades_p[2,2],
data$z0[1]*data$ccf_clades_n[1,1],
data$z0[1]*data$ccf_clades_n[2,1],
data$zminus*data$ccf_clades_n[1,2],
data$zminus*data$ccf_clades_n[2,2],
z0[1],
zminus)
)
pp = plot_posterior_pred(draws,obs)
pp
source("scripts/utils.R")
pp = plot_posterior_pred(draws,obs)
draws
draws  %>% filter(variable %in% params))
draws  %>% filter(variable %in% params)
ggplot(data = draws  %>% filter(variable %in% params)) +
geom_histogram(aes(x = value,fill = variable),bins = 100,position = "stack")
ggplot(data = draws  %>% filter(variable %in% params)) +
geom_histogram(aes(x = value,fill = variable),bins = 100,position = "stack") +
facet_grid(~variable,scales = "free", cols = cols)
cols = 4
ggplot(data = draws  %>% filter(variable %in% params)) +
geom_histogram(aes(x = value,fill = variable),bins = 100,position = "stack") +
facet_grid(~variable,scales = "free", cols = cols)
rows = 4
ggplot(data = draws  %>% filter(variable %in% params)) +
geom_histogram(aes(x = value,fill = variable),bins = 100,position = "stack") +
facet_grid(~variable,scales = "free", cols = cols, rows = rows)
ggplot(data = draws  %>% filter(variable %in% params)) +
geom_histogram(aes(x = value,fill = variable),bins = 100,position = "stack") +
facet_grid(~variable,scales = "free")
ncol = 4
ggplot(data = draws  %>% filter(variable %in% params)) +
geom_histogram(aes(x = value,fill = variable),bins = 100,position = "stack") +
facet_wrap(~variable,scales = "free", ncol = ncol)
source("scripts/utils.R")
pp = plot_posterior_pred(draws,obs)
pp
draws
sm$cmdstan_summary()
patient
wbc = readRDS(file = paste0('~/Dropbox/2021. CLL CD49/WBC/fits/',patient,'.rds'))
zminus
zminus/z0[1]
log(zminus/z0[1])/(t1-t0)
# WBC not available
lambda_neg_wbc = log(zminus/z0[1])/(t1-t0)
loc_mrca = -log(z0[1])/lambda_neg_wbc
loc_mrca
res = fit(x = x,
patient = 'CT525',
cluster = "S2",
clades = c('S1','S2'),
loc_mrca = -40,
scale = 20,
ms = -0.5,
sigma = 0.5,
alpha_lambda = 7,
beta_lambda = 10,
alpha_p = 0.1,
beta_p = 50,
alpha_n = 0.1,
beta_n = 50)
# RM238
patient = 'RM238'
ccf_p = matrix(
c(
get_ccf(data = x, patient = patient, timepoint = 'T1', epistate = 'POS', cluster = 'S1'),
get_ccf(data = x, patient = patient, timepoint = 'T1', epistate = 'POS', cluster = 'S2'),
get_ccf(data = x, patient = patient, timepoint = 'T2', epistate = 'POS', cluster = 'S1'),
get_ccf(data = x, patient = patient, timepoint = 'T2', epistate = 'POS', cluster = 'S2')),
nrow = 2,
ncol = 2
)
ccf_n = matrix(
c(
get_ccf(data = x, patient = patient, timepoint = 'T1', epistate = 'NEG', cluster = 'S1'),
get_ccf(data = x, patient = patient, timepoint = 'T1', epistate = 'NEG', cluster = 'S2'),
get_ccf(data = x, patient = patient, timepoint = 'T2', epistate = 'NEG', cluster = 'S1'),
get_ccf(data = x, patient = patient, timepoint = 'T2', epistate = 'NEG', cluster = 'S2')),
nrow = 2,
ncol = 2
)
z0 = c(
get_total_counts(data = x, patient = patient, timepoint = 'T1', epistate = 'NEG'), # Mean N cells at T1-
get_total_counts(data = x, patient = patient, timepoint = 'T1', epistate = 'POS'), # Mean N cells at T1+
0, # Variance N T1-
0, # Variance N T1+
0 # Covariance T1- vs T1+
)
zminus = get_total_counts(data = x, patient = patient, timepoint = 'T2', epistate = 'NEG') # Mean N cells at T2-
zplus = get_total_counts(data = x, patient = patient, timepoint = 'T2', epistate = 'POS') # Mean N cells at T2+
t0 = get_dates(data = x,patient)[1]
t1 = get_dates(data = x,patient)[2]
m_clades = c(
get_m_cluster(data = x, patient = patient, clusters = 'S1'),
get_m_cluster(data = x, patient = patient, clusters = 'S2')
)
mu = get_mu(patient)
l = get_genome_length(patient)
# WBC not available
lambda_neg_wbc = log(zminus/z0[1])/(t1-t0)
loc_mrca = -log(z0[1])/lambda_neg_wbc
data = list(
N_clades = 2,
min_ccf = 0.05, # test dependence on this threshold
max_ccf = 0.3,
m_clades = m_clades,
ccf_clades_p =  ccf_p,
ccf_clades_n =  ccf_n,
n_times = 1,
times = t1,
# n_times = n_times+1,
# times  = c(times,t1),
z0 = z0,
# ztot = ztot,
t0 = t0,
# z1 = z1,
zminus = zminus,
zplus = zplus,
# t_min = -50,
loc_mrca = loc_mrca,
scale = 20,
ms = -0.5,
sigma = 0.5,
alpha_lambda = lambda_neg_wbc*10,
beta_lambda = 10,
alpha_p = 0.1,
beta_p = 50,
alpha_n = 0.1,
beta_n = 50,
mu = mu$mean, # Fix to estimate from T1-
l = l %>% filter(karyotype == "1:1") %>% pull(length)
)
sm = model$sample(
data = data,
chains = 1,
iter_warmup = 1000,
iter_sampling = 5000,
seed = 1933,
adapt_delta = 0.99,
max_treedepth = 50,
parallel_chains = 1
)
sm$cmdstan_summary()
sm$cmdstan_summary()
draws = rbind(get_posterior(sm),get_prior(sm))
draws$variable = as.vector(draws$variable)
inference = plot_inference(draws,gt = NULL)
params = unique(draws$variable)[grepl(x = draws$variable %>% unique(),pattern = "pred")]
obs = tibble(
variable = params[params != "N_clades_pred"],
exp = c(data$m_clades,
data$z0[2]*data$ccf_clades_p[1,1],
data$z0[2]*data$ccf_clades_p[2,1],
data$zplus*data$ccf_clades_p[1,2],
data$zplus*data$ccf_clades_p[2,2],
data$z0[1]*data$ccf_clades_n[1,1],
data$z0[1]*data$ccf_clades_n[2,1],
data$zminus*data$ccf_clades_n[1,2],
data$zminus*data$ccf_clades_n[2,2],
z0[1],
zminus)
)
pp = plot_posterior_pred(draws,obs)
pp
library(cmdstanr)
library(rjson)
library(tidyverse)
source("scripts/utils.R")
file = "stan_models/clades_counts_integration.stan"
model = cmdstan_model(file, force_recompile = TRUE)
x = readRDS(paste0("data/data_clusters.rds"))
# RM238
patient = 'RM238'
ccf_p = matrix(
c(
get_ccf(data = x, patient = patient, timepoint = 'T1', epistate = 'POS', cluster = 'S1'),
get_ccf(data = x, patient = patient, timepoint = 'T1', epistate = 'POS', cluster = 'S2'),
get_ccf(data = x, patient = patient, timepoint = 'T2', epistate = 'POS', cluster = 'S1'),
get_ccf(data = x, patient = patient, timepoint = 'T2', epistate = 'POS', cluster = 'S2')),
nrow = 2,
ncol = 2
)
ccf_n = matrix(
c(
get_ccf(data = x, patient = patient, timepoint = 'T1', epistate = 'NEG', cluster = 'S1'),
get_ccf(data = x, patient = patient, timepoint = 'T1', epistate = 'NEG', cluster = 'S2'),
get_ccf(data = x, patient = patient, timepoint = 'T2', epistate = 'NEG', cluster = 'S1'),
get_ccf(data = x, patient = patient, timepoint = 'T2', epistate = 'NEG', cluster = 'S2')),
nrow = 2,
ncol = 2
)
z0 = c(
get_total_counts(data = x, patient = patient, timepoint = 'T1', epistate = 'NEG'), # Mean N cells at T1-
get_total_counts(data = x, patient = patient, timepoint = 'T1', epistate = 'POS'), # Mean N cells at T1+
0, # Variance N T1-
0, # Variance N T1+
0 # Covariance T1- vs T1+
)
zminus = get_total_counts(data = x, patient = patient, timepoint = 'T2', epistate = 'NEG') # Mean N cells at T2-
zplus = get_total_counts(data = x, patient = patient, timepoint = 'T2', epistate = 'POS') # Mean N cells at T2+
t0 = get_dates(data = x,patient)[1]
t1 = get_dates(data = x,patient)[2]
m_clades = c(
get_m_cluster(data = x, patient = patient, clusters = 'S1'),
get_m_cluster(data = x, patient = patient, clusters = 'S2')
)
mu = get_mu(patient)
l = get_genome_length(patient)
# WBC not available
lambda_neg_wbc = log(zminus/z0[1])/(t1-t0)
loc_mrca = -log(z0[1])/lambda_neg_wbc
data = list(
N_clades = 2,
min_ccf = 0.05, # test dependence on this threshold
max_ccf = 0.3,
m_clades = m_clades,
ccf_clades_p =  ccf_p,
ccf_clades_n =  ccf_n,
n_times = 1,
times = t1,
# n_times = n_times+1,
# times  = c(times,t1),
z0 = z0,
# ztot = ztot,
t0 = t0,
# z1 = z1,
zminus = zminus,
zplus = zplus,
# t_min = -50,
loc_mrca = loc_mrca,
scale = 20,
ms = -0.5,
sigma = 0.5,
alpha_lambda = lambda_neg_wbc*10,
beta_lambda = 10,
alpha_p = 0.1,
beta_p = 50,
alpha_n = 0.1,
beta_n = 50,
mu = mu$mean, # Fix to estimate from T1-
l = l %>% filter(karyotype == "1:1") %>% pull(length)
)
sm = model$sample(
data = data,
chains = 1,
iter_warmup = 1000,
iter_sampling = 5000,
seed = 1933,
adapt_delta = 0.99,
max_treedepth = 50,
parallel_chains = 1
)
sm$cmdstan_summary()
sm$cmdstan_summary() %>% View()
draws = rbind(get_posterior(sm),get_prior(sm))
draws$variable = as.vector(draws$variable)
inference = plot_inference(draws,gt = NULL)
params = unique(draws$variable)[grepl(x = draws$variable %>% unique(),pattern = "pred")]
obs = tibble(
variable = params[params != "N_clades_pred"],
exp = c(data$m_clades,
data$z0[2]*data$ccf_clades_p[1,1],
data$z0[2]*data$ccf_clades_p[2,1],
data$zplus*data$ccf_clades_p[1,2],
data$zplus*data$ccf_clades_p[2,2],
data$z0[1]*data$ccf_clades_n[1,1],
data$z0[1]*data$ccf_clades_n[2,1],
data$zminus*data$ccf_clades_n[1,2],
data$zminus*data$ccf_clades_n[2,2],
z0[1],
zminus)
)
pp = plot_posterior_pred(draws,obs)
inference
pp
get_ccf(data = x, patient = patient, timepoint = 'T1', epistate = 'NEG', cluster = 'S1')
get_ccf(data = x, patient = patient, timepoint = 'T1', epistate = 'NEG', cluster = 'S2')
get_ccf(data = x, patient = patient, timepoint = 'T2', epistate = 'NEG', cluster = 'S1')
get_ccf(data = x, patient = patient, timepoint = 'T2', epistate = 'NEG', cluster = 'S2')
library(cmdstanr)
library(rjson)
library(tidyverse)
source("scripts/utils.R")
file = "stan_models/clades_counts_integration.stan"
model = cmdstan_model(file, force_recompile = TRUE)
x = readRDS(paste0("data/data_clusters.rds"))
# RM238
patient = 'RM238'
ccf_p = matrix(
c(
get_ccf(data = x, patient = patient, timepoint = 'T1', epistate = 'POS', cluster = 'S1'),
get_ccf(data = x, patient = patient, timepoint = 'T1', epistate = 'POS', cluster = 'S2'),
get_ccf(data = x, patient = patient, timepoint = 'T2', epistate = 'POS', cluster = 'S1'),
get_ccf(data = x, patient = patient, timepoint = 'T2', epistate = 'POS', cluster = 'S2')),
nrow = 2,
ncol = 2
)
ccf_n = matrix(
c(
# get_ccf(data = x, patient = patient, timepoint = 'T1', epistate = 'NEG', cluster = 'S1'),
1e-5,
get_ccf(data = x, patient = patient, timepoint = 'T1', epistate = 'NEG', cluster = 'S2'),
get_ccf(data = x, patient = patient, timepoint = 'T2', epistate = 'NEG', cluster = 'S1'),
get_ccf(data = x, patient = patient, timepoint = 'T2', epistate = 'NEG', cluster = 'S2')),
nrow = 2,
ncol = 2
)
z0 = c(
get_total_counts(data = x, patient = patient, timepoint = 'T1', epistate = 'NEG'), # Mean N cells at T1-
get_total_counts(data = x, patient = patient, timepoint = 'T1', epistate = 'POS'), # Mean N cells at T1+
0, # Variance N T1-
0, # Variance N T1+
0 # Covariance T1- vs T1+
)
zminus = get_total_counts(data = x, patient = patient, timepoint = 'T2', epistate = 'NEG') # Mean N cells at T2-
zplus = get_total_counts(data = x, patient = patient, timepoint = 'T2', epistate = 'POS') # Mean N cells at T2+
t0 = get_dates(data = x,patient)[1]
t1 = get_dates(data = x,patient)[2]
m_clades = c(
get_m_cluster(data = x, patient = patient, clusters = 'S1'),
get_m_cluster(data = x, patient = patient, clusters = 'S2')
)
mu = get_mu(patient)
l = get_genome_length(patient)
# WBC not available
lambda_neg_wbc = log(zminus/z0[1])/(t1-t0)
loc_mrca = -log(z0[1])/lambda_neg_wbc
data = list(
N_clades = 2,
min_ccf = 0.05, # test dependence on this threshold
max_ccf = 0.3,
m_clades = m_clades,
ccf_clades_p =  ccf_p,
ccf_clades_n =  ccf_n,
n_times = 1,
times = t1,
# n_times = n_times+1,
# times  = c(times,t1),
z0 = z0,
# ztot = ztot,
t0 = t0,
# z1 = z1,
zminus = zminus,
zplus = zplus,
# t_min = -50,
loc_mrca = loc_mrca,
scale = 20,
ms = -0.5,
sigma = 0.5,
alpha_lambda = lambda_neg_wbc*10,
beta_lambda = 10,
alpha_p = 0.1,
beta_p = 50,
alpha_n = 0.1,
beta_n = 50,
mu = mu$mean, # Fix to estimate from T1-
l = l %>% filter(karyotype == "1:1") %>% pull(length)
)
sm = model$sample(
data = data,
chains = 1,
iter_warmup = 1000,
iter_sampling = 5000,
seed = 1933,
adapt_delta = 0.99,
max_treedepth = 50,
parallel_chains = 1
)
sm$cmdstan_summary()
draws = rbind(get_posterior(sm),get_prior(sm))
draws$variable = as.vector(draws$variable)
inference = plot_inference(draws,gt = NULL)
params = unique(draws$variable)[grepl(x = draws$variable %>% unique(),pattern = "pred")]
obs = tibble(
variable = params[params != "N_clades_pred"],
exp = c(data$m_clades,
data$z0[2]*data$ccf_clades_p[1,1],
data$z0[2]*data$ccf_clades_p[2,1],
data$zplus*data$ccf_clades_p[1,2],
data$zplus*data$ccf_clades_p[2,2],
data$z0[1]*data$ccf_clades_n[1,1],
data$z0[1]*data$ccf_clades_n[2,1],
data$zminus*data$ccf_clades_n[1,2],
data$zminus*data$ccf_clades_n[2,2],
z0[1],
zminus)
)
pp = plot_posterior_pred(draws,obs)
pp
