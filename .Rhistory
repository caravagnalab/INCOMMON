if(p == "CZ40"){
muts[[1]]$x = muts[[1]]$x %>% mutate(cluster = ifelse(cluster == "S2" & n_2 > 0,"S2_dr",cluster)) %>%
mutate(cluster = ifelse(cluster == "S2" & n_2 == 0,"S2_cl",cluster))
}
toplot = bind_cols(
muts[[1]]$x %>% dplyr::select(n_1,cluster) %>% rename(NV = n_1) ,
muts[[1]]$y %>% select(n_1) %>% rename(DP = n_1)
) %>% mutate(VAF = NV/DP) %>% mutate(sample = 'n') %>% mutate(id = row_number()) %>%
full_join(
bind_cols(
muts[[1]]$x %>% select(p_1, cluster) %>% rename(NV = p_1),
muts[[1]]$y %>% select(p_1) %>%  rename(DP = p_1),
) %>% mutate(VAF = NV/DP) %>% mutate(sample = 'p') %>% mutate(id = row_number()),
by = c('id', 'cluster')
)
toplot = full_join(toplot,branches, by = "cluster") %>% mutate(label = ifelse(is.na(label),"Other",label))
cls = c('gainsboro', 'goldenrod1', 'forestgreen', 'purple3', 'firebrick',"steelblue","darkorange")
names(cls) = c("Other","S1","S2","S3","Truncal","S5","S4")
plot_multi_1 = toplot %>%
filter(VAF.x <= .75, VAF.y <= .75) %>%
mutate(timepoint = 'T1')  %>%
# mutate(viber_cluster = factor(viber_cluster, levels = c('Other', 'S1', 'S2', 'S3', 'Truncal'))) %>%
arrange(desc(cluster)) %>%
ggplot()+
geom_point(
aes(
x = VAF.x, y = VAF.y,
fill = label,
# alpha = (cluster == 'Other')
), shape = 21, stroke = 0, size = 2, color = 'transparent')+
# scale_alpha_manual(values = c(1,.2))+
scale_fill_manual(values = cls)+
CNAqc:::my_ggplot_theme()+
xlim(0,.75)+ylim(0,.75)+
labs(x = 'VAF (CD49d-)', y = 'VAF (CD49d+)', fill = 'cluster')+
guides(alpha = 'none', fill = 'none')+
scale_x_continuous(breaks = scales::pretty_breaks(n=2))+
scale_y_continuous(breaks = scales::pretty_breaks(n=2))+
facet_wrap(~timepoint) + theme(legend.position="none")
toplot = bind_cols(
muts[[1]]$x %>% dplyr::select(n_2,cluster) %>% rename(NV = n_2) ,
muts[[1]]$y %>% select(n_2) %>% rename(DP = n_2)
) %>% mutate(VAF = NV/DP) %>% mutate(sample = 'n') %>% mutate(id = row_number()) %>%
full_join(
bind_cols(
muts[[1]]$x %>% select(p_2, cluster) %>% rename(NV = p_2),
muts[[1]]$y %>% select(p_2) %>%  rename(DP = p_2),
) %>% mutate(VAF = NV/DP) %>% mutate(sample = 'p') %>% mutate(id = row_number()),
by = c('id', 'cluster')
)
toplot = full_join(toplot,branches, by = "cluster") %>% mutate(label = ifelse(is.na(label),"Other",label))
plot_multi_2 = toplot %>%
filter(VAF.x <= .75, VAF.y <= .75) %>%
mutate(timepoint = 'T2') %>%
# mutate(viber_cluster = factor(viber_cluster, levels = c('Other', 'S1', 'S2', 'S3', 'Truncal'))) %>%
arrange(desc(cluster)) %>%
ggplot()+
geom_point(
aes(
x = VAF.x, y = VAF.y,
fill = label,
# alpha = (cluster == 'Other')
), shape = 21, stroke = 0, size = 2, color = 'transparent')+
# scale_alpha_manual(values = c(1,.2))+
scale_fill_manual(values = cls) +
CNAqc:::my_ggplot_theme()+
# theme_bw() +
scale_x_continuous(breaks = scales::pretty_breaks(n=2))+
scale_y_continuous(breaks = scales::pretty_breaks(n=2))+
labs(x = 'VAF (CD49d-)', y = 'VAF (CD49d-)', fill = 'cluster')+
guides(alpha = 'none', fill = 'none')+
facet_wrap(~timepoint) + theme(legend.position="none")
toplot = lapply(2:5, function(i){
nv = muts[[1]]$x[,c(1,i)]
colnames(nv)= c("cluster","nv")
dp = muts[[1]]$y[,i]
colnames(dp) = c("dp")
vaf = cbind(nv,dp) %>% mutate(vaf = nv/dp) %>% dplyr::select(cluster,vaf) %>%
mutate(sample = colnames(muts[[1]]$x)[i]) %>% reshape2::melt()
vaf
}) %>% bind_rows()
toplot = full_join(toplot,branches, by = "cluster") %>% mutate(label = ifelse(is.na(label),"Other",label))
toplot$sample = gsub(toplot$sample,pattern = "n_1",replacement = "T1-")
toplot$sample = gsub(toplot$sample,pattern = "n_2",replacement ="T2-")
toplot$sample = gsub(toplot$sample,pattern = "p_1",replacement ="T1+")
toplot$sample = gsub(toplot$sample,pattern = "p_2",replacement ="T2+")
plot_uni = toplot %>%
filter(value <= .75, value > .01)  %>%
# filter(cluster!='Other') %>%
# mutate(viber_cluster = factor(viber_cluster, levels = c('Other', 'S1', 'S2', 'S3', 'Truncal'))) %>%
arrange(desc(cluster)) %>%
ggplot()+
geom_histogram(
aes(
x = value,
fill = label,
alpha = (cluster == 'Other')
), binwidth = .01)+
scale_alpha_manual(values = c(1,.5))+
scale_fill_manual(values = cls)+
scale_color_manual(values = cls)+
CNAqc:::my_ggplot_theme()+
# theme_bw() +
scale_x_continuous(breaks = scales::pretty_breaks(n=2), limits = c(0.08,.75))+
scale_y_continuous(breaks = scales::pretty_breaks(n=2))+
labs(x = 'VAF', y = '', fill = 'cluster')+
facet_wrap(~sample, nrow = 1)+
guides(alpha = 'none') + theme(legend.position="none")
# facet_wrap(~sample, nrow = 1)
pfinal = patchwork::wrap_plots(plot_uni, plot_multi_1,plot_multi_2, design = 'AAAA\nBBCC\nBBCC', guides = 'collect')&
theme(legend.position = 'none')
# ggsave(pfinal ,filename =  paste0("~/Dropbox/2024.CLL_PEPI/figures/figures/fig2/",p,".png"),
#        height = 3.5,width = 3.5)
pfinal
})
plot = ggarrange(plotlist = all_plots,nrow = length(all_plots),ncol = 1)
plot
plotlist
all_plots
plot = patchwork::wrap_plots(
all_plots,
design = 'AA#BB#\nCC#DD#\nEE#FF#\nGG#HH#'
)
ggsave(plot, filename =  "~/Dropbox/2021. CLL CD49/plots/Figure 2/raw.pds",
height = 12, width = 10)
ggsave(plot,
filename =  "~/Dropbox/2021. CLL CD49/plots/Figure 2/raw.pdf",
height = 12, width = 10)
names(cluster_info)
ggsave(plot,
filename =  "~/Dropbox/2021. CLL CD49/plots/Figure 2/raw.pdf",
height = 10, width = 6)
ggsave(plot,
filename =  "~/Dropbox/2021. CLL CD49/plots/Figure 2/raw.pdf",
height = 8, width = 6)
library(tidyverse)
devtools::load_all('~/Documents/GitHub/INCOMMON/')
x = readRDS('./results/msk_classified.rds')
setwd('~/Dropbox/2023.TAPACLOTH/Revisions/clean/')
library(tidyverse)
devtools::load_all('~/Documents/GitHub/INCOMMON/')
x = readRDS('./results/msk_classified.rds')
x
x$fit
setwd('~/Dropbox/2023.TAPACLOTH/Revisions/clean')
library(tidyverse)
devtools::load_all('~/Documents/GitHub/INCOMMON/')
x = readRDS('./results/msk_classified.rds')
annotate_patient_type = function(x){
x %>%
group_by(SAMPLE_TYPE) %>%
reframe(m = median(MET_COUNT), across(everything())) %>%
mutate(
PATIENT_TYPE = case_when(
MET_COUNT == 0 ~ 'Not Metastatic',
MET_COUNT > 0 ~ 'Metastatic'
# MET_COUNT<=m ~ 'Low',
# MET_COUNT>m ~ 'High',
)
)
}
prepare_data = function(x){
x = x$fit %>% unnest(cols = z_km) %>%
mutate(ratio = (m/k)*z_km) %>%
group_by(id) %>%
reframe(sample, ratio = sum(ratio), across(everything())) %>%
select(-c(k, m, z_km)) %>%
unique()
x = annotate_patient_type(x)
x = x %>% dplyr::rename(
patient = PATIENT_TYPE,
type = SAMPLE_TYPE,
sex = SEX,
TMB = TMB_NONSYNONYMOUS,
age = AGE_AT_SEQUENCING)
q = rbind(
x %>% filter(gene_role == 'TSG') %>% pull(ratio) %>% quantile() %>% as_tibble(rownames = 'q') %>% mutate(gene_role = 'TSG'),
x %>% filter(gene_role == 'oncogene') %>% pull(ratio) %>% quantile() %>% as_tibble(rownames = 'q') %>% mutate(gene_role = 'oncogene')
) %>% pivot_wider(names_from = q, values_from = value, names_prefix = 'ratio.')
x = rbind(
x %>% mutate(hotspot = FALSE),
x %>% mutate(gene = paste(gene, HGVSp_Short, sep = ':'), hotspot = TRUE)
)
x = x %>%
left_join(q) %>%
mutate(
class = case_when(
ratio <= `ratio.25%` ~ 'PWK',
ratio > `ratio.25%` &  ratio <= `ratio.75%` ~ 'HMD',
ratio > `ratio.75%` ~ 'PMK',
)
) %>%
dplyr::group_by(sample) %>%
dplyr::mutate(group = paste(gene, 'with', class)) %>%
dplyr::reframe(genotype = paste(group, collapse = ','), dplyr::across(dplyr::everything())) %>%
dplyr::select(-group)
x
}
x = prepare_data(x)
saveRDS('./results/msk_classified_ready.rds')
saveRDS(x, './results/msk_classified_ready.rds')
x$map_k
x$map_m
x$ratio
library(tidyverse)
setwd('~/Dropbox/2023.TAPACLOTH/Revisions/clean/')
library(tidyverse)
x = readRDS('./results/msk_classified_ready.rds')
x = readRDS('./results/msk_classified.rds')
y = x$fit %>% unnest(cols = z_km) %>%
mutate(ratio = (m/k)*z_km) %>%
group_by(id) %>%
reframe(sample, ratio = sum(ratio), across(everything())) %>%
select(-c(k, m, z_km)) %>%
unique()
y = x$fit %>% unnest(cols = z_km) %>%
mutate(ratio = (m/k)*z_km) %>%
group_by(id) %>%
reframe(sample,
ratio = sum(ratio),
k = sum(k*z_km),
m = sum(m*z_km),
across(everything())) %>%
select(-c(k, m, z_km)) %>%
unique()
y
y = x$fit %>% unnest(cols = z_km) %>%
mutate(ratio = (m/k)*z_km) %>%
group_by(id) %>%
reframe(sample,
ratio = sum(ratio),
k = sum(k*z_km),
m = sum(m*z_km),
across(everything())) %>%
select(-c(z_km)) %>%
unique()
y %>% select(id, k, m, ratio, NV, DP, starts_with('purity'))
y %>%
ggplot()+
geom_bar(aes(x = k))+
facet_wrap(~tumor_type~gene_role)
y = y %>%
group_by(tumor_type) %>%
reframe(N = length(unique(sample)), across(everything()))
y
y %>%
filter(N >= 1000)
y[1:10,]$id
y %>%
filter(N >= 1000)
y %>%
filter(N >= 1000) %>%
ggplot()+
geom_bar(aes(x = k))+
facet_wrap(~tumor_type~gene_role)
y$k %>% hist()
y %>%
filter(N >= 1000) %>%
ggplot()+
geom_bar(aes(x = k))+
facet_wrap(~tumor_type~gene_role)
y %>%
filter(N >= 1000, tumor_type == 'LUAD') %>%
ggplot()+
geom_bar(aes(x = k))+
facet_wrap(~tumor_type~gene_role)
y
y %>%
filter(N >= 1000, tumor_type == 'LUAD')
y %>%
filter(N >= 1000, tumor_type == 'LUAD') %>% View()
y %>%
filter(N >= 1000, tumor_type == 'LUAD') %>%
ggplot()+
geom_histogram(aes(x = k))+
facet_wrap(~tumor_type~gene_role)
y %>%
filter(N >= 1000) %>%
ggplot()+
geom_histogram(aes(x = k))+
facet_wrap(~tumor_type~gene_role)
\priors = readRDS('./results/dirichlet_prior_parameters.rds')
priors = readRDS('./results/dirichlet_prior_parameters.rds')
priors
priors %>%
# filter(N >= 1000) %>%
ggplot()+
geom_histogram(aes(x = k))+
facet_wrap(~tumor_type~gene_role)
priors %>%
right_join(INCOMMON::cancer_gene_census) %>%
# filter(N >= 1000) %>%
ggplot()+
geom_histogram(aes(x = k))+
facet_wrap(~tumor_type~gene_role)
priors
priors %>%
right_join(INCOMMON::cancer_gene_census) %>%
rename(k = ploidy) %>%
# filter(N >= 1000) %>%
ggplot()+
geom_histogram(aes(x = k))+
facet_wrap(~tumor_type~gene_role)
priors %>%
filter(tumor_type %in% (y %>% filter(N >= 1000) %>% pull(tumor_type) %>% unique())) %>%
right_join(INCOMMON::cancer_gene_census) %>%
rename(k = ploidy) %>%
# filter(N >= 1000) %>%
ggplot()+
geom_histogram(aes(x = k))+
facet_wrap(~tumor_type~gene_role)
priors %>%
filter(tumor_type %in% (y %>% filter(N >= 1000) %>% pull(tumor_type) %>% unique())) %>%
right_join(INCOMMON::cancer_gene_census) %>%
filter(!is.na(tumor_type)) %>%
rename(k = ploidy) %>%
# filter(N >= 1000) %>%
ggplot()+
geom_histogram(aes(x = k))+
facet_wrap(~tumor_type~gene_role)
priors %>%
filter(tumor_type %in% (y %>% filter(N >= 1000) %>% pull(tumor_type) %>% unique())) %>%
right_join(INCOMMON::cancer_gene_census) %>%
filter(!is.na(tumor_type)) %>%
rename(k = ploidy) %>%
# filter(N >= 1000) %>%
ggplot()+
geom_bar(aes(x = k, y = p), stat = 'identity')+
facet_wrap(~tumor_type~gene_role)
gc = readRDS('./data/gene_info_table.RDS')
gc
gc = readRDS('./data/gene_info_table.RDS') %>% as.tibble()
gc
gc = readRDS('./data/gene_info_table.RDS') %>% as.tibble() %>% rename(gene = Hugo_Symbol)
gc
gc %>% filter(gene %in% c('PTEN','PIK3R1'))
priors
priors %>% filter(gene %in% c('PIK3R1'))
priors %>% filter(gene %in% c('PIK3R1'), tumor_type == 'UCEC')
priors %>% filter(gene %in% c('PIK3R1'), tumor_type == 'PANCA')
priors %>% filter(gene %in% c('PIK3R1'), tumor_type == 'PANCA', which_count == 'pseudo_coutn')
priors %>% filter(gene %in% c('PIK3R1'), tumor_type == 'PANCA', which_count == 'pseudo_count')
priors %>% filter(gene %in% c('PIK3R1'), tumor_type == 'PANCA', which_count == 'pseudo_count') %>%
ggplot()+
geom_bar(aes(x = k, y = p), stat = 'identity')
priors %>% filter(gene %in% c('PIK3R1'), tumor_type == 'PANCA', which_count == 'pseudo_count') %>%
ggplot()+
geom_bar(aes(x = ploidy, y = p), stat = 'identity')
priors %>% filter(gene %in% c('PIK3R1', 'PTEN', 'BCOR', 'CTNNB1'), tumor_type == 'PANCA', which_count == 'pseudo_count') %>%
ggplot()+
geom_bar(aes(x = ploidy, y = p), stat = 'identity')
priors %>% filter(gene %in% c('PIK3R1', 'PTEN', 'BCOR', 'CTNNB1'), tumor_type == 'PANCA', which_count == 'pseudo_count') %>%
ggplot()+
geom_bar(aes(x = ploidy, y = p), stat = 'identity')+
facet_wrap(~gene)
priors %>% filter(gene %in% c('PIK3R1', 'PTEN', 'BCOR', 'CTNNB1', 'ARID1A'), tumor_type == 'PANCA', which_count == 'pseudo_count') %>%
ggplot()+
geom_bar(aes(x = ploidy, y = p), stat = 'identity')+
facet_wrap(~gene)
y %>%
filter(N >= 1000) %>%
ggplot()+
geom_histogram(aes(x = k))+
facet_wrap(~tumor_type~gene_role)
priors %>%
filter(tumor_type %in% (y %>% filter(N >= 1000) %>% pull(tumor_type) %>% unique())) %>%
right_join(INCOMMON::cancer_gene_census) %>%
filter(!is.na(tumor_type)) %>%
rename(k = ploidy) %>%
# filter(N >= 1000) %>%
ggplot()+
geom_bar(aes(x = k, y = p), stat = 'identity')+
facet_wrap(~tumor_type~gene_role)
y %>%
filter(N >= 1000) %>%
filter(gene %in% c('TP53', 'KRAS', 'PIK3CA', 'KEAP1', 'APC')) %>%
ggplot()+
geom_histogram(aes(x = k))+
facet_wrap(~tumor_type~gene_role)
y %>%
filter(N >= 1000) %>%
filter(gene %in% c('TP53', 'KRAS', 'PIK3CA', 'KEAP1', 'APC')) %>%
ggplot()+
geom_histogram(aes(x = k))+
facet_wrap(~tumor_type~gene_role, scale = 'free_y')
setwd('~/Dropbox/2021. CLL CD49/scripts/')
library(tidyverse)
all_muts = lapply(c('RM238', 'CT48', 'CT287', 'TS187', 'CZ40', 'CT525', 'CT339', 'CT344'), function(patient){
data = readRDS(paste0('~/Dropbox/2021. CLL CD49/Bulk DNA/results_manual/',patient,'/results/',patient,'.rds'))
viber = data$viber
fitted_muts = data$fitted_mutations
all_muts = lapply(1:4, function(s){
data$cnaqc[s,]$cnaqc[[1]]$mutations %>%
mutate(id = paste(chr, from, to, ref, alt, sep = ':')) %>%
mutate(sample = 0+s) %>%
select(sample, id, VAF, is_driver, driver_label)
}) %>% do.call(rbind, .)
all_muts$patient = patient
all_muts %>%
full_join(
fitted_muts %>% select(id, viber_cluster)
)
}) %>% do.call(rbind, .)
p_1d = all_muts %>%
rename(cluster = viber_cluster) %>%
mutate(cluster = ifelse(is.na(cluster), 'Other', cluster)) %>%
# mutate(cluster = ifelse(cluster == 'Truncal', 'C', cluster)) %>%
mutate(cluster = ifelse(patient == 'CT344' & cluster == 'H1', 'S3', cluster)) %>%
mutate(cluster = ifelse(patient == 'TS187' & cluster == 'S4', 'Other', cluster)) %>%
# mutate(cluster = factor(cluster, levels = c('S1', 'S2', 'S3', 'C', 'Other') %>% rev())) %>%
mutate(
sample = case_when(
sample == 1 ~ 'T1-',
sample == 2 ~ 'T1+',
sample == 3 ~ 'T2-',
sample == 4 ~ 'T2+'
)
) %>%
# filter(sample %in% c('T2-', 'T2+')) %>%
filter(VAF > 0 , VAF < .75) %>%
ggplot(aes(x = VAF, fill = cluster))+
geom_histogram(binwidth = 0.01)+
ggrepel::geom_label_repel(
data = . %>% filter(is_driver, cluster != 'Other', !is.na(cluster)),
aes(label = driver_label, y = 0),
show.legend = F,
# ylim = c(150, 400),
force_pull = -5,
size = 2,
segment.linetype = 2
)+
scale_fill_manual(values = c('Truncal' = 'firebrick', 'S1' = 'goldenrod1', 'S2' = 'forestgreen','S3' = 'purple3', 'S4' = 'deepskyblue', 'Other' = 'gainsboro'))+
scale_x_continuous(breaks = scales::pretty_breaks(n=2))+
scale_y_continuous(breaks = scales::pretty_breaks(n=2), position = 'right')+
CNAqc:::my_ggplot_theme(cex = .8)+
labs(y = '# Mutations')+
ggh4x::facet_grid2(~patient~sample, scales = 'free_y', switch = 'y')+
theme(
strip.text.y.left = element_text(angle = 0)
)
p_1d
toplot = all_muts %>%
full_join(
fitted_muts %>% select(id, viber_cluster)
) %>%
rename(cluster = viber_cluster) %>%
mutate(cluster = ifelse(is.na(cluster), 'Other', cluster)) %>%
mutate(cluster = ifelse(cluster == 'H1', 'S3', cluster)) %>%
mutate(cluster = ifelse(cluster == 'Truncal', 'C', cluster)) %>%
mutate(cluster = factor(cluster, levels = c( 'Other','S1', 'S2', 'S3', 'C'))) %>%
mutate(
sample = case_when(
sample == 1 ~ 'T1-',
sample == 2 ~ 'T1+',
sample == 3 ~ 'T2-',
sample == 4 ~ 'T2+'
)
) %>%
filter(sample %in% c('T2-', 'T2+')) %>%
filter(VAF > 0 , VAF < .75) %>%
pivot_wider(names_from = sample, values_from = VAF, names_prefix = 'VAF.') %>%
mutate(
`VAF.T2-` = ifelse(is.na(`VAF.T2-`), 0, `VAF.T2-`),
`VAF.T2+` = ifelse(is.na(`VAF.T2+`), 0, `VAF.T2+`)
)
p_2d = toplot %>% ggplot(aes(x = `VAF.T2-`, y = `VAF.T2+`))+
geom_point(data = subset(toplot, cluster == 'Other'), aes(color = cluster), alpha = .1)+
geom_point(data = subset(toplot, cluster == 'S1'), aes(color = cluster), alpha = 0.25)+
geom_point(data = subset(toplot, cluster == 'S2'), aes(color = cluster), alpha = 0.25)+
geom_point(data = subset(toplot, cluster == 'S3'), aes(color = cluster), alpha = 0.25)+
geom_point(data = subset(toplot, cluster == 'C'), aes(color = cluster), alpha = 0.25)+
geom_point(data = subset(toplot, cluster == 'S1'), aes(x = mean(`VAF.T2-`), y = mean(`VAF.T2+`), fill = cluster), shape = 21, size = 3, color = 'black')+
geom_point(data = subset(toplot, cluster == 'S2'), aes(x = mean(`VAF.T2-`), y = mean(`VAF.T2+`), fill = cluster), shape = 21, size = 3, color = 'black')+
geom_point(data = subset(toplot, cluster == 'S3'), aes(x = mean(`VAF.T2-`), y = mean(`VAF.T2+`), fill = cluster), shape = 21, size = 3, color = 'black')+
geom_point(data = subset(toplot, cluster == 'C'), aes(x = mean(`VAF.T2-`), y = mean(`VAF.T2+`), fill = cluster), shape = 21, size = 3, color = 'black')+
scale_color_manual(values = c('Other' = 'gainsboro','C' = '#BE1825', 'S1' = '#6AAE68', 'S2' = '#6FBEE1', 'S3' = 'darkorange'))+
scale_fill_manual(values = c('Other' = 'gainsboro','C' = '#BE1825', 'S1' = '#6AAE68', 'S2' = '#6FBEE1', 'S3' = 'darkorange'))+
scale_x_continuous(breaks = scales::pretty_breaks(n=2))+
scale_y_continuous(breaks = scales::pretty_breaks(n=2))+
CNAqc:::my_ggplot_theme(cex = .8)
setwd('~/Dropbox/2021. CLL CD49/')
openxlsx::read.xlsx('./sheets/sample_sheet.xlsx')
x = openxlsx::read.xlsx('./sheets/sample_sheet.xlsx')
x %>% as_tibble()
library(tidyverse)
x %>% as_tibble()
x = x %>% as_tibble()
x
x %>% filter(Treated=='N', CD49d == 'NEG') %>% select(patient, timepoint, Sampling.Time)
x
x %>% filter(Treated=='N', CD49d == 'NEG') %>% select(patient, timepoint, Sampling.Time)
x = readxl::read_xlsx('./sheets/sample_sheet.xlsx')
x
x = x %>% as_tibble()
x %>% filter(Treated=='N', CD49d == 'NEG') %>% select(patient, timepoint, Sampling.Time)
x = readxl::read_xlsx('./sheets/sample_sheet.xlsx')
x$`Sampling Time`
x %>% as_tibble()
x %>% as_tibble() %>% select(patient, timepoint, Sampling.Time)
x %>% select(patient, timepoint, Sampling.Time)
x = x %>% as_tibble()
x %>% filter(Treated=='N', CD49d == 'NEG') %>% select(patient, timepoint, `Sampling Time`)
x %>%
filter(Treated=='N', CD49d == 'NEG') %>%
select(patient, timepoint, `Sampling Time`) %>%
group_by(patient) %>% reframe(delta_t = diff(`Sampling Time`))
x %>%
filter(Treated=='N', CD49d == 'NEG') %>%
select(patient, timepoint, `Sampling Time`) %>%
group_by(patient) %>% reframe(delta_t = diff(`Sampling Time`)) %>%
pull(delta_t) %>% median()
956.5/30
