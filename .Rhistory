reframe(n = length(unique(sample)), N) %>%
rowwise() %>%
mutate(frequency = n/N) %>%
ggplot() +
geom_bar(aes(x = '', y = frequency, fill = state), stat = 'identity')+
# scale_fill_manual(values = colors)+
INCOMMON:::scale_color_INCOMMON_class(aes = 'fill')+
xlab('')+ylab('N samples')+
coord_flip()+
theme_bw()+
facet_wrap(~cutoff, nrow = 2)+
guides(fill = guide_legend(title = 'INCOMMON class'))
rbind(classified_data_no_cutoff %>%
filter(state != 'Tier-2') %>%
mutate(cutoff = 'No entropy cutoff'),
classified_data_with_cutoff %>%
filter(state != 'Tier-2') %>%
mutate(cutoff = 'Entropy cut-off')) %>%
group_by(cutoff) %>%
reframe(N = length(unique(sample)), state)
rbind(classified_data_no_cutoff %>%
filter(state != 'Tier-2') %>%
mutate(cutoff = 'No entropy cutoff'),
classified_data_with_cutoff %>%
filter(state != 'Tier-2') %>%
mutate(cutoff = 'Entropy cut-off')) %>%
group_by(state, cutoff) %>%
reframe(n = length(unique(sample))) %>%
group_by(cutoff) %>%
reframe(N = sum(n))
rbind(classified_data_no_cutoff %>%
filter(state != 'Tier-2') %>%
mutate(cutoff = 'No entropy cutoff'),
classified_data_with_cutoff %>%
filter(state != 'Tier-2') %>%
mutate(cutoff = 'Entropy cut-off')) %>%
group_by(state, cutoff) %>%
reframe(n = length(unique(sample))) %>%
group_by(cutoff) %>%
reframe(N = sum(n), state, n)
rbind(classified_data_no_cutoff %>%
filter(state != 'Tier-2') %>%
mutate(cutoff = 'No entropy cutoff'),
classified_data_with_cutoff %>%
filter(state != 'Tier-2') %>%
mutate(cutoff = 'Entropy cut-off')) %>%
group_by(state, cutoff) %>%
reframe(n = length(unique(sample))) %>%
group_by(cutoff) %>%
reframe(N = sum(n), state, n) %>%
mutate(frequency = n/N) %>%
ggplot() +
geom_bar(aes(x = '', y = frequency, fill = state), stat = 'identity')+
# scale_fill_manual(values = colors)+
INCOMMON:::scale_color_INCOMMON_class(aes = 'fill')+
xlab('')+ylab('N samples')+
coord_flip()+
theme_bw()+
facet_wrap(~cutoff, nrow = 2)+
guides(fill = guide_legend(title = 'INCOMMON class'))
setwd('~/dati/final_tc/')
library(tidyverse)
source('~/dati/final_tc/scripts/library.R')
data_MSK = prepare_msk_data() %>%
convert_tumor_types() %>%
select(sample, tumor_type, purity, chr, from, to, ref, alt, gene,
NV, DP, VAF,
SAMPLE_TYPE, PRIMARY_SITE, MET_COUNT, MET_SITE_COUNT, METASTATIC_SITE,
SUBTYPE_ABBREVIATION, GENE_PANEL,
TMB_NONSYNONYMOUS, FGA) %>%
filter(!is.na(purity)) %>%
mutate(NV = as.integer(NV), DP = as.integer(DP)) %>%
ungroup()
clindata = read_tsv(clinical_data, comment = "#")
clindata = read_tsv("./input_data/msk_met_2021/data_clinical_patient.txt", comment = "#")
survdata = full_join(data %>%
mutate(sample = substr(sample, start = 1, stop = 9)),
clindata %>%
rename(sample = PATIENT_ID))
survdata = full_join(data_MSK %>%
mutate(sample = substr(sample, start = 1, stop = 9)),
clindata %>%
rename(sample = PATIENT_ID))
survdata
survdata %>% colnames()
survdata
survdata %>% View()
survdata %>%
na.omit()
survdata %>%
drop_na()
survdata
clindata
clindata %>%
drop_na() %>%
rename(sample = PATIENT_ID)
clindata %>%
drop.na() %>%
rename(sample = PATIENT_ID)
clindata %>%
tidyverse::drop_na()
clindata %>%
drop_na()
clindata
clindata[1,]
clindata[1,] %>% View()
clindata %>%
select(starts_with('OS'), AGE_AT_DEATH) %>%
drop_na()
survdata = full_join(data_MSK %>%
mutate(sample = substr(sample, start = 1, stop = 9)),
clindata %>%
select(starts_with('OS'), AGE_AT_DEATH) %>%
mutate(OS_STATUS = gsub("([0-9]+).*$", "\\1",OS_STATUS) %>% as.numeric()) %>%
drop_na() %>%
rename(sample = PATIENT_ID))
survdata = full_join(data_MSK %>%
mutate(sample = substr(sample, start = 1, stop = 9)),
clindata %>%
rename(sample = PATIENT_ID) %>%
select(sample, starts_with('OS'), AGE_AT_DEATH) %>%
mutate(OS_STATUS = gsub("([0-9]+).*$", "\\1",OS_STATUS) %>% as.numeric()) %>%
drop_na())
survdata
data_MSK
survdata
survdata
library(INCOMMON)
library(tidyverse)
x = init(
mutations = what,
sample = s,
tumor_type = unique(what$tumor_type),
purity = unique(what$purity),
gene_roles = cancer_gene_census
)
data = data_MSK %>% filter(tumor_type == 'PAAD', gene == 'KRAS')
s = data$sample[1]
x = init(
mutations = what,
sample = s,
tumor_type = unique(what$tumor_type),
purity = unique(what$purity),
gene_roles = cancer_gene_census
)
what = data %>% filter(sample == s)
x = init(
mutations = what,
sample = s,
tumor_type = unique(what$tumor_type),
purity = unique(what$purity),
gene_roles = cancer_gene_census
)
x
print(x)
data(x)
INCOMMON:::data(x)
x
devtools::load_all()
setwd('~/Documents/GitHub/INCOMMON/')
devtools::load_all()
x
info(x, id)
survdata[1:10,]
mutations = survdata[1:10,]
classified_data_no_cutoff = lapply((data$sample %>% unique())[1:10], function(s){
what = data %>% filter(sample == s)
x = init(
mutations = what,
sample = s,
tumor_type = unique(what$tumor_type),
purity = unique(what$purity),
gene_roles = cancer_gene_census
)
x = classify(
x = x,
priors = pcawg_priors,
entropy_cutoff = 1,
rho = 0.01
)
# output = classification(x)
return(output)
})
classified_data_no_cutoff = lapply((data$sample %>% unique())[1:10], function(s){
what = data %>% filter(sample == s)
x = init(
mutations = what,
sample = s,
tumor_type = unique(what$tumor_type),
purity = unique(what$purity),
gene_roles = cancer_gene_census
)
x = classify(
x = x,
priors = pcawg_priors,
entropy_cutoff = 1,
rho = 0.01
)
# output = classification(x)
output = x
return(output)
})
# %>% do.call(rbind, .)
classified_data_no_cutoff
classified_data_no_cutoff[[1]]
classified_data_no_cutoff[[2]]
classified_data_no_cutoff[[3]]
classified_data_no_cutoff[[3]]$fit$posterior
survdata
survdata
setwd('~/dati/final_tc/')
library(tidyverse)
source('~/dati/final_tc/scripts/library.R')
data_MSK = prepare_msk_data() %>%
convert_tumor_types() %>%
select(sample, tumor_type, purity, chr, from, to, ref, alt, gene,
NV, DP, VAF,
SAMPLE_TYPE, PRIMARY_SITE, MET_COUNT, MET_SITE_COUNT, METASTATIC_SITE,
SUBTYPE_ABBREVIATION, GENE_PANEL,
TMB_NONSYNONYMOUS, FGA) %>%
filter(!is.na(purity)) %>%
mutate(NV = as.integer(NV), DP = as.integer(DP)) %>%
ungroup()
setwd('~/dati/final_tc/')
library(tidyverse)
source('~/dati/final_tc/scripts/library.R')
data_MSK = prepare_msk_data() %>%
convert_tumor_types() %>%
select(sample, tumor_type, purity, chr, from, to, ref, alt, gene,
NV, DP, VAF,
SAMPLE_TYPE, PRIMARY_SITE, MET_COUNT, MET_SITE_COUNT, METASTATIC_SITE,
SUBTYPE_ABBREVIATION, GENE_PANEL,
TMB_NONSYNONYMOUS, FGA) %>%
filter(!is.na(purity)) %>%
mutate(NV = as.integer(NV), DP = as.integer(DP)) %>%
ungroup()
clindata = read_tsv("./input_data/msk_met_2021/data_clinical_patient.txt", comment = "#")
survdata = full_join(data_MSK %>%
mutate(sample = substr(sample, start = 1, stop = 9)),
clindata %>%
rename(sample = PATIENT_ID) %>%
select(sample, starts_with('OS'), AGE_AT_DEATH) %>%
mutate(OS_STATUS = gsub("([0-9]+).*$", "\\1",OS_STATUS) %>% as.numeric()) %>%
drop_na())
# msk = msk %>%
#   filter(tumor_type %in% c('LUAD','PAAD'),
#          gene %in% c('TP53', 'SMAD4', 'KRAS', 'ARID1A', 'CDKN2A', 'RNF43',
#                      'KEAP1', 'EGFR', 'STK11', 'RB1', 'APC'),
#          !is.na(purity))
setwd('~/Documents/GitHub/INCOMMON/')
survdata
survdata
data_MSK = survdata
save(data_MSK, file = './data/data_MSK.rda')
library(INCOMMON)
library(tidyverse)
load("~/Documents/GitHub/INCOMMON/data/data_MSK.rda")
data_MSK %>% filter(tumor_type == 'PAAD', gene == 'KRAS')
setwd('~/dati/final_tc/')
library(tidyverse)
source('~/dati/final_tc/scripts/library.R')
data_MSK = prepare_msk_data() %>%
convert_tumor_types() %>%
select(sample, tumor_type, purity, chr, from, to, ref, alt, gene,
NV, DP, VAF,
SAMPLE_TYPE, PRIMARY_SITE, MET_COUNT, MET_SITE_COUNT, METASTATIC_SITE,
SUBTYPE_ABBREVIATION, GENE_PANEL,
TMB_NONSYNONYMOUS, FGA) %>%
filter(!is.na(purity)) %>%
mutate(NV = as.integer(NV), DP = as.integer(DP)) %>%
ungroup()
clindata = read_tsv("./input_data/msk_met_2021/data_clinical_patient.txt", comment = "#")
clindata %>%
rename(sample = PATIENT_ID) %>%
select(sample, starts_with('OS'), AGE_AT_DEATH) %>%
mutate(OS_STATUS = gsub("([0-9]+).*$", "\\1",OS_STATUS) %>% as.numeric()) %>%
drop_na() %>% View()
survdata = right_join(data_MSK %>%
mutate(sample = substr(sample, start = 1, stop = 9)),
clindata %>%
rename(sample = PATIENT_ID) %>%
select(sample, starts_with('OS'), AGE_AT_DEATH) %>%
mutate(OS_STATUS = gsub("([0-9]+).*$", "\\1",OS_STATUS) %>% as.numeric()) %>%
drop_na())
survdata
setwd('~/Documents/GitHub/INCOMMON/')
data_MSK = survdata
save(data_MSK, file = './data/data_MSK.rda')
library(INCOMMON)
library(tidyverse)
data = data_MSK %>% filter(tumor_type == 'PAAD', gene == 'KRAS')
data_MSK
load("~/Documents/GitHub/INCOMMON/data/data_MSK.rda")
data_MSK
data_MSK %>% filter(tumor_type == 'PAAD', gene == 'KRAS')
data = data_MSK %>% filter(tumor_type == 'PAAD', gene == 'KRAS')
classified_data_no_cutoff = lapply((data$sample %>% unique())[1:10], function(s){
what = data %>% filter(sample == s)
x = init(
mutations = what,
sample = s,
tumor_type = unique(what$tumor_type),
purity = unique(what$purity),
gene_roles = cancer_gene_census
)
x = classify(
x = x,
priors = pcawg_priors,
entropy_cutoff = 1,
rho = 0.01
)
# output = classification(x)
output = x
return(output)
})
# %>% do.call(rbind, .)
classified_data_no_cutoff
classified_data = lapply((data$sample %>% unique())[1:10], function(s){
what = data %>% filter(sample == s)
x = init(
mutations = what,
sample = s,
tumor_type = unique(what$tumor_type),
purity = unique(what$purity),
gene_roles = cancer_gene_census
)
x = classify(
x = x,
priors = pcawg_priors,
entropy_cutoff = 1,
rho = 0.01
)
# output = classification(x)
output = x
return(output)
})
# %>% do.call(rbind, .)
rm(classified_data_no_cutoff)
lapply(classified_data, function(x) {})
lapply(classified_data, function(x) {
INCOMMON:::classification(x)
}) %>% do.call(rbind, .)
classified_data
devtools::load_all()
devtools::load_all()
lapply(classified_data, function(x) {
classification(x)
}) %>% do.call(rbind, .)
lapply(classified_data, function(x) {
stopifnot(inherits(x, 'INCOMMON'))
classification(x)
}) %>% do.call(rbind, .) %>%
filter(gene == 'KRAS', tumor_type == 'PAAD')
lapply(classified_data, function(x) {
stopifnot(inherits(x, 'INCOMMON'))
classification(x)
}) %>% do.call(rbind, .) %>%
dplyr::filter(gene == 'KRAS', tumor_type == 'PAAD') %>%
dplyr::group_by(state) %>%
dplyr::reframe(n = unique(length(sample)))
classified_data
lapply(classified_data, function(x) {
stopifnot(inherits(x, 'INCOMMON'))
classification(x)
}) %>% do.call(rbind, .) %>%
dplyr::filter(gene == 'KRAS', tumor_type == 'PAAD') %>%
dplyr::group_by(state) %>%
dplyr::reframe(n = unique(length(sample)))
lapply(classified_data, function(x) {
stopifnot(inherits(x, 'INCOMMON'))
classification(x)
}) %>% do.call(rbind, .) %>%
dplyr::filter(gene == 'KRAS', tumor_type == 'PAAD') %>%
dplyr::group_by(state) %>%
dplyr::reframe(n = unique(length(sample))) %>%
dplyr::mutate(N = sum(n))
lapply(classified_data, function(x) {
stopifnot(inherits(x, 'INCOMMON'))
classification(x)
}) %>% do.call(rbind, .) %>%
dplyr::filter(gene == 'KRAS', tumor_type == 'PAAD') %>%
dplyr::group_by(state) %>%
dplyr::reframe(n = unique(length(sample))) %>%
dplyr::mutate(N = sum(n), frequency = n/N)
frequency_table = lapply(classified_data, function(x) {
stopifnot(inherits(x, 'INCOMMON'))
classification(x)
}) %>% do.call(rbind, .) %>%
dplyr::filter(gene == 'KRAS', tumor_type == 'PAAD') %>%
dplyr::group_by(state) %>%
dplyr::reframe(n = unique(length(sample))) %>%
dplyr::mutate(N = sum(n), frequency = n/N)
cbind(tibble(gene = gene, tumor_type = tumor_type, frequency_table)
cbind(tibble(gene = gene, tumor_type = tumor_type), frequency_table)
gene = 'KRAS'
tumor_type = 'PAAD'
cbind(tibble(gene = gene, tumor_type = tumor_type), frequency_table)
classified_data[[1]]
classified_data[[1]]$data
clindata
devtools::load_all()
devtools::load_all()
class_frequency(x = classified_data, tumor_type = 'PAAD', gene = 'KRAS')
class_frequency(x = classified_data, tumor_type = 'PAAD', gene = 'KRAS')
class_frequency(x = classified_data, tumor_type = 'PAAD', gene = 'KRAS')
class_frequency(x = classified_data, tumor_type = 'PAAD', gene = 'KRAS')
class_frequency(x, tumor_type, gene)
class_frequency(classified_data, tumor_type, gene)
scale_color_INCOMMON_class
devtools::load_all()
scale_color_INCOMMON_class
class_frequency(classified_data, tumor_type, gene) %>%
ggplot()+
geom_bar(aes(x = '', fill = state))+
scale_color_INCOMMON_class(aes = 'fill')
class_frequency(classified_data, tumor_type, gene) %>%
ggplot()+
geom_bar(aes(x = '', fill = state))+
scale_color_INCOMMON_class(aes = 'fill')+
xlab('')+ylab('N samples')+
coord_flip()
class_frequency(classified_data, tumor_type, gene) %>%
ggplot()+
geom_bar(aes(x = '', y = frequency, fill = state))
class_frequency(classified_data, tumor_type, gene) %>%
ggplot()+
geom_bar(aes(x = '', y = frequency, fill = state), stat = 'identity')
class_frequency(classified_data, tumor_type, gene) %>%
ggplot()+
geom_bar(aes(x = '', y = frequency, fill = state), stat = 'identity')+
scale_color_INCOMMON_class(aes = 'fill')+
xlab('')+ylab('N samples')+
coord_flip()+
theme_bw()+
facet_wrap(~cutoff, nrow = 2)+
guides(fill = guide_legend(title = 'INCOMMON class'))
class_frequency(classified_data, tumor_type, gene) %>%
ggplot()+
geom_bar(aes(x = '', y = frequency, fill = state), stat = 'identity')+
scale_color_INCOMMON_class(aes = 'fill')+
xlab('')+ylab('N samples')+
coord_flip()+
theme_bw()+
guides(fill = guide_legend(title = 'INCOMMON class'))
class_frequency(classified_data, tumor_type, gene) %>%
ggplot()+
geom_bar(aes(x = '', y = frequency, fill = state), stat = 'identity')+
scale_color_INCOMMON_class(aes = 'fill')+
xlab('')+ylab('N samples')+
coord_flip()+
CNAqc:::my_ggplot_theme(cex = .8)+
guides(fill = guide_legend(title = 'INCOMMON class'))
class_frequency(classified_data, tumor_type, gene)
class_frequency(classified_data, tumor_type, gene) %>%
ggplot()+
geom_bar(aes(x = '', y = frequency, fill = state), stat = 'identity')+
scale_color_INCOMMON_class(aes = 'fill')+
xlab('')+ylab('N samples')+
coord_flip()+
CNAqc:::my_ggplot_theme(cex = .8)+
guides(fill = guide_legend(title = 'INCOMMON class'))+
labs(title = paste0(gene, ' (', tumor_type, ')'), subtitle = paste0('N = ', N))
toplot = class_frequency(classified_data, tumor_type, gene)
toplot %>%
ggplot()+
geom_bar(aes(x = '', y = frequency, fill = state), stat = 'identity')+
scale_color_INCOMMON_class(aes = 'fill')+
xlab('')+ylab('N samples')+
coord_flip()+
CNAqc:::my_ggplot_theme(cex = .8)+
guides(fill = guide_legend(title = 'INCOMMON class'))+
labs(title = paste0(gene, ' (', tumor_type, ')'), subtitle = paste0('N = ', unique(toplot$N)))
toplot %>%
ggplot()+
geom_bar(aes(x = '', y = frequency, fill = state), stat = 'identity')+
scale_color_INCOMMON_class(aes = 'fill')+
xlab('')+ylab('Fraction')+
coord_flip()+
CNAqc:::my_ggplot_theme(cex = .8)+
guides(fill = guide_legend(title = 'INCOMMON class'))+
labs(title = paste0(gene, ' (', tumor_type, ')'), subtitle = paste0('N = ', unique(toplot$N)))
classified_data
classified_data[[1]]
classified_data[[1]]$sample
classification(classified_data[[1]])
sample(classified_data[[1]])
samples(classified_data[[1]])
classification(classified_data[[1]])
classification(classified_data[[1]]) %>% dplyr::mutate(sample = samples(classified_data[[1]])))
classification(classified_data[[1]]) %>% dplyr::mutate(sample = samples(classified_data[[1]]))
samples
devtools::load_all()
class_frequency(classified_data, tumor_type, gene)
toplot %>%
ggplot()+
geom_bar(aes(x = '', y = frequency, fill = state), stat = 'identity')+
scale_color_INCOMMON_class(aes = 'fill')+
xlab('')+ylab('Fraction')+
coord_flip()+
CNAqc:::my_ggplot_theme(cex = .8)+
guides(fill = guide_legend(title = 'INCOMMON class'))+
labs(title = paste0(gene, ' (', tumor_type, ')'), subtitle = paste0('N = ', unique(toplot$N)))
data$sample %>% unique()
data %>% filter(sample==s)
s = "P-0010804"
data %>% filter(sample==s)
data %>% filter(sample==s) %>% purity()
data %>% filter(sample==s) %>% tumor_type()
devtools::load_all()
devtools::load_all()
plot_class_fraction(x = classified_data, tumor_type = 'PAAD', gene = 'KRAS')
plot_class_fraction(x = classified_data, tumor_type = 'PAAD', gene = 'KRAS')
